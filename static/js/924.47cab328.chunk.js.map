{"version":3,"file":"static/js/924.47cab328.chunk.js","mappings":"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","sources":["components/FoodTracker/enhanced-efficiency-functions.js","components/FoodTracker/FoodTrackerAnalysis.js","components/FoodTracker/FoodTrackerPage.js"],"sourcesContent":["// enhanced-efficiency-functions.js - Fixed with proper time sorting and chronological line positioning\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n// Long COVID Severity Factors\n// FIXED: Long COVID RDA Multipliers (for increased nutritional requirements)\nexport const getSeverityFactor = (severity) => {\n  // These factors represent INCREASED nutritional NEEDS due to COVID severity\n  const severityFactors = {\n    'mild': 1.2,        // 20% increase in RDA requirements\n    'moderate': 1.5,    // 50% increase in RDA requirements  \n    'severe': 1.8,      // 80% increase in RDA requirements\n    'very severe': 2.2  // 120% increase in RDA requirements\n  };\n  return severityFactors[severity?.toLowerCase()] || 1.0;\n};\n\n// NEW: Separate function for metabolic efficiency (where lower values make sense)\nexport const getMetabolicEfficiencyFactor = (severity) => {\n  const severityFactors = {\n    'mild': 0.95,       // Slightly reduced efficiency\n    'moderate': 0.85,   // Moderately reduced efficiency\n    'severe': 0.75,     // Significantly reduced efficiency\n    'very severe': 0.65 // Severely reduced efficiency\n  };\n  return severityFactors[severity?.toLowerCase()] || 0.85;\n};\n\n// UPDATED: Calculate Food Efficiency using the correct factor for efficiency + expanded snack types\nexport const calculateFoodEfficiency = (mealData, userProfile) => {\n  const timeStr = mealData.time;\n  const hourMatch = timeStr.match(/(\\d+):/);\n  const hour = hourMatch ? parseInt(hourMatch[1], 10) : 12;\n  const isPM = timeStr.toLowerCase().includes('pm');\n  \n  let hour24 = hour;\n  if (isPM && hour !== 12) hour24 += 12;\n  if (!isPM && hour === 12) hour24 = 0;\n  \n  // Macronutrient factors\n  const proteinFactor = (parseFloat(mealData.protein) || 0) * 0.2;\n  const carbFactor = (parseFloat(mealData.carbs) || 0) * 0.1;\n  const fatFactor = (parseFloat(mealData.fat) || 0) * 0.15;\n  \n  // Circadian rhythm factors\n  let timeFactor = 1.0;\n  if (hour24 < 6 || hour24 > 20) {\n    timeFactor = 0.7;\n  } else if (hour24 >= 7 && hour24 <= 10) {\n    timeFactor = 1.2;\n  } else if (hour24 >= 17 && hour24 <= 19) {\n    timeFactor = 0.9;\n  }\n  \n  // UPDATED: Expanded meal type factors including all snack types\n  const mealTypeFactors = {\n    'Breakfast': 1.3,\n    'Morning Snack': 0.9,      // Good mid-morning metabolism\n    'Lunch': 1.1,\n    'Afternoon Snack': 0.8,    // Decent afternoon metabolism\n    'Dinner': 0.9,\n    'Late Night Snack': 0.6   // Lower efficiency for late eating\n            // Keep original for backward compatibility\n  };\n  const mealTypeFactor = mealTypeFactors[mealData.mealType] || 1.0;\n  \n  // Base efficiency calculation\n  const macroBalance = Math.min(100, (proteinFactor + carbFactor + fatFactor) * 10);\n  let efficiency = macroBalance * timeFactor * mealTypeFactor;\n  \n  // Long COVID adjustments - FIXED to use metabolic efficiency factor\n  if (mealData.longCovidAdjust && userProfile?.hasLongCovid) {\n    const severityFactor = getMetabolicEfficiencyFactor(userProfile.longCovidSeverity); // CHANGED: Use metabolic efficiency factor\n    efficiency *= severityFactor;\n    \n    // Boost for beneficial foods\n    if (mealData.longCovidBenefits && mealData.longCovidBenefits.length > 0) {\n      efficiency *= 1.1;\n    }\n    \n    // Reduce for problematic foods\n    if (mealData.longCovidCautions && mealData.longCovidCautions.length > 0) {\n      efficiency *= 0.9;\n    }\n  }\n  \n  return Math.min(100, Math.max(0, efficiency));\n};\n\n// Micronutrient enhancement functions\nexport const estimateMicronutrientEnhancement = (micronutrients, severity) => {\n  const severityMultipliers = {\n    'mild': 1.2,\n    'moderate': 1.5,\n    'severe': 1.8,\n    'very severe': 2.0\n  };\n  \n  const multiplier = severityMultipliers[severity?.toLowerCase()] || 1.0;\n  const enhancedMicronutrients = {};\n  \n  // Key nutrients for Long COVID recovery\n  const keyNutrients = [\n    'vitamin_c', 'vitamin_d', 'zinc', 'selenium', 'vitamin_b6', \n    'vitamin_b12', 'folate', 'iron', 'magnesium'\n  ];\n  \n  Object.entries(micronutrients).forEach(([nutrient, data]) => {\n    if (keyNutrients.includes(nutrient)) {\n      enhancedMicronutrients[nutrient] = {\n        ...data,\n        recommendedValue: (data.value || 0) * multiplier,\n        isEnhanced: true,\n        reason: `Increased for Long COVID ${severity} severity`\n      };\n    } else {\n      enhancedMicronutrients[nutrient] = {\n        ...data,\n        recommendedValue: data.value || 0,\n        isEnhanced: false\n      };\n    }\n  });\n  \n  return enhancedMicronutrients;\n};\n\n// Standard micronutrient enhancement (non-Long COVID)\nexport const estimateStandardMicronutrientEnhancement = (micronutrients, userProfile) => {\n  const enhancedMicronutrients = {};\n  \n  Object.entries(micronutrients).forEach(([nutrient, data]) => {\n    let multiplier = 1.0;\n    \n    // Age-based adjustments\n    if (userProfile.age > 65) {\n      if (['vitamin_d', 'vitamin_b12', 'calcium'].includes(nutrient)) {\n        multiplier *= 1.2;\n      }\n    }\n    \n    // Gender-based adjustments\n    if (userProfile.gender === 'female') {\n      if (nutrient === 'iron') {\n        multiplier *= 2.25; // Women need more iron\n      }\n    }\n    \n    // Activity level adjustments\n    if (userProfile.activityLevel === 'high' || userProfile.activityLevel === 'very_high') {\n      if (['magnesium', 'iron', 'vitamin_b1', 'vitamin_b2'].includes(nutrient)) {\n        multiplier *= 1.3;\n      }\n    }\n    \n    enhancedMicronutrients[nutrient] = {\n      ...data,\n      recommendedValue: (data.value || 0) * multiplier,\n      isEnhanced: multiplier > 1.0,\n      reason: multiplier > 1.0 ? 'Adjusted for demographics and activity' : 'Standard recommendation'\n    };\n  });\n  \n  return enhancedMicronutrients;\n};\n\n// FIXED: Enhanced Efficiency Chart Component with proper time sorting and linting fixes\nexport const EnhancedEfficiencyChart = ({ data, userData }) => {\n  const chartRef = useRef(null);\n  const [processedData, setProcessedData] = useState([]);\n  \n  useEffect(() => {\n    if (!data || data.length === 0) return;\n    \n    // Process meals with enhanced efficiency calculations\n    const updatedData = data.map(meal => {\n      const efficiency = calculateFoodEfficiency(meal, userData);\n      return {\n        ...meal,\n        originalEfficiency: meal.efficiency || 80,\n        enhancedEfficiency: efficiency,\n        actualEnergy: meal.calories * (efficiency / 100),\n        wastedEnergy: meal.calories * ((100 - efficiency) / 100)\n      };\n    });\n    \n    setProcessedData(updatedData);\n  }, [data, userData]);\n  \n  useEffect(() => {\n    if (!chartRef.current || !processedData || processedData.length === 0) return;\n    \n    // FIXED: Move convertTo24Hour inside useEffect to avoid dependency issues\n    const convertTo24Hour = (time12h) => {\n      if (!time12h) return '12:00';\n      \n      const [time, modifier] = time12h.split(' ');\n      if (!time || !modifier) return time12h;\n      \n      let [hours, minutes] = time.split(':');\n      let hour24 = parseInt(hours, 10);\n      \n      if (modifier.toUpperCase() === 'AM') {\n        if (hour24 === 12) hour24 = 0;\n      } else if (modifier.toUpperCase() === 'PM') {\n        if (hour24 !== 12) hour24 += 12;\n      }\n      \n      return `${hour24.toString().padStart(2, '0')}:${minutes}`;\n    };\n    \n    // Clear previous chart\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n    \n    // Set dimensions\n    const margin = { top: 60, right: 120, bottom: 140, left: 70 };\n    const width = 800 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n    \n    // Create SVG\n    const svg = d3.select(chartRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n    // Chart title\n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", -30)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"18px\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Enhanced Metabolic Efficiency Chart\");\n      \n    // Chart subtitle\n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", -10)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"14px\")\n      .style(\"font-style\", \"italic\")\n      .text(\"Optimized for Long COVID energy management\");\n    \n    // Filter data to only include the last week\n    const today = new Date();\n    const oneWeekAgo = new Date();\n    oneWeekAgo.setDate(today.getDate() - 7);\n    \n    const lastWeekData = processedData.filter(meal => {\n      try {\n        const mealDate = new Date(meal.date);\n        return mealDate >= oneWeekAgo;\n      } catch (err) {\n        console.warn('Error parsing date:', meal.date);\n        return false;\n      }\n    });\n    \n    // Generate an array of all days in the past week\n    const allDatesInRange = [];\n    for (let i = 6; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(today.getDate() - i);\n      const formattedDate = date.toISOString().split('T')[0];\n      allDatesInRange.push(formattedDate);\n    }\n    \n    // Group data by date and meal type\n    const combinedData = [];\n    const groupedByDate = d3.group(lastWeekData, d => d.date);\n    \n    // UPDATED: Expanded unique meal types to include all snack categories\n    const uniqueMealTypes = ['Breakfast', 'Morning Snack', 'Lunch', 'Afternoon Snack', 'Dinner', 'Late Night Snack'];\n    \n    allDatesInRange.forEach(date => {\n      const dateData = groupedByDate.get(date) || [];\n      \n      if (dateData.length > 0) {\n        const mealsByType = d3.group(dateData, d => d.mealType);\n      \n        mealsByType.forEach((meals, mealType) => {\n          const totalCalories = d3.sum(meals, d => d.calories);\n          const weightedEfficiency = meals.reduce((acc, meal) => {\n            return acc + (meal.enhancedEfficiency * meal.calories / totalCalories);\n          }, 0);\n          \n          const totalActualEnergy = d3.sum(meals, d => d.actualEnergy);\n          const totalWastedEnergy = totalCalories - totalActualEnergy;\n          \n          combinedData.push({\n            date: date,\n            mealType: mealType,\n            time: meals[0].time,\n            name: `${mealType} (${meals.length} items)`,\n            efficiency: Math.round(weightedEfficiency),\n            calories: totalCalories,\n            actualEnergy: totalActualEnergy,\n            wastedEnergy: totalWastedEnergy,\n            originalMeals: meals\n          });\n        });\n      }\n    });\n    \n    // FIXED: Sort by actual chronological time instead of string comparison\n    const sortedCombinedData = [...combinedData].sort((a, b) => {\n      if (a.date !== b.date) return a.date.localeCompare(b.date);\n      \n      // Convert times to 24-hour format for proper comparison\n      const timeA = convertTo24Hour(a.time);\n      const timeB = convertTo24Hour(b.time);\n      return timeA.localeCompare(timeB);\n    });\n\n    // Calculate scales\n    const xOuter = d3.scaleBand()\n      .domain(allDatesInRange)\n      .range([0, width])\n      .padding(0.2);\n    \n    const xInner = d3.scaleBand()\n      .domain(uniqueMealTypes)\n      .range([0, xOuter.bandwidth()])\n      .padding(0.1);\n    \n    const formatDate = date => {\n      const parts = date.split('-');\n      return `${parts[1]}/${parts[2]}`;\n    };\n    \n    const maxCalories = d3.max(combinedData, d => d.calories) || 1000;\n    const y = d3.scaleLinear()\n      .domain([0, maxCalories])\n      .range([height, 0]);\n\n    const yEff = d3.scaleLinear()\n      .domain([0, 100])\n      .range([height, 0]);\n\n    // Create axes\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(d3.axisBottom(xOuter).tickFormat(formatDate))\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-45)\");\n\n    svg.append(\"g\")\n      .call(d3.axisLeft(y))\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", -50)\n      .attr(\"x\", -height / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#000\")\n      .text(\"Calories\");\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${width}, 0)`)\n      .call(d3.axisRight(yEff))\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 50)\n      .attr(\"x\", -height / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#000\")\n      .text(\"Enhanced Efficiency (%)\");\n\n    // UPDATED: Expanded color scheme for all meal types\n    const mealColors = {\n      \"Breakfast\": \"#FF9F1C\",        // Orange\n      \"Morning Snack\": \"#FFB84D\",    // Light Orange\n      \"Lunch\": \"#2EC4B6\",            // Teal\n      \"Afternoon Snack\": \"#4ECDC4\",  // Light Teal\n      \"Dinner\": \"#E71D36\",           // Red\n      \"Late Night Snack\": \"#FF6B6B\" // Light Red\n             // Keep original for backward compatibility\n    };\n\n    // Create tooltip\n    const tooltip = d3.select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"chart-tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"white\")\n      .style(\"border\", \"1px solid #ddd\")\n      .style(\"border-radius\", \"5px\")\n      .style(\"padding\", \"12px\")\n      .style(\"font-size\", \"14px\")\n      .style(\"box-shadow\", \"0 3px 14px rgba(0,0,0,0.25)\")\n      .style(\"z-index\", \"10\")\n      .style(\"max-width\", \"300px\");\n\n    // Add stacked bars\n    combinedData.forEach(meal => {\n      const mealColor = mealColors[meal.mealType] || \"#999999\";\n      const barX = xOuter(meal.date) + xInner(meal.mealType);\n      const barWidth = xInner.bandwidth();\n      \n      // Actual energy bar\n      svg.append(\"rect\")\n        .attr(\"class\", \"actual-energy-bar\")\n        .attr(\"x\", barX)\n        .attr(\"y\", y(meal.actualEnergy))\n        .attr(\"width\", barWidth)\n        .attr(\"height\", height - y(meal.actualEnergy))\n        .attr(\"fill\", mealColor)\n        .attr(\"opacity\", 0.9)\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .on(\"mouseover\", function(event) {\n          d3.select(this).attr(\"opacity\", 0.7);\n          tooltip\n            .style(\"visibility\", \"visible\")\n            .html(`\n              <div style=\"font-weight:bold;margin-bottom:10px;font-size:15px;\">${meal.date} - ${meal.mealType}</div>\n              <div style=\"margin-bottom:6px;\">Total Calories: ${Math.round(meal.calories)}</div>\n              <div style=\"margin-bottom:6px;\"><strong>Enhanced Efficiency: ${meal.efficiency}%</strong></div>\n              <div style=\"margin-bottom:6px;\">Usable Energy: ${Math.round(meal.actualEnergy)} cal</div>\n              <div style=\"margin-bottom:12px;\">Energy Lost: ${Math.round(meal.wastedEnergy)} cal</div>\n              <div style=\"font-weight:bold;margin-bottom:5px;\">Individual Items:</div>\n              <ul style=\"margin-top:0;padding-left:20px;\">\n                ${meal.originalMeals.map(item => `\n                  <li>${item.name} - ${item.calories} cal (${Math.round(item.enhancedEfficiency)}% efficient)</li>\n                `).join('')}\n              </ul>\n            `)\n            .style(\"left\", `${event.pageX + 15}px`)\n            .style(\"top\", `${event.pageY - 10}px`);\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this).attr(\"opacity\", 0.9);\n          tooltip.style(\"visibility\", \"hidden\");\n        });\n      \n      // Potential energy bar (wasted energy)\n      svg.append(\"rect\")\n        .attr(\"class\", \"potential-energy-bar\")\n        .attr(\"x\", barX)\n        .attr(\"y\", y(meal.calories))\n        .attr(\"width\", barWidth)\n        .attr(\"height\", y(meal.actualEnergy) - y(meal.calories))\n        .attr(\"fill\", mealColor)\n        .attr(\"opacity\", 0.3)\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"stroke-dasharray\", \"3,3\");\n    });\n\n    // FIXED: Create chronological positions for the efficiency line\n    if (sortedCombinedData.length > 0) {\n      const chronologicalData = sortedCombinedData.map((meal, index) => {\n        // Calculate x position based on chronological order within each day\n        const dayMeals = sortedCombinedData.filter(m => m.date === meal.date);\n        const mealIndexInDay = dayMeals.findIndex(m => m === meal);\n        const dayWidth = xOuter.bandwidth();\n        const mealSpacing = dayWidth / Math.max(1, dayMeals.length);\n        \n        return {\n          ...meal,\n          xPos: xOuter(meal.date) + (mealIndexInDay * mealSpacing) + (mealSpacing / 2)\n        };\n      });\n\n      const lineGenerator = d3.line()\n        .x(d => d.xPos) // Use chronological position\n        .y(d => yEff(d.efficiency))\n        .defined(d => d.efficiency != null && !isNaN(d.efficiency))\n        .curve(d3.curveMonotoneX);\n      \n      svg.append(\"path\")\n        .datum(chronologicalData) // Use chronological data\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#FF5733\")\n        .attr(\"stroke-width\", 3)\n        .attr(\"d\", lineGenerator);\n      \n      // Add efficiency points\n      svg.selectAll(\".efficiency-point\")\n        .data(chronologicalData) // Use chronological data\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"efficiency-point\")\n        .attr(\"cx\", d => d.xPos) // Use chronological position\n        .attr(\"cy\", d => yEff(d.efficiency))\n        .attr(\"r\", 5)\n        .attr(\"fill\", \"#FF5733\")\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .on(\"mouseover\", function(event, d) {\n          d3.select(this).attr(\"r\", 8);\n          tooltip\n            .style(\"visibility\", \"visible\")\n            .html(`\n              <div style=\"font-weight:bold;font-size:16px;\">${d.mealType} - ${d.time}</div>\n              <div style=\"font-weight:bold;font-size:14px;\">${d.date}</div>\n              <div>Enhanced Efficiency: <strong>${d.efficiency}%</strong></div>\n              <div style=\"margin-top:6px\">Chronologically sorted meal</div>\n            `)\n            .style(\"left\", `${event.pageX + 15}px`)\n            .style(\"top\", `${event.pageY - 10}px`);\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this).attr(\"r\", 5);\n          tooltip.style(\"visibility\", \"hidden\");\n        });\n    }\n\n    // Add legend for meal types\n    const legendY = height + 80;\n    \n    svg.append(\"line\")\n      .attr(\"x1\", 10)\n      .attr(\"x2\", 40)\n      .attr(\"y1\", legendY)\n      .attr(\"y2\", legendY)\n      .attr(\"stroke\", \"#FF5733\")\n      .attr(\"stroke-width\", 3);\n    \n    svg.append(\"circle\")\n      .attr(\"cx\", 25)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 5)\n      .attr(\"fill\", \"#FF5733\")\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.append(\"text\")\n      .attr(\"x\", 50)\n      .attr(\"y\", legendY + 4)\n      .style(\"font-size\", \"12px\")\n      .text(\"Efficiency (%)\");\n    \n    const legendData = [\n      { label: \"Usable Energy\", color: \"#2EC4B6\", opacity: 0.9 },\n      { label: \"Energy Lost\", color: \"#2EC4B6\", opacity: 0.3 }\n    ];\n    \n    svg.selectAll(\".legend-rect\")\n      .data(legendData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", 200)\n      .attr(\"y\", (d, i) => legendY - 10 + i * 20)\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"fill\", d => d.color)\n      .attr(\"opacity\", d => d.opacity)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.selectAll(\".legend-text\")\n      .data(legendData)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", 225)\n      .attr(\"y\", (d, i) => legendY + 2 + i * 20)\n      .style(\"font-size\", \"12px\")\n      .text(d => d.label);\n    \n    // UPDATED: Expanded meal type legend\n    const mealTypeData = Object.entries(mealColors).map(([type, color]) => ({ type, color }));\n    \n    svg.selectAll(\".meal-type-rect\")\n      .data(mealTypeData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => 400 + Math.floor(i/3) * 140)\n      .attr(\"y\", (d, i) => legendY - 10 + (i % 3) * 20)\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"fill\", d => d.color)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.selectAll(\".meal-type-text\")\n      .data(mealTypeData)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", (d, i) => 425 + Math.floor(i/3) * 140)\n      .attr(\"y\", (d, i) => legendY + 2 + (i % 3) * 20)\n      .style(\"font-size\", \"12px\")\n      .text(d => d.type);\n\n    // Cleanup function\n    return () => {\n      d3.select(\".chart-tooltip\").remove();\n    };\n  }, [chartRef, processedData, userData]); // FIXED: Removed convertTo24Hour from dependencies\n  \n  if (!processedData || processedData.length === 0) {\n    return (\n      <div className=\"chart-container\">\n        <div ref={chartRef} className=\"efficiency-chart\">\n          <div className=\"placeholder\">\n            <p>No meal data available for enhanced efficiency analysis.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"chart-container\">\n      <div ref={chartRef} className=\"efficiency-chart\" style={{ minHeight: '500px' }}></div>\n      <div className=\"chart-info\" style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f8f9fa', borderRadius: '8px' }}>\n        <h4>Enhanced Metabolic Efficiency</h4>\n        <p>\n          This enhanced chart takes into account Long COVID severity, meal timing, and individual factors \n          to provide more accurate efficiency calculations for energy management. The efficiency line now \n          follows proper chronological order.\n        </p>\n        <div style={{ marginTop: '10px' }}>\n          <strong>Meal Type Efficiency Factors:</strong>\n          <ul style={{ marginTop: '5px', paddingLeft: '20px' }}>\n            <li><strong>Breakfast:</strong> 130% (highest metabolism)</li>\n            <li><strong>Morning Snack:</strong> 90% (good morning metabolism)</li>\n            <li><strong>Lunch:</strong> 110% (good midday metabolism)</li>\n            <li><strong>Afternoon Snack:</strong> 80% (decent afternoon metabolism)</li>\n            <li><strong>Dinner:</strong> 90% (reduced evening metabolism)</li>\n            <li><strong>Late Night Snack:</strong> 60% (discouraged - lowest efficiency)</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport './MicronutrientChart.css';\nimport './FoodTrackerAnalysis.css';\n// Import enhanced efficiency functions\nimport { \n  calculateFoodEfficiency\n} from './enhanced-efficiency-functions';\n\n// FIXED: Utility functions to handle dates without timezone issues\nconst parseDate = (dateString) => {\n  const parts = dateString.split('-');\n  return new Date(parseInt(parts[0]), parseInt(parts[1]) - 1, parseInt(parts[2]));\n};\n\nconst formatDateForComparison = (date) => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst isSameOrAfter = (dateString1, dateString2) => {\n  const date1 = parseDate(dateString1);\n  const date2 = parseDate(dateString2);\n  return date1 >= date2;\n};\n\n\n\n// Debug version of calculateFoodEfficiency with detailed logging\nconst calculateFoodEfficiencyDebug = (mealData, userProfile) => {\n  console.log('=== DEBUGGING EFFICIENCY CALCULATION ===');\n  console.log('Input mealData:', mealData);\n  console.log('Input userProfile:', userProfile);\n  \n  // Step 1: Parse time\n  const timeStr = mealData.time;\n  console.log('Time string:', timeStr);\n  \n  const hourMatch = timeStr.match(/(\\d+):/);\n  const hour = hourMatch ? parseInt(hourMatch[1], 10) : 12;\n  const isPM = timeStr.toLowerCase().includes('pm');\n  \n  console.log('Parsed hour:', hour, 'isPM:', isPM);\n  \n  let hour24 = hour;\n  if (isPM && hour !== 12) hour24 += 12;\n  if (!isPM && hour === 12) hour24 = 0;\n  \n  console.log('24-hour format:', hour24);\n  \n  // Step 2: Calculate macronutrient factors\n  const protein = parseFloat(mealData.protein) || 0;\n  const carbs = parseFloat(mealData.carbs) || 0;\n  const fat = parseFloat(mealData.fat) || 0;\n  \n  console.log('Macros - Protein:', protein, 'Carbs:', carbs, 'Fat:', fat);\n  \n  const proteinFactor = protein * 0.2;\n  const carbFactor = carbs * 0.1;\n  const fatFactor = fat * 0.15;\n  \n  console.log('Macro factors - Protein:', proteinFactor, 'Carbs:', carbFactor, 'Fat:', fatFactor);\n  \n  // Step 3: Calculate time factor\n  let timeFactor = 1.0;\n  if (hour24 < 6 || hour24 > 20) {\n    timeFactor = 0.7;\n  } else if (hour24 >= 7 && hour24 <= 10) {\n    timeFactor = 1.2;\n  } else if (hour24 >= 17 && hour24 <= 19) {\n    timeFactor = 0.9;\n  }\n  \n  console.log('Time factor:', timeFactor);\n  \n  // Step 4: Calculate meal type factor\n  const mealTypeFactors = {\n    'Breakfast': 1.3,\n    'Morning Snack': 0.9,\n    'Lunch': 1.1,\n    'Afternoon Snack': 0.8,\n    'Dinner': 0.9,\n    'Late Night Snack': 0.6,\n    'Snack': 0.8\n  };\n  const mealTypeFactor = mealTypeFactors[mealData.mealType] || 1.0;\n  \n  console.log('Meal type:', mealData.mealType, 'Factor:', mealTypeFactor);\n  \n  // Step 5: Base efficiency calculation\n  const macroBalance = Math.min(100, (proteinFactor + carbFactor + fatFactor) * 10);\n  console.log('Macro balance:', macroBalance);\n  \n  let efficiency = macroBalance * timeFactor * mealTypeFactor;\n  console.log('Base efficiency:', efficiency);\n  \n  // Step 6: Long COVID adjustments\n  if (mealData.longCovidAdjust && userProfile?.hasLongCovid) {\n    console.log('Applying Long COVID adjustments...');\n    \n    const severityFactors = {\n      'mild': 0.95,\n      'moderate': 0.85,\n      'severe': 0.75,\n      'very severe': 0.65\n    };\n    \n    const severityKey = userProfile.longCovidSeverity?.toLowerCase() || 'moderate';\n    const severityFactor = severityFactors[severityKey] || 0.85;\n    console.log('Severity factor:', severityFactor);\n    \n    efficiency *= severityFactor;\n    console.log('After severity adjustment:', efficiency);\n    \n    // Boost for beneficial foods\n    if (mealData.longCovidBenefits && mealData.longCovidBenefits.length > 0) {\n      efficiency *= 1.1;\n      console.log('After benefits boost:', efficiency);\n    }\n    \n    // Reduce for problematic foods\n    if (mealData.longCovidCautions && mealData.longCovidCautions.length > 0) {\n      efficiency *= 0.9;\n      console.log('After cautions reduction:', efficiency);\n    }\n  }\n  \n  const finalEfficiency = Math.min(100, Math.max(0, efficiency));\n  console.log('Final efficiency:', finalEfficiency);\n  console.log('=== END DEBUGGING ===\\n');\n  \n  return finalEfficiency;\n};\n\n// Test with sample meal data\nconst sampleMeal = {\n  name: 'Greek Yogurt with Berries',\n  protein: 20,\n  carbs: 35,\n  fat: 8,\n  calories: 320,\n  mealType: 'Breakfast',\n  time: '8:00 AM',\n  longCovidAdjust: true,\n  longCovidBenefits: ['High protein for recovery', 'Probiotics for gut health']\n};\n\nconst sampleProfile = {\n  hasLongCovid: true,\n  longCovidSeverity: 'moderate'\n};\n\n// Run the debug test\nconsole.log('Testing with sample data:');\nconst result = calculateFoodEfficiencyDebug(sampleMeal, sampleProfile);\nconsole.log('Expected result: ~74 (should be > 0)');\nconsole.log('Actual result:', result);\n\n// Common issues to check:\nconsole.log('\\n=== COMMON ISSUES TO CHECK ===');\nconsole.log('1. Are protein/carbs/fat values numbers or strings?');\nconsole.log('2. Is mealType exactly matching the case in mealTypeFactors?');\nconsole.log('3. Is time format consistent (e.g., \"8:00 AM\" vs \"8:00 am\")?');\nconsole.log('4. Is longCovidSeverity exactly matching the case in severityFactors?');\nconsole.log('5. Are the macro values realistic (not 0 or undefined)?');\n\n// This is how ensureCompleteNutrientData *should* be structured.\nfunction ensureCompleteNutrientData(intakeData, baseRDAData) {\n  const completeIntakeData = {};\n\n  // Iterate over all nutrients defined in your baseRDAData to ensure completeness\n  for (const nutrientKey in baseRDAData) {\n    if (baseRDAData.hasOwnProperty(nutrientKey)) {\n      const rdaInfo = baseRDAData[nutrientKey]; // Get the expected structure from RDA data\n\n      // Check if this nutrient exists in the user's intake data\n      if (intakeData && intakeData[nutrientKey] !== undefined) {\n        const intakeValue = intakeData[nutrientKey];\n\n        // Case 1: intakeData[nutrientKey] is already an object { value: X, unit: Y }\n        if (typeof intakeValue === 'object' && intakeValue.value !== undefined && intakeValue.unit !== undefined) {\n          completeIntakeData[nutrientKey] = { ...intakeValue }; // Use as is\n        }\n        // Case 2: intakeData[nutrientKey] is just a number (assume default unit from RDA)\n        else if (typeof intakeValue === 'number') {\n          completeIntakeData[nutrientKey] = {\n            value: intakeValue,\n            unit: rdaInfo.unit // Use the unit from your base RDA data\n          };\n        }\n        // Case 3: Handle other unexpected formats if necessary, or default to 0\n        else {\n          console.warn(`Unexpected intake data format for ${nutrientKey}:`, intakeValue);\n          completeIntakeData[nutrientKey] = {\n            value: 0,\n            unit: rdaInfo.unit\n          };\n        }\n      } else {\n        // Nutrient not found in intakeData, set to 0 with the correct unit\n        completeIntakeData[nutrientKey] = {\n          value: 0,\n          unit: rdaInfo.unit\n        };\n      }\n    }\n  }\n  return completeIntakeData;\n}\n\n// You might also need to import this function at the top of your FoodTrackerAnalysis.js\n// import { ensureCompleteNutrientData } from './path/to/your/utils/file';\nfunction MacronutrientChart({ userData, userIntake = {} }) {\nconst chartRef = useRef(null);\nconst [personalizedRDA, setPersonalizedRDA] = useState(null);\n\nconst calculatePersonalizedRDA = useCallback((userData) => {\n  const calculateBMI = (weight, height) => {\n    if (!weight || !height) return null;\n    return weight / Math.pow(height / 100, 2);\n  };\n  \n  const calculateTDEE = (userData) => {\n    const { age, gender, weight, height, activity_level } = userData;\n    \n    if (!age || !weight || !height) {\n      return 2000;\n    }\n    \n    let bmr;\n    if (gender === 'female') {\n      bmr = (10 * weight) + (6.25 * height) - (5 * age) - 161;\n    } else {\n      bmr = (10 * weight) + (6.25 * height) - (5 * age) + 5;\n    }\n    \n    const activityFactors = {\n      'sedentary': 1.2,\n      'light': 1.375,\n      'moderate': 1.55,\n      'very': 1.725,\n      'extreme': 1.9\n    };\n    \n    const activityMultiplier = activityFactors[activity_level] || 1.375;\n    let tdee = bmr * activityMultiplier;\n    \n    if (userData.covid_condition) {\n      tdee *= 1.07;\n    }\n    \n    const bmi = calculateBMI(weight, height);\n    if (bmi) {\n      if (bmi < 18.5) {\n        tdee *= 1.1;\n      } else if (bmi > 30) {\n        tdee *= 0.9;\n      }\n    }\n    \n    return Math.round(tdee);\n  };\n  \n  const calculateMacroDistribution = (totalCalories, userData) => {\n    if (!totalCalories) return null;\n    \n    let proteinPct = 0.25;\n    let carbsPct = 0.45;\n    let fatPct = 0.3;\n    \n    if (userData.covid_condition) {\n      proteinPct = 0.30;\n      carbsPct = 0.40;\n      fatPct = 0.30;\n    }\n    \n    const bmi = calculateBMI(userData.weight, userData.height);\n    if (bmi && bmi < 18.5) {\n      fatPct = 0.35;\n      carbsPct = 0.45;\n      proteinPct = 0.20;\n    }\n    \n    if (bmi && bmi > 30) {\n      proteinPct = 0.35;\n      carbsPct = 0.35;\n      fatPct = 0.30;\n    }\n    \n    if (userData.age > 65) {\n      proteinPct = Math.min(proteinPct + 0.05, 0.40);\n      const remaining = 1.0 - proteinPct;\n      carbsPct = remaining * (carbsPct / (carbsPct + fatPct));\n      fatPct = remaining * (fatPct / (carbsPct + fatPct));\n    }\n    \n    return {\n      protein: proteinPct,\n      carbs: carbsPct,\n      fat: fatPct\n    };\n  };\n\n  const totalCalories = calculateTDEE(userData);\n  const macroDistribution = calculateMacroDistribution(totalCalories, userData);\n  \n  const protein = (totalCalories * macroDistribution.protein / 4).toFixed(1);\n  const carbs = (totalCalories * macroDistribution.carbs / 4).toFixed(1);\n  const fat = (totalCalories * macroDistribution.fat / 9).toFixed(1);\n  \n  const covidNotes = {\n    protein: 'Increased to support immune function and tissue repair',\n    carbs: 'Focus on complex carbs with anti-inflammatory properties',\n    fat: 'Higher proportion of omega-3s recommended to reduce inflammation'\n  };\n  \n  return {\n    protein: { \n      value: parseFloat(protein),\n      covidNote: userData.covid_condition ? covidNotes.protein : null\n    },\n    carbs: { \n      value: parseFloat(carbs),\n      covidNote: userData.covid_condition ? covidNotes.carbs : null\n    },\n    fat: { \n      value: parseFloat(fat),\n      covidNote: userData.covid_condition ? covidNotes.fat : null\n    },\n    calories: {\n      value: totalCalories\n    }\n  };\n}, []);\n\nuseEffect(() => {\n  if (userData) {\n    const rda = calculatePersonalizedRDA(userData);\n    setPersonalizedRDA(rda);\n  }\n}, [userData, calculatePersonalizedRDA]);\n\nuseEffect(() => {\n  if (!chartRef.current || !personalizedRDA || !userIntake) return;\n  \n  d3.select(chartRef.current).selectAll(\"*\").remove();\n  \n  const margin = { top: 40, right: 180, bottom: 60, left: 70 };\n  const width = 700 - margin.left - margin.right;\n  const height = 350 - margin.top - margin.bottom;\n  \n  const svg = d3.select(chartRef.current)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n  const macros = ['protein', 'carbs', 'fat'];\n  const data = [\n    { name: \"Current Intake\", ...userIntake },\n    { name: \"Recommended\", \n      protein: personalizedRDA.protein.value,\n      carbs: personalizedRDA.carbs.value,\n      fat: personalizedRDA.fat.value\n    }\n  ];\n  \n  const colors = {\n    protein: \"#22c55e\",\n    carbs: \"#3b82f6\",\n    fat: \"#f59e0b\"\n  };\n  \n  const x = d3.scaleBand()\n    .domain(data.map(d => d.name))\n    .range([0, width])\n    .padding(0.3);\n  \n  const maxValue = d3.max(data, d => {\n    return d.protein + d.carbs + d.fat;\n  });\n  \n  const y = d3.scaleLinear()\n    .domain([0, maxValue * 1.1])\n    .range([height, 0]);\n  \n  svg.append(\"g\")\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(d3.axisBottom(x))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"12px\")\n    .attr(\"font-weight\", d => d === \"Recommended\" ? \"bold\" : \"normal\");\n  \n  svg.append(\"g\")\n    .call(d3.axisLeft(y).ticks(5))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"12px\");\n  \n  svg.append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", -margin.left + 20)\n    .attr(\"x\", -height / 2)\n    .attr(\"font-size\", \"14px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"fill\", \"#666\")\n    .text(\"Grams\");\n  \n  const currentDate = new Date();\n  const formattedDate = currentDate.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  });\n  \n  svg.append(\"text\")\n    .attr(\"x\", width / 2)\n    .attr(\"y\", -margin.top / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-size\", \"16px\")\n    .attr(\"font-weight\", \"bold\")\n    .attr(\"fill\", \"#333\")\n    .text(`Long COVID Macronutrient Analysis - ${formattedDate}`);\n  \n  data.forEach(d => {\n    let y0 = 0;\n    d.stackedData = macros.map(nutrient => {\n      return {\n        nutrient,\n        y0,\n        y1: y0 += (d[nutrient] || 0)\n      };\n    });\n  });\n  \n  const tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"d3-tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"1px solid #ddd\")\n    .style(\"border-radius\", \"4px\")\n    .style(\"padding\", \"8px\")\n    .style(\"font-size\", \"12px\")\n    .style(\"pointer-events\", \"none\")\n    .style(\"opacity\", 0)\n    .style(\"box-shadow\", \"0 2px 4px rgba(0,0,0,0.1)\")\n    .style(\"z-index\", 100);\n  \n  const groups = svg.selectAll(\".bar-group\")\n    .data(data)\n    .join(\"g\")\n    .attr(\"class\", \"bar-group\")\n    .attr(\"transform\", d => `translate(${x(d.name)},0)`);\n  \n  groups.selectAll(\"rect\")\n    .data(d => d.stackedData)\n    .join(\"rect\")\n    .attr(\"width\", x.bandwidth())\n    .attr(\"y\", d => y(d.y1))\n    .attr(\"height\", d => y(d.y0) - y(d.y1))\n    .attr(\"fill\", d => colors[d.nutrient])\n    .attr(\"stroke\", \"white\")\n    .attr(\"stroke-width\", 1)\n    .on(\"mouseover\", function(event, d) {\n      const parentData = d3.select(this.parentNode).datum();\n      const amount = parentData[d.nutrient].toFixed(1);\n      const percentage = ((parentData[d.nutrient] / (parentData.protein + parentData.carbs + parentData.fat)) * 100).toFixed(1);\n      \n      const caloriesPerGram = d.nutrient === 'fat' ? 9 : 4;\n      const calories = (parentData[d.nutrient] * caloriesPerGram).toFixed(0);\n      \n      const covidNote = parentData.name === \"Recommended\" && \n                      personalizedRDA[d.nutrient].covidNote ? \n                      `<br><span style=\"color:#6366f1;font-style:italic\">${personalizedRDA[d.nutrient].covidNote}</span>` : '';\n      \n      tooltip\n        .style(\"opacity\", 1)\n        .html(`\n          <div style=\"font-weight:bold;text-transform:capitalize;color:${colors[d.nutrient]}\">${d.nutrient}</div>\n          <div style=\"margin:4px 0\">\n            <b>Amount:</b> ${amount}g\n            <br><b>Percentage:</b> ${percentage}%\n            <br><b>Calories:</b> ${calories} kcal\n            ${covidNote}\n          </div>\n        `)\n        .style(\"left\", (event.pageX + 10) + \"px\")\n        .style(\"top\", (event.pageY - 28) + \"px\");\n        \n      d3.select(this)\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 2);\n    })\n    .on(\"mouseout\", function() {\n      tooltip.style(\"opacity\", 0);\n      d3.select(this)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", 1);\n    });\n  \n  const legend = svg.append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", `translate(${width + 20}, 0)`);\n  \n  macros.forEach((nutrient, i) => {\n    const legendRow = legend.append(\"g\")\n      .attr(\"transform\", `translate(0, ${i * 25})`);\n      \n    legendRow.append(\"rect\")\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"fill\", colors[nutrient]);\n      \n    legendRow.append(\"text\")\n      .attr(\"x\", 24)\n      .attr(\"y\", 12)\n      .attr(\"text-anchor\", \"start\")\n      .style(\"text-transform\", \"capitalize\")\n      .style(\"font-size\", \"14px\")\n      .text(nutrient);\n  });\n  \n  if (userData?.covid_condition) {\n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", height + 40)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-style\", \"italic\")\n      .attr(\"fill\", \"#6366f1\")\n      .text(\"Note: RDA values adjusted for Long COVID recovery needs\");\n  }\n  \n  const calculateCalories = (data) => {\n    return (data.protein * 4 + data.carbs * 4 + data.fat * 9).toFixed(0);\n  };\n  \n  const calorieInfo = svg.append(\"g\")\n    .attr(\"class\", \"calorie-info\")\n    .attr(\"transform\", `translate(${width + 20}, ${macros.length * 25 + 20})`);\n    \n  calorieInfo.append(\"text\")\n    .attr(\"font-size\", \"14px\")\n    .attr(\"font-weight\", \"bold\")\n    .text(\"Total Calories:\");\n    \n  calorieInfo.append(\"text\")\n    .attr(\"y\", 25)\n    .attr(\"font-size\", \"14px\")\n    .text(`Intake: ${calculateCalories(userIntake)} kcal`);\n    \n  calorieInfo.append(\"text\")\n    .attr(\"y\", 50)\n    .attr(\"font-size\", \"14px\")\n    .text(`Recommended: ${personalizedRDA.calories.value.toFixed(0)} kcal`);\n  \n  return () => {\n    d3.select(\".d3-tooltip\").remove();\n  };\n}, [chartRef, personalizedRDA, userIntake, userData]);\n\nreturn (\n  <div className=\"w-full\">\n    <div \n      ref={chartRef} \n      className=\"macro-chart mx-auto overflow-visible\"\n      style={{ minHeight: \"350px\" }}\n    ></div>\n  </div>\n);\n}\n\nfunction EfficiencyChart({ data, userData, foodDatabase }) {\nconst chartRef = useRef(null);\nconst [processedData, setProcessedData] = useState([]);\n\nuseEffect(() => {\n  if (!data || data.length === 0) return;\n  \n  // FIXED: Use proper date comparison without timezone issues\n  const today = new Date();\n  const oneWeekAgo = new Date();\n  oneWeekAgo.setDate(today.getDate() - 7);\n  const oneWeekAgoString = formatDateForComparison(oneWeekAgo);\n  \n  const lastWeekData = data.filter(meal => {\n    try {\n      // Use string comparison instead of Date objects to avoid timezone issues\n      return isSameOrAfter(meal.date, oneWeekAgoString);\n    } catch (err) {\n      console.warn('Error parsing date:', meal.date);\n      return false;\n    }\n  });\n  \n  const updatedData = lastWeekData.map((meal, index) => {\n    try {\n      // FIX: Use the existing efficiency if it exists and is valid\n      let efficiency = meal.efficiency || meal.metabolicEfficiency;\n      \n      // Only recalculate if efficiency is missing or invalid\n      if (!efficiency || efficiency <= 0) {\n        console.log(`Recalculating efficiency for ${meal.name} (was ${efficiency})`);\n        efficiency = calculateFoodEfficiency(meal, userData);\n      } else {\n        console.log(`Using existing efficiency for ${meal.name}: ${efficiency}`);\n      }\n      \n      return {\n        ...meal,\n        originalEfficiency: meal.efficiency || 80,\n        efficiency: efficiency,  // Use existing or calculated\n        actualEnergy: Math.round(meal.calories * (efficiency / 100)),\n        wastedEnergy: Math.round(meal.calories * ((100 - efficiency) / 100))\n      };\n    } catch (err) {\n      console.warn(`Error processing meal ${index}:`, err);\n      const fallbackEfficiency = meal.efficiency || meal.metabolicEfficiency || 80;\n      return {\n        ...meal,\n        efficiency: fallbackEfficiency,\n        actualEnergy: Math.round(meal.calories * (fallbackEfficiency / 100)),\n        wastedEnergy: Math.round(meal.calories * ((100 - fallbackEfficiency) / 100))\n      };\n    }\n  });\n  \n  const filteredData = updatedData.filter(meal => \n    meal.mealType !== \"Pre-workout\" && meal.mealType !== \"Post-workout\"\n  );\n  \n  console.log('ProcessedData with preserved efficiency:', filteredData);\n  setProcessedData(filteredData);\n}, [data, userData, foodDatabase]);\n\n\nuseEffect(() => {\n  if (!chartRef.current || !processedData || processedData.length === 0) return;\n  \n  d3.select(chartRef.current).selectAll(\"*\").remove();\n  \n  const margin = { top: 60, right: 120, bottom: 140, left: 70 };\n  const width = 800 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n  \n  const svg = d3.select(chartRef.current)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  \n  svg.append(\"text\")\n    .attr(\"x\", width / 2)\n    .attr(\"y\", -30)\n    .attr(\"text-anchor\", \"middle\")\n    .style(\"font-size\", \"18px\")\n    .style(\"font-weight\", \"bold\")\n    .text(\"Metabolic Efficiency Chart\");\n    \n  svg.append(\"text\")\n    .attr(\"x\", width / 2)\n    .attr(\"y\", -10)\n    .attr(\"text-anchor\", \"middle\")\n    .style(\"font-size\", \"14px\")\n    .style(\"font-style\", \"italic\")\n    .text(\"How efficiently your body converts food into usable energy\");\n  \n  const tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"chart-tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"visibility\", \"hidden\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"1px solid #ddd\")\n    .style(\"border-radius\", \"5px\")\n    .style(\"padding\", \"12px\")\n    .style(\"font-size\", \"14px\")\n    .style(\"box-shadow\", \"0 3px 14px rgba(0,0,0,0.25)\")\n    .style(\"z-index\", \"10\")\n    .style(\"max-width\", \"300px\");\n  \n  // FIXED: Generate date range without timezone issues\n  const allDatesInRange = [];\n  const today = new Date();\n  for (let i = 6; i >= 0; i--) {\n    const date = new Date();\n    date.setDate(today.getDate() - i);\n    const formattedDate = formatDateForComparison(date);\n    allDatesInRange.push(formattedDate);\n  }\n  \n  console.log('=== CHART DEBUG ===');\n  console.log('processedData:', processedData);\n  \n  const combinedData = [];\n  const groupedByDate = d3.group(processedData, d => d.date);\n  const sortedDates = allDatesInRange;\n  \n  // UPDATED: Expanded unique meal types to include all snack categories\n  const uniqueMealTypes = ['Breakfast', 'Morning Snack', 'Lunch', 'Afternoon Snack', 'Dinner', 'Late Night Snack'];\n  \n  sortedDates.forEach(date => {\n    const dateData = groupedByDate.get(date) || [];\n    \n    if (dateData.length > 0) {\n      const mealsByType = d3.group(dateData, d => d.mealType);\n    \n      mealsByType.forEach((meals, mealType) => {\n        const totalCalories = d3.sum(meals, d => d.calories);\n        \n        // FIX: Make sure we're using the efficiency from the data\n        const weightedEfficiency = meals.reduce((acc, meal) => {\n          const mealEfficiency = meal.efficiency || 0; // Use existing efficiency\n          const calorieWeight = totalCalories > 0 ? meal.calories / totalCalories : 0;\n          console.log(`Meal: ${meal.name}, efficiency: ${mealEfficiency}, calories: ${meal.calories}, weight: ${calorieWeight}`);\n          return acc + (mealEfficiency * calorieWeight);\n        }, 0);\n        \n        console.log(`Combined efficiency for ${mealType} on ${date}: ${weightedEfficiency}`);\n        \n        const totalActualEnergy = d3.sum(meals, d => d.actualEnergy || (d.calories * (d.efficiency / 100)));\n        const totalWastedEnergy = totalCalories - totalActualEnergy;\n        \n        combinedData.push({\n          date: date,\n          mealType: mealType,\n          time: meals[0].time,\n          name: `${mealType} (${meals.length} items)`,\n          efficiency: Math.round(weightedEfficiency), // This should NOT be 0\n          calories: totalCalories,\n          actualEnergy: totalActualEnergy,\n          wastedEnergy: totalWastedEnergy,\n          originalMeals: meals\n        });\n      });\n    }\n  });\n  \n  console.log('Final combinedData:', combinedData);\n  console.log('=== END CHART DEBUG ===');\n  \n  const sortedCombinedData = [...combinedData].sort((a, b) => {\n    if (a.date !== b.date) return a.date.localeCompare(b.date);\n    return a.time.localeCompare(b.time);\n  });\n\n  const xOuter = d3.scaleBand()\n    .domain(sortedDates)\n    .range([0, width])\n    .padding(0.2);\n  \n  const xInner = d3.scaleBand()\n    .domain(uniqueMealTypes)\n    .range([0, xOuter.bandwidth()])\n    .padding(0.1);\n  \n  // FIXED: Format date without timezone issues\n  const formatDate = date => {\n    const parts = date.split('-');\n    return `${parseInt(parts[1])}/${parseInt(parts[2])}`;\n  };\n  \n  const maxCalories = d3.max(combinedData, d => d.calories) || 1000;\n  const y = d3.scaleLinear()\n    .domain([0, maxCalories])\n    .range([height, 0]);\n\n  const yEff = d3.scaleLinear()\n    .domain([0, 100])\n    .range([height, 0]);\n\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(d3.axisBottom(xOuter).tickFormat(formatDate))\n    .selectAll(\"text\")\n    .style(\"text-anchor\", \"end\")\n    .attr(\"dx\", \"-.8em\")\n    .attr(\"dy\", \".15em\")\n    .attr(\"transform\", \"rotate(-45)\");\n\n  svg.append(\"g\")\n    .call(d3.axisLeft(y))\n    .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", -50)\n    .attr(\"x\", -height / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .style(\"fill\", \"#000\")\n    .text(\"Calories\");\n\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(${width}, 0)`)\n    .call(d3.axisRight(yEff))\n    .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 50)\n    .attr(\"x\", -height / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .style(\"fill\", \"#000\")\n    .text(\"Metabolic Efficiency (%)\");\n\n  // UPDATED: Expanded color scheme for all meal types\n  const mealColors = {\n    \"Breakfast\": \"#FF9F1C\",        // Orange\n    \"Morning Snack\": \"#FFB84D\",    // Light Orange\n    \"Lunch\": \"#2EC4B6\",            // Teal\n    \"Afternoon Snack\": \"#4ECDC4\",  // Light Teal\n    \"Dinner\": \"#E71D36\",           // Red\n    \"Late Night Snack\": \"#FF6B6B\" // Light Red\n        // Keep original for backward compatibility\n  };\n\n  const defaultColor = \"#999999\";\n\n  combinedData.forEach(meal => {\n    const mealColor = mealColors[meal.mealType] || defaultColor;\n    const barX = xOuter(meal.date) + xInner(meal.mealType);\n    const barWidth = xInner.bandwidth();\n    \n    svg.append(\"rect\")\n      .attr(\"class\", \"actual-energy-bar\")\n      .attr(\"x\", barX)\n      .attr(\"y\", y(meal.actualEnergy))\n      .attr(\"width\", barWidth)\n      .attr(\"height\", height - y(meal.actualEnergy))\n      .attr(\"fill\", mealColor)\n      .attr(\"opacity\", 0.9)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1)\n      .on(\"mouseover\", function(event) {\n        d3.select(this).attr(\"opacity\", 0.7);\n        tooltip\n          .style(\"visibility\", \"visible\")\n          .html(`\n            <div style=\"font-weight:bold;margin-bottom:10px;font-size:15px;\">${meal.date} - ${meal.mealType}</div>\n            <div style=\"margin-bottom:6px;\">Total Calories: ${Math.round(meal.calories)}</div>\n            <div style=\"margin-bottom:6px;\"><strong>Usable Energy: ${Math.round(meal.actualEnergy)} cal (${meal.efficiency}% efficient)</strong></div>\n            <div style=\"margin-bottom:12px;\">Energy Lost: ${Math.round(meal.wastedEnergy)} cal</div>\n            <div style=\"font-weight:bold;margin-bottom:5px;\">Individual Items:</div>\n            <ul style=\"margin-top:0;padding-left:20px;\">\n              ${meal.originalMeals.map(item => `\n                <li>${item.name} - ${item.calories} cal (${item.efficiency || meal.efficiency}% efficient)</li>\n              `).join('')}\n            </ul>\n          `)\n          .style(\"left\", `${event.pageX + 15}px`)\n          .style(\"top\", `${event.pageY - 10}px`);\n      })\n      .on(\"mouseout\", function() {\n        d3.select(this).attr(\"opacity\", 0.9);\n        tooltip.style(\"visibility\", \"hidden\");\n      });\n    \n    svg.append(\"rect\")\n      .attr(\"class\", \"potential-energy-bar\")\n      .attr(\"x\", barX)\n      .attr(\"y\", y(meal.calories))\n      .attr(\"width\", barWidth)\n      .attr(\"height\", y(meal.actualEnergy) - y(meal.calories))\n      .attr(\"fill\", mealColor)\n      .attr(\"opacity\", 0.3)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke-dasharray\", \"3,3\")\n      .on(\"mouseover\", function(event) {\n        d3.select(this).attr(\"opacity\", 0.5);\n        tooltip\n          .style(\"visibility\", \"visible\")\n          .html(`\n            <div style=\"font-weight:bold;margin-bottom:10px;font-size:15px;\">${meal.date} - ${meal.mealType}</div>\n            <div style=\"margin-bottom:6px;\">Total Calories: ${Math.round(meal.calories)}</div>\n            <div style=\"margin-bottom:6px;\">Usable Energy: ${Math.round(meal.actualEnergy)} cal (${meal.efficiency}% efficient)</div>\n            <div style=\"margin-bottom:12px;\"><strong>Energy Lost: ${Math.round(meal.wastedEnergy)} cal</strong></div>\n          `)\n          .style(\"left\", `${event.pageX + 15}px`)\n          .style(\"top\", `${event.pageY - 10}px`);\n      })\n      .on(\"mouseout\", function() {\n        d3.select(this).attr(\"opacity\", 0.3);\n        tooltip.style(\"visibility\", \"hidden\");\n      });\n  });\n\n  if (sortedCombinedData.length > 0) {\n    const lineGenerator = d3.line()\n      .x(d => xOuter(d.date) + xInner(d.mealType) + xInner.bandwidth() / 2)\n      .y(d => yEff(d.efficiency))\n      .defined(d => d.efficiency != null)\n      .curve(d3.curveMonotoneX);\n    \n    svg.append(\"path\")\n      .datum(sortedCombinedData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#FF5733\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"d\", lineGenerator);\n    \n    svg.selectAll(\".efficiency-point\")\n      .data(combinedData)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"efficiency-point\")\n      .attr(\"cx\", d => xOuter(d.date) + xInner(d.mealType) + xInner.bandwidth() / 2)\n      .attr(\"cy\", d => yEff(d.efficiency))\n      .attr(\"r\", 5)\n      .attr(\"fill\", \"#FF5733\")\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1)\n      .on(\"mouseover\", function(event, d) {\n        d3.select(this).attr(\"r\", 8);\n        tooltip\n          .style(\"visibility\", \"visible\")\n          .html(`\n            <div style=\"font-weight:bold;font-size:16px;\">${d.mealType} on ${d.date}</div>\n            <div>Metabolic Efficiency: <strong>${d.efficiency}%</strong></div>\n            <div style=\"margin-top:6px\">Your body converts <strong>${d.efficiency}%</strong> of consumed calories into usable energy.</div>\n          `)\n          .style(\"left\", `${event.pageX + 15}px`)\n          .style(\"top\", `${event.pageY - 10}px`);\n      })\n      .on(\"mouseout\", function() {\n        d3.select(this).attr(\"r\", 5);\n        tooltip.style(\"visibility\", \"hidden\");\n      });\n  }\n  \n  const legendY = height + 80;\n  \n  svg.append(\"line\")\n    .attr(\"x1\", 10)\n    .attr(\"x2\", 40)\n    .attr(\"y1\", legendY)\n    .attr(\"y2\", legendY)\n    .attr(\"stroke\", \"#FF5733\")\n    .attr(\"stroke-width\", 3);\n  \n  svg.append(\"circle\")\n    .attr(\"cx\", 25)\n    .attr(\"cy\", legendY)\n    .attr(\"r\", 5)\n    .attr(\"fill\", \"#FF5733\")\n    .attr(\"stroke\", \"#333\")\n    .attr(\"stroke-width\", 1);\n  \n  svg.append(\"text\")\n    .attr(\"x\", 50)\n    .attr(\"y\", legendY + 4)\n    .style(\"font-size\", \"12px\")\n    .text(\"Efficiency (%)\");\n  \n  const legendData = [\n    { label: \"Usable Energy\", color: \"#2EC4B6\", opacity: 0.9 },\n    { label: \"Energy Lost\", color: \"#2EC4B6\", opacity: 0.3 }\n  ];\n  \n  svg.selectAll(\".legend-rect\")\n    .data(legendData)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", 200)\n    .attr(\"y\", (d, i) => legendY - 10 + i * 20)\n    .attr(\"width\", 15)\n    .attr(\"height\", 15)\n    .attr(\"fill\", d => d.color)\n    .attr(\"opacity\", d => d.opacity)\n    .attr(\"stroke\", \"#333\")\n    .attr(\"stroke-width\", 1);\n  \n  svg.selectAll(\".legend-text\")\n    .data(legendData)\n    .enter()\n    .append(\"text\")\n    .attr(\"x\", 225)\n    .attr(\"y\", (d, i) => legendY + 2 + i * 20)\n    .style(\"font-size\", \"12px\")\n    .text(d => d.label);\n  \n  // UPDATED: Expanded meal type legend to accommodate all snack types\n  const mealTypeData = Object.entries(mealColors).map(([type, color]) => ({ type, color }));\n  \n  svg.selectAll(\".meal-type-rect\")\n    .data(mealTypeData)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", (d, i) => 400 + Math.floor(i/2) * 130)\n    .attr(\"y\", (d, i) => legendY - 10 + (i % 2) * 20)\n    .attr(\"width\", 15)\n    .attr(\"height\", 15)\n    .attr(\"fill\", d => d.color)\n    .attr(\"stroke\", \"#333\")\n    .attr(\"stroke-width\", 1);\n  \n  svg.selectAll(\".meal-type-text\")\n    .data(mealTypeData)\n    .enter()\n    .append(\"text\")\n    .attr(\"x\", (d, i) => 425 + Math.floor(i/2) * 130)\n    .attr(\"y\", (d, i) => legendY + 2 + (i % 2) * 20)\n    .style(\"font-size\", \"11px\")\n    .text(d => d.type);\n\n  return () => {\n    d3.select(\".chart-tooltip\").remove();\n  };\n}, [chartRef, processedData, userData]);\n\nif (!processedData || processedData.length === 0) {\n  return (\n    <div className=\"chart-container\">\n      <div ref={chartRef} className=\"efficiency-chart\">\n        <div className=\"placeholder\">\n          <p>No meal data available. Please add some meals to see your metabolic efficiency chart.</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nreturn (\n  <div className=\"chart-container\">\n    <div ref={chartRef} className=\"efficiency-chart\" style={{ minHeight: '500px' }}></div>\n    <div className=\"chart-info\">\n      <h4>Understanding Metabolic Efficiency</h4>\n      <p>\n        Metabolic efficiency refers to how effectively your body converts the calories you consume into usable energy. \n        The chart shows both the energy your body successfully uses (solid bars) and the energy that's lost during \n        digestion and metabolism (transparent sections).\n      </p>\n      <p>\n        <strong>Key insights:</strong>\n      </p>\n      <ul>\n        <li>Higher efficiency percentages mean more of your food energy is being utilized</li>\n        <li>The red line tracks your efficiency over time across different meals</li>\n        <li>Different meal types and timing can affect how efficiently your body processes food</li>\n        <li><strong>Snack Timing:</strong> Morning snacks (90%) are more efficient than late night snacks (60%)</li>\n      </ul>\n    </div>\n  </div>\n);\n}\n\nexport { AnalysisTab, MacronutrientChart, MicronutrientChart, EfficiencyChart };\n\nconst debugMealData = (mealData) => {\nconsole.log(\"=== MEAL DATA DEBUGGER ===\");\n\nconst sortedData = [...mealData].sort((a, b) => {\n  return a.time.localeCompare(b.time);\n});\n\nsortedData.forEach(meal => {\n  console.log(\n    `Time: \"${meal.time}\" | ` +\n    `MealType: \"${meal.mealType}\" | ` + \n    `Date: \"${meal.date}\"`\n  );\n});\n\nconsole.log(\"=== END MEAL DATA ===\");\nreturn mealData;\n};\n\nconst convertTo24Hour = (time12h) => {\n  if (!time12h) return '';\n\n  const [time, modifier] = time12h.split(' ');\n  if (!time || !modifier) return time12h; // Return original if format is unexpected\n  \n  let [hours, minutes] = time.split(':');\n  \n  // Convert to number for easier manipulation\n  let hour24 = parseInt(hours, 10);\n  \n  if (modifier.toUpperCase() === 'AM') {\n    // AM: 12:xx AM becomes 00:xx, everything else stays the same\n    if (hour24 === 12) {\n      hour24 = 0;\n    }\n  } else if (modifier.toUpperCase() === 'PM') {\n    // PM: 12:xx PM stays 12:xx, everything else adds 12\n    if (hour24 !== 12) {\n      hour24 += 12;\n    }\n  }\n  \n  // Ensure two-digit format\n  const formattedHour = hour24.toString().padStart(2, '0');\n  \n  return `${formattedHour}:${minutes}`;\n};\n\n// Test cases to verify the fix\nconsole.log('Testing convertTo24Hour function:');\nconsole.log('12:30 AM ->', convertTo24Hour('12:30 AM')); // Should be 00:30\nconsole.log('1:30 AM  ->', convertTo24Hour('1:30 AM'));  // Should be 01:30\nconsole.log('11:59 AM ->', convertTo24Hour('11:59 AM')); // Should be 11:59\nconsole.log('12:00 PM ->', convertTo24Hour('12:00 PM')); // Should be 12:00\nconsole.log('1:30 PM  ->', convertTo24Hour('1:30 PM'));  // Should be 13:30\nconsole.log('11:59 PM ->', convertTo24Hour('11:59 PM')); // Should be 23:59\n\nconst prepareChartData = (rawMealData) => {\n  console.log('prepareChartData called with:', rawMealData);\n\n  if (!rawMealData || !Array.isArray(rawMealData)) {\n    console.warn('prepareChartData: Invalid input data');\n    return [];\n  }\n\n  try {\n    const formattedData = rawMealData.map((meal, index) => {\n      try {\n        let timeFormatted = meal.time || '12:00 PM';\n        \n        // If time is already in 24-hour format, convert it back to 12-hour for consistency\n        if (timeFormatted.match(/^\\d{1,2}:\\d{2}$/) && !timeFormatted.includes('AM') && !timeFormatted.includes('PM')) {\n          // Convert 24-hour to 12-hour format\n          const [hours, minutes] = timeFormatted.split(':');\n          const hour24 = parseInt(hours, 10);\n          const hour12 = hour24 === 0 ? 12 : hour24 > 12 ? hour24 - 12 : hour24;\n          const ampm = hour24 < 12 ? 'AM' : 'PM';\n          timeFormatted = `${hour12}:${minutes} ${ampm}`;\n          console.log(`Converted time from ${meal.time} to ${timeFormatted}`);\n        }\n        \n        return {\n          ...meal,\n          time: timeFormatted // Keep consistent format\n        };\n      } catch (err) {\n        console.warn(`Error processing meal ${index} in prepareChartData:`, err);\n        return {\n          ...meal,\n          time: '12:00 PM'\n        };\n      }\n    });\n    \n    debugMealData(formattedData);\n    console.log('prepareChartData completed successfully:', formattedData.length, 'items');\n    return formattedData;\n  } catch (err) {\n    console.error('Error in prepareChartData:', err);\n    return rawMealData || [];\n  }\n};\n\nconst BulletChart = ({ data, maxPercent }) => {\nconst actualWidth = Math.min(100, (data.value / data.rda) * 100);\nconst optimalWidth = Math.min(100, 100);\n\nconst getColor = (percent) => {\n  if (percent >= 100) return \"#4CAF50\";\n  if (percent >= 70) return \"#8BC34A\";\n  if (percent >= 50) return \"#FFC107\";\n  if (percent >= 30) return \"#FF9800\";\n  return \"#F44336\";\n};\n\nconst barColor = getColor(actualWidth);\n\nreturn (\n  <div className=\"bullet-chart\">\n    <div className=\"bullet-chart-header\">\n      <div className=\"bullet-chart-title\">\n        <span className=\"nutrient-name\">{data.name}</span>\n        {data.isAdjusted && (\n          <span className=\"adjusted-badge\">\n            Adjusted\n          </span>\n        )}\n      </div>\n      <div className=\"bullet-chart-values\">\n        {data.value.toFixed(2)} / {data.rda} {data.unit}\n        <span className=\"bullet-chart-percentage\" style={{ color: barColor }}>\n          ({Math.round(actualWidth)}%)\n        </span>\n      </div>\n    </div>\n    \n    <div className=\"bullet-chart-track\">\n      <div \n        className=\"threshold-marker\"\n        style={{ left: '70%' }}\n      ></div>\n      \n      <div \n        className=\"actual-value-bar\"\n        style={{ \n          width: `${actualWidth}%`, \n          backgroundColor: barColor \n        }}\n      ></div>\n      \n      <div \n        className=\"target-line\"\n        style={{ left: `${optimalWidth}%` }}\n      ></div>\n    </div>\n  </div>\n);\n};\n\nconst baseRDAData10 = {\n  vitamin_a: {\n    value: 900,\n    unit: 'mcg',\n    femaleAdjust: 0.78,\n    description: \"Supports vision, immune function, and cell growth\"\n  },\n  vitamin_c: {\n    value: 90,\n    unit: 'mg',\n    femaleAdjust: 0.83,\n    description: \"Antioxidant that supports immune function and collagen production\"\n  },\n  vitamin_d: {\n    value: 15, // Changed from 600 UI to 15 mcg\n    unit: 'mcg',\n    femaleAdjust: 1.0,\n    description: \"Crucial for calcium absorption and bone health\"\n  },\n  vitamin_e: {\n    value: 15,\n    unit: 'mg',\n    femaleAdjust: 1.0,\n    description: \"Antioxidant that protects cells from damage\"\n  },\n  vitamin_b6: {\n    value: 1.3,\n    unit: 'mg',\n    femaleAdjust: 1.0,\n    description: \"Important for metabolism and brain development\"\n  },\n  vitamin_b12: {\n    value: 2.4,\n    unit: 'mcg',\n    femaleAdjust: 1.0,\n    description: \"Essential for nerve function and blood cell formation\"\n  },\n  folate: {\n    value: 400,\n    unit: 'mcg',\n    femaleAdjust: 1.0,\n    description: \"Critical for cell division and DNA synthesis\"\n  },\n  iron: {\n    value: 8,\n    unit: 'mg',\n    femaleAdjust: 2.25,\n    description: \"Essential for oxygen transport in the blood\"\n  },\n  calcium: {\n    value: 1000,\n    unit: 'mg',\n    femaleAdjust: 1.0,\n    description: \"Critical for bone health and muscle function\"\n  },\n  magnesium: {\n    value: 420,\n    unit: 'mg',\n    femaleAdjust: 0.76,\n    description: \"Involved in over 300 biochemical reactions in the body\"\n  },\n  zinc: {\n    value: 11,\n    unit: 'mg',\n    femaleAdjust: 0.73,\n    description: \"Important for immune function and wound healing\"\n  },\n  selenium: {\n    value: 55,\n    unit: 'mcg',\n    femaleAdjust: 1.0,\n    description: \"Antioxidant that helps protect cells from damage\"\n  },\n  copper: {\n    value: 0.9,\n    unit: 'mg',\n    femaleAdjust: 1.0,\n    description: \"Important for red blood cell formation and nerve function\"\n  },\n  vitamin_b1: {\n    value: 1.2,\n    unit: 'mg',\n    femaleAdjust: 0.92,\n    description: \"Essential for energy metabolism\"\n  },\n  vitamin_b2: {\n    value: 1.3,\n    unit: 'mg',\n    femaleAdjust: 0.85,\n    description: \"Important for energy production and cell function\"\n  },\n  vitamin_b3: {\n    value: 16,\n    unit: 'mg',\n    femaleAdjust: 0.875, // 14mg / 16mg = 0.875 for correct female adjustment\n    description: \"Helps convert food into energy\"\n  }\n};\n\n\n\n\nfunction MicronutrientChart({ data, userData }) {\n  const [userInfo, setUserInfo] = useState(userData || {});\n  const [chartData, setChartData] = useState([]);\n  const [allChartData, setAllChartData] = useState([]); // Stores unfiltered data\n  // Use baseRDAData10 from the global scope/import for ensureCompleteNutrientData\n  const [nutrientIntake] = useState(data && Object.keys(data).length > 0 ? ensureCompleteNutrientData(data, baseRDAData10) : {});\n  const [personalizedRDA, setPersonalizedRDA] = useState({}); // Line 1316\n  const [displayMode, setDisplayMode] = useState('all');\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  // Helper function to get severity factor\n  const getSeverityFactor = useCallback((severity) => {\n    switch (severity?.toLowerCase()) {\n      case 'mild': return 1.1;\n      case 'moderate': return 1.3;\n      case 'severe': return 1.5;\n      case 'very severe': return 1.8;\n      default: return 1.0;\n    }\n  }, []);\n\n  // Standardize units for comparison\n  const standardizeUnitValue = useCallback((value, fromUnit, toUnit) => {\n    if (fromUnit === toUnit) return value;\n\n    if (fromUnit === 'g' && toUnit === 'mg') return value * 1000;\n    if (fromUnit === 'mg' && toUnit === 'mcg') return value * 1000;\n    if (fromUnit === 'mcg' && toUnit === 'mg') return value * 0.001;\n    if (fromUnit === 'mg' && toUnit === 'g') return value * 0.001;\n\n    console.warn(`Unit conversion from ${fromUnit} to ${toUnit} not defined for value ${value}`);\n    return value;\n  }, []);\n\n  const convertFromIU = useCallback((nutrient, value, inputUnit) => {\n    if (inputUnit?.toUpperCase() !== 'IU') return value;\n\n    const conversionFactors = {\n      vitamin_a: 0.3,     // 1 IU = ~0.3 mcg RAE (approximation)\n      vitamin_d: 0.025,   // 1 IU = 0.025 mcg (40 IU = 1 mcg)\n      vitamin_e: 0.67     // 1 IU = 0.67 mg alpha-tocopherol\n    };\n\n    return value * (conversionFactors[nutrient] || 1);\n  }, []);\n\n  // Helper function to process nutrient data into chart format\n  const processNutrientData = useCallback((intakeData, rdaData) => {\n    const processedNutrients = [];\n\n    // Iterate over the personalizedRDA to ensure all required nutrients are included\n    for (const nutrientKey in rdaData) {\n      if (rdaData.hasOwnProperty(nutrientKey)) {\n        const rdaInfo = rdaData[nutrientKey];\n\n        // Ensure RDA info is valid and has a unit\n        if (!rdaInfo || rdaInfo.value === undefined || rdaInfo.unit === undefined) {\n          console.warn(`Skipping ${nutrientKey}: No valid RDA information (value or unit missing).`, rdaInfo);\n          continue; // Skip this nutrient if RDA info is incomplete\n        }\n\n        const intakeDetails = intakeData[nutrientKey]; // This is from ensureCompleteNutrientData, should be {value, unit}\n\n        let intakeValue = 0;\n        let intakeUnit = rdaInfo.unit; // Default intake unit to RDA unit for consistency\n\n        if (intakeDetails && intakeDetails.value !== undefined) {\n            intakeValue = intakeDetails.value;\n            intakeUnit = intakeDetails.unit || rdaInfo.unit; // Use intake unit if present, else RDA unit\n        } else {\n            // If intakeDetails is null/undefined or doesn't have a value property,\n            // intakeValue remains 0, and intakeUnit remains rdaInfo.unit\n        }\n\n        // Convert from IU if intake was in IU\n        let standardizedIntakeValue = convertFromIU(nutrientKey, intakeValue, intakeUnit);\n\n        // Standardize intake unit to RDA unit\n        standardizedIntakeValue = standardizeUnitValue(standardizedIntakeValue, intakeUnit, rdaInfo.unit);\n\n        // Handle cases where standardizedIntakeValue might still be invalid (e.g., from conversion errors)\n        if (isNaN(standardizedIntakeValue) || !isFinite(standardizedIntakeValue)) {\n            console.warn(`Invalid standardized intake value for ${nutrientKey}. Setting to 0.`, standardizedIntakeValue);\n            standardizedIntakeValue = 0;\n        }\n\n        // Calculate percentage of RDA\n        const percentOfRDA = (standardizedIntakeValue / rdaInfo.value) * 100;\n\n        // Cap percentage at 1000% for display purposes (or whatever max you use for BulletChart)\n        const cappedPercentage = Math.min(1000, percentOfRDA); // Ensure it doesn't break visualization\n\n        // Format the nutrient name and determine category\n        const formattedName = nutrientKey.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n        // Use category from baseRDAData10 if available, otherwise infer\n        const category = baseRDAData10[nutrientKey]?.category || (nutrientKey.includes('vitamin') ? 'vitamins' : 'minerals');\n\n        processedNutrients.push({\n          key: nutrientKey, // Unique key for React list rendering\n          name: formattedName,\n          value: percentOfRDA, // Actual percentage (for calculations and display)\n          cappedValue: cappedPercentage, // For visualization (max 1000%)\n          rawValue: intakeValue, // The original intake value\n          standardizedValue: standardizedIntakeValue, // Intake value after IU/unit conversions\n          unit: intakeUnit, // Unit of the original intake\n          rda: rdaInfo.value, // Personalized RDA value\n          rdaUnit: rdaInfo.unit, // Unit of the personalized RDA\n          isAdjustedRDA: rdaInfo.isAdjusted, // Whether personalized RDA was adjusted\n          isExtreme: percentOfRDA > 1000, // Flag for very high intake\n          percentOfRDA: percentOfRDA, // Redundant but useful for consistency in filters\n          category: category,\n        });\n      }\n    }\n\n    // Sort the processed nutrients (e.g., by percentage of RDA, ascending for deficient view by default)\n    return processedNutrients.sort((a, b) => a.percentOfRDA - b.percentOfRDA);\n  }, [convertFromIU, standardizeUnitValue]); // Removed baseRDAData10 from dependencies\n\n  const applyFilters = useCallback((dataToFilter) => {\n    let filteredData = [...dataToFilter];\n\n    if (selectedCategory !== 'all') {\n      filteredData = filteredData.filter(item => item.category === selectedCategory);\n    }\n\n    if (displayMode === 'deficient') {\n      filteredData = filteredData.filter(item => item.percentOfRDA < 70);\n      filteredData.sort((a, b) => a.percentOfRDA - b.percentOfRDA); // Sort deficient low to high\n    } else if (displayMode === 'optimal') {\n      filteredData = filteredData.filter(item => item.percentOfRDA >= 100);\n      filteredData.sort((a, b) => b.percentOfRDA - a.percentOfRDA); // Sort optimal high to low\n    } else { // 'all' mode\n      filteredData.sort((a, b) => a.percentOfRDA - b.percentOfRDA); // Default to low to high for 'all'\n    }\n\n    setChartData(filteredData);\n  }, [displayMode, selectedCategory]);\n\n  const calculatePersonalizedRDA = useCallback((baseRDAData_, userData) => {\n    if (!baseRDAData_ || Object.keys(baseRDAData_).length === 0) {\n      console.error('baseRDAData_ is empty or invalid!');\n      return {};\n    }\n\n    const personalRDA = JSON.parse(JSON.stringify(baseRDAData_)); // Deep copy\n\n    Object.keys(personalRDA).forEach(nutrient => {\n      // Ensure the nutrient entry itself is an object and has a value property\n      if (!personalRDA[nutrient] || typeof personalRDA[nutrient].value !== 'number') {\n        console.error(`Invalid data structure for ${nutrient} in baseRDAData_ or copy:`, personalRDA[nutrient]);\n        // Set a default valid structure to prevent further errors downstream\n        personalRDA[nutrient] = { value: 0, unit: personalRDA[nutrient]?.unit || 'mg', isAdjusted: false };\n        return;\n      }\n\n      let adjustedValue = personalRDA[nutrient].value;\n\n      // Apply gender adjustment\n      if (userData?.gender && userData.gender.toLowerCase() === 'female') {\n        const femaleAdjust = personalRDA[nutrient].femaleAdjust || 1.0;\n        adjustedValue *= femaleAdjust;\n      }\n\n      // Apply age adjustments\n      if (userData?.age) {\n        let ageMultiplier = 1.0;\n        if (userData.age >= 70) {\n          if (nutrient === 'vitamin_d') ageMultiplier = 1.2;\n          if (nutrient === 'vitamin_b12') ageMultiplier = 1.1;\n          if (nutrient === 'calcium') ageMultiplier = 1.15;\n        } else if (userData.age >= 50) {\n          if (nutrient === 'vitamin_d') ageMultiplier = 1.1;\n          if (nutrient === 'vitamin_b12') ageMultiplier = 1.05;\n        } else if (userData.age <= 18) {\n          if (nutrient === 'calcium') ageMultiplier = 1.15;\n          if (nutrient === 'iron') ageMultiplier = 1.1;\n        }\n\n        if (ageMultiplier !== 1.0) {\n          adjustedValue *= ageMultiplier;\n        }\n      }\n\n      // Apply COVID severity adjustments\n      const severity = userData?.covid_severity || userData?.longCovidSeverity;\n      const hasCovidCondition = severity && severity !== 'None' && severity !== null && severity !== undefined;\n\n      if (hasCovidCondition) {\n        const severityFactor = getSeverityFactor(severity);\n\n        if (['vitamin_c', 'vitamin_d', 'zinc', 'selenium'].includes(nutrient)) {\n          const covidMultiplier = Math.min(severityFactor * 1.5, 2.5); // Cap at 2.5x\n          adjustedValue *= covidMultiplier;\n        } else if (['vitamin_a', 'vitamin_e', 'vitamin_b6', 'vitamin_b12', 'folate', 'iron'].includes(nutrient)) {\n          const covidMultiplier = Math.min(severityFactor * 1.3, 2.0); // Cap at 2x\n          adjustedValue *= covidMultiplier;\n        } else if (['magnesium', 'copper', 'vitamin_b1', 'vitamin_b2', 'vitamin_b3'].includes(nutrient)) {\n          const covidMultiplier = Math.min(severityFactor * 1.1, 1.5); // Cap at 1.5x\n          adjustedValue *= covidMultiplier;\n        }\n      }\n\n      // Final safety check\n      if (isNaN(adjustedValue) || !isFinite(adjustedValue) || adjustedValue <= 0) {\n        console.error(`Invalid final value for ${nutrient}: ${adjustedValue}, resetting to base`);\n        adjustedValue = personalRDA[nutrient].value; // Revert to base if invalid\n      }\n\n      const roundedValue = Math.round(adjustedValue * 10) / 10;\n\n      personalRDA[nutrient] = {\n        ...personalRDA[nutrient],\n        value: roundedValue,\n        isAdjusted: roundedValue !== baseRDAData_[nutrient].value // Check against original base value\n      };\n    });\n\n    return personalRDA;\n  }, [getSeverityFactor]);\n\n\n  // Get nutrient status label and color\n  const getNutrientStatus = (percentValue) => {\n    if (percentValue >= 100) return { label: \"Optimal\", color: \"#4CAF50\" };\n    if (percentValue >= 70) return { label: \"Good\", color: \"#8BC34A\" };\n    if (percentValue >= 50) return { label: \"Moderate\", color: \"#FFC107\" }; // Added 50-69%\n    if (percentValue >= 30) return { label: \"Low\", color: \"#FF9800\" }; // Adjusted\n    return { label: \"Very Low\", color: \"#F44336\" }; // Adjusted\n  };\n\n  // Helper function to provide nutrient-specific info\n  const getNutrientInfo = (nutrientName) => {\n    // You can pull this from baseRDAData10.description directly if consistent\n    // or keep a separate object if descriptions vary or are more detailed\n    const nutrientInfoMap = {};\n    for (const key in baseRDAData10) {\n        // Use key.replace to match the formatted name or directly use key\n        nutrientInfoMap[key.replace(/_/g, ' ')] = baseRDAData10[key].description;\n    }\n\n    // Attempt to match by exact name first, then by partial\n    const exactMatch = nutrientInfoMap[nutrientName.toLowerCase()]; // Ensure case consistency\n    if (exactMatch) return exactMatch;\n\n    for (const key in nutrientInfoMap) {\n      if (nutrientName.toLowerCase().includes(key)) { // Ensure case consistency\n        return nutrientInfoMap[key];\n      }\n    }\n    return '';\n  };\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    const timer = setTimeout(() => {\n      try {\n        const calculatedRDA = calculatePersonalizedRDA(baseRDAData10, userInfo);\n\n        if (!calculatedRDA || Object.keys(calculatedRDA).length === 0) {\n          console.error('Failed to calculate RDA values');\n          setIsLoading(false);\n          return;\n        }\n\n        setPersonalizedRDA(calculatedRDA);\n\n        // Process all nutrient data first and store it in allChartData\n        // processNutrientData now iterates over calculatedRDA to include all,\n        // using nutrientIntake for actual consumed values.\n        const processedAllData = processNutrientData(nutrientIntake, calculatedRDA);\n        setAllChartData(processedAllData);\n\n        // Apply initial filters to set chartData\n        applyFilters(processedAllData);\n\n      } catch (error) {\n        console.error('Error in MicronutrientChart useEffect:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }, 500); // Small delay to show loading state\n\n    return () => clearTimeout(timer); // Cleanup timeout on unmount or re-render\n  }, [userInfo, nutrientIntake, calculatePersonalizedRDA, processNutrientData, applyFilters]); // Removed baseRDAData10 from dependencies\n\n  // Effect to re-apply filters whenever display mode, category, or allChartData changes\n  useEffect(() => {\n    if (allChartData.length > 0) {\n      applyFilters(allChartData);\n    }\n  }, [displayMode, selectedCategory, allChartData, applyFilters]);\n\n  const getCovidSeverityClass = (severity) => {\n    switch(severity?.toLowerCase()) {\n      case 'mild': return 'covid-severity-mild';\n      case 'moderate': return 'covid-severity-moderate';\n      case 'severe': return 'covid-severity-severe';\n      case 'very severe': return 'covid-severity-very-severe';\n      default: return 'covid-severity-unknown';\n    }\n  };\n\n  const toggleCovidSeverity = () => {\n    const severities = [null, 'mild', 'moderate', 'severe', 'very severe'];\n    const currentSeverity = userInfo.covid_severity?.toLowerCase() || userInfo.longCovidSeverity?.toLowerCase() || null;\n    const currentIndex = severities.indexOf(currentSeverity);\n    const nextIndex = (currentIndex + 1) % severities.length;\n    const newSeverity = severities[nextIndex];\n\n    const updatedUserInfo = {\n      ...userInfo,\n      covid_severity: newSeverity,\n      longCovidSeverity: newSeverity,\n      hasLongCovid: newSeverity !== null\n    };\n\n    if (newSeverity === null) {\n      delete updatedUserInfo.covid_severity;\n      delete updatedUserInfo.longCovidSeverity;\n      updatedUserInfo.hasLongCovid = false;\n    }\n\n    setUserInfo(updatedUserInfo);\n  };\n\n  const getCurrentCovidSeverity = () => {\n    const severity = userInfo.covid_severity || userInfo.longCovidSeverity;\n    if (!severity || severity === null || severity === 'None') return 'None';\n    return severity.charAt(0).toUpperCase() + severity.slice(1);\n  };\n\n  const changeDisplayMode = (mode) => {\n    setDisplayMode(mode);\n  };\n\n  const changeCategory = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const getFilterDescription = () => {\n    const displayPart = displayMode === 'deficient' ? \"below 70% RDA\" : displayMode === 'optimal' ? \"at 100%+ RDA\" : \"\";\n    const categoryPart = selectedCategory === 'vitamins' ? \"vitamins\" : selectedCategory === 'minerals' ? \"minerals\" : \"nutrients\";\n\n    // Construct the phrase dynamically\n    let description = categoryPart;\n    if (displayPart) {\n        description += ` ${displayPart}`;\n    }\n    return description.trim();\n  };\n\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          <p className=\"loading-text\">Loading personalized micronutrient data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const deficientCount = allChartData.filter(item => item.percentOfRDA < 70).length;\n\n  // Show empty state if no user data AND no meal data\n  if ((!data || Object.keys(data).length === 0) && (!userData || Object.keys(userData).length === 0)) {\n    return (\n      <div className=\"micronutrient-chart-container\">\n        <div className=\"chart-card\">\n          <div className=\"chart-header\">\n            <h2 className=\"chart-title\">Micronutrient Status</h2>\n          </div>\n          <div className=\"empty-state\">\n            <div className=\"empty-state-icon\">📊</div>\n            <h3 className=\"empty-state-title\">No Data Available</h3>\n            <p className=\"empty-state-description\">\n              Please set up your profile and log some meals to see your personalized micronutrient analysis.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show empty state if user data exists but no meal data, or no processed data at all\n  // The allChartData check ensures that even if 'data' is present, if no valid nutrients\n  // were processed (e.g., mismatch with RDA), it still shows empty state.\n  if (!data || Object.keys(data).length === 0 || allChartData.length === 0) {\n    return (\n      <div className=\"micronutrient-chart-container\">\n        <div className=\"chart-card\">\n          <div className=\"chart-header\">\n            <h2 className=\"chart-title\">Micronutrient Status</h2>\n          </div>\n          <div className=\"empty-state\">\n            <div className=\"empty-state-icon\">📊</div>\n            <h3 className=\"empty-state-title\">No Micronutrient Data Available</h3>\n            <p className=\"empty-state-description\">\n              Once you log some meals, we'll analyze your nutrient intake and show your personalized micronutrient status here.\n            </p>\n          </div>\n        </div>\n        <div className=\"profile-card\">\n          <h3 className=\"profile-title\">User Profile</h3>\n          <div className=\"profile-grid\">\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">Age</p>\n              <p className=\"profile-value\">{userInfo?.age || 'Not specified'} years</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">Gender</p>\n              <p className=\"profile-value\">{userInfo?.gender ? userInfo.gender.charAt(0).toUpperCase() + userInfo.gender.slice(1) : 'Not specified'}</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">BMI</p>\n              <p className=\"profile-value\">{userInfo?.weight && userInfo?.height ?\n                (userInfo.weight / Math.pow(userInfo.height/100, 2)).toFixed(1) : 'N/A'}</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">Activity Level</p>\n              <p className=\"profile-value\">{userInfo?.activity_level || 'Not specified'}</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">Medical Conditions</p>\n              <p className=\"profile-value\">{userInfo?.medical_conditions && userInfo.medical_conditions.length > 0 ?\n                userInfo.medical_conditions.map(c => c.charAt(0).toUpperCase() + c.slice(1)).join(', ') : 'None'}</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">COVID Status</p>\n              <button\n                onClick={toggleCovidSeverity}\n                className=\"covid-toggle-button\"\n                style={{\n                  padding: '8px 12px',\n                  backgroundColor: '#e3f2fd',\n                  border: '2px solid #2196f3',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px',\n                  fontWeight: '500',\n                  color: '#1976d2',\n                  transition: 'all 0.2s ease',\n                  minWidth: '120px'\n                }}\n                onMouseEnter={(e) => {\n                  e.target.style.backgroundColor = '#bbdefb';\n                  e.target.style.transform = 'scale(1.02)';\n                }}\n                onMouseLeave={(e) => {\n                  e.target.style.backgroundColor = '#e3f2fd';\n                  e.target.style.transform = 'scale(1)';\n                }}\n              >\n                {getCurrentCovidSeverity()} (Click to change)\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"micronutrient-chart-container\">\n      <div className=\"chart-card\">\n        <div className=\"chart-header\">\n          <h2 className=\"chart-title\">Micronutrient Status</h2>\n\n          <div className=\"display-mode-buttons\">\n            <button\n              onClick={() => changeDisplayMode('all')}\n              className={`mode-button ${displayMode === 'all' ? 'mode-button-active' : ''}`}\n            >\n              All ({allChartData.length})\n            </button>\n            <button\n              onClick={() => changeDisplayMode('deficient')}\n              className={`mode-button ${displayMode === 'deficient' ? 'mode-button-deficient' : ''}`}\n            >\n              Deficient ({deficientCount})\n            </button>\n            <button\n              onClick={() => changeDisplayMode('optimal')}\n              className={`mode-button ${displayMode === 'optimal' ? 'mode-button-optimal' : ''}`}\n            >\n              Optimal ({allChartData.filter(item => item.percentOfRDA >= 100).length})\n            </button>\n          </div>\n        </div>\n\n        <div className=\"category-filter\">\n          <button\n            onClick={() => changeCategory('all')}\n            className={`category-button ${selectedCategory === 'all' ? 'category-button-active' : ''}`}\n          >\n            All Nutrients\n          </button>\n          <button\n            onClick={() => changeCategory('vitamins')}\n            className={`category-button ${selectedCategory === 'vitamins' ? 'category-button-active' : ''}`}\n          >\n            Vitamins\n          </button>\n          <button\n            onClick={() => changeCategory('minerals')}\n            className={`category-button ${selectedCategory === 'minerals' ? 'category-button-active' : ''}`}\n          >\n            Minerals\n          </button>\n        </div>\n\n        {deficientCount > 0 && (\n          <div className=\"deficiency-alert\">\n            <p className=\"deficiency-message\">\n              {deficientCount} {deficientCount === 1 ? 'nutrient is' : 'nutrients are'} below recommended levels.\n            </p>\n          </div>\n        )}\n\n        {userInfo.covid_severity && getCurrentCovidSeverity() !== 'None' && (\n          <div className={`covid-alert ${getCovidSeverityClass(userInfo.covid_severity)}`}>\n            <p className=\"covid-title\">Long COVID Condition - {getCurrentCovidSeverity()} Severity</p>\n            <p className=\"covid-description\">Recommended values have been adjusted for immune system support</p>\n          </div>\n        )}\n\n        <div className=\"chart-content\">\n          {chartData.length === 0 && allChartData.length > 0 ? (\n            <div className=\"no-filter-results\">\n              <div className=\"no-results-icon\">🎯</div>\n              <h3 className=\"no-results-title\">Great news!</h3>\n              <p className=\"no-results-message\">\n                You don't have any {getFilterDescription()} to display.\n                {displayMode === 'deficient' && \" This means your nutrient levels are doing well in this category!\"}\n                {displayMode === 'optimal' && \" Try logging more diverse meals to reach optimal levels.\"}\n              </p>\n              <p className=\"no-results-suggestion\">\n                Try selecting \"All\" to see your complete nutrient profile.\n              </p>\n            </div>\n          ) : (\n            chartData.map((nutrient) => (\n              <BulletChart\n                key={nutrient.key}\n                data={nutrient}\n                maxPercent={150} // Adjust max percentage for chart visualization if needed (e.g., to 200 or 500)\n                getNutrientStatus={getNutrientStatus}\n                getNutrientInfo={getNutrientInfo}\n              />\n            ))\n          )}\n        </div>\n\n        <div className=\"chart-legend\">\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-optimal\"></div>\n            <span className=\"legend-text\">≥ 100% (Optimal)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-good\"></div>\n            <span className=\"legend-text\">70-99% (Good)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-moderate\"></div>\n            <span className=\"legend-text\">50-69% (Moderate)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-low\"></div>\n            <span className=\"legend-text\">30-49% (Low)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-very-low\"></div>\n            <span className=\"legend-text\">0-29% (Very Low)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-target\"></div>\n            <span className=\"legend-text\">Target (100% RDA)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-threshold\"></div>\n            <span className=\"legend-text\">Deficiency Threshold (70%)</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"profile-card\">\n        <h3 className=\"profile-title\">User Profile</h3>\n        <div className=\"profile-grid\">\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">Age</p>\n            <p className=\"profile-value\">{userInfo?.age || 'Not specified'} years</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">Gender</p>\n            <p className=\"profile-value\">{userInfo?.gender ? userInfo.gender.charAt(0).toUpperCase() + userInfo.gender.slice(1) : 'Not specified'}</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">BMI</p>\n            <p className=\"profile-value\">{userInfo?.weight && userInfo?.height ?\n              (userInfo.weight / Math.pow(userInfo.height/100, 2)).toFixed(1) : 'N/A'}</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">Activity Level</p>\n            <p className=\"profile-value\">{userInfo?.activity_level || 'Not specified'}</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">Medical Conditions</p>\n            <p className=\"profile-value\">{userInfo?.medical_conditions && userInfo.medical_conditions.length > 0 ?\n              userInfo.medical_conditions.map(c => c.charAt(0).toUpperCase() + c.slice(1)).join(', ') : 'None'}</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">COVID Status</p>\n            <button\n              onClick={toggleCovidSeverity}\n              className=\"covid-toggle-button\"\n              style={{\n                padding: '8px 12px',\n                backgroundColor: '#e3f2fd',\n                border: '2px solid #2196f3',\n                borderRadius: '6px',\n                cursor: 'pointer',\n                fontSize: '14px',\n                fontWeight: '500',\n                color: '#1976d2',\n                transition: 'all 0.2s ease',\n                minWidth: '120px'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = '#bbdefb';\n                e.target.style.transform = 'scale(1.02)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = '#e3f2fd';\n                e.target.style.transform = 'scale(1)';\n              }}\n            >\n              {getCurrentCovidSeverity()} (Click to change)\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction AnalysisTab({ foodLog, userProfile }) {\nif (!foodLog || !Array.isArray(foodLog)) {\n  return (\n    <div className=\"analysis-error\">\n      <h3>Data Error</h3>\n      <p>Unable to load food log data. Please try refreshing the page.</p>\n    </div>\n  );\n}\n\nif (!userProfile) {\n  return (\n    <div className=\"analysis-error\">\n      <h3>Profile Error</h3>\n      <p>User profile data is missing. Please check your account settings.</p>\n    </div>\n  );\n}\n\nconst getChartData = () => {\n  if (foodLog.length === 0) return { macroSums: {}, microSums: {}, efficiencyData: [] };\n\n  const lastDate = foodLog[0].date;\n  const lastDayEntries = foodLog.filter(e => e.date === lastDate);\n  \n  console.log('=== DEBUGGING getChartData ===');\n  console.log('lastDayEntries:', lastDayEntries);\n  \n  // Calculate macro sums\n  const macroSums = lastDayEntries.reduce((acc, e) => {\n    acc.protein = (acc.protein || 0) + (parseFloat(e.protein) || 0);\n    acc.carbs = (acc.carbs || 0) + (parseFloat(e.carbs) || 0);\n    acc.fat = (acc.fat || 0) + (parseFloat(e.fat) || 0);\n    acc.calories = (acc.calories || 0) + (parseFloat(e.calories) || 0);\n    return acc;\n  }, {});\n  \n  // Debug each entry's micronutrients\n  lastDayEntries.forEach((entry, index) => {\n    console.log(`\\nEntry ${index}: ${entry.name}`);\n    console.log(`micronutrients:`, entry.micronutrients);\n    \n    if (entry.micronutrients) {\n      Object.entries(entry.micronutrients).forEach(([key, value]) => {\n        console.log(`  ${key}:`, value);\n      });\n    } else {\n      console.warn(`❌ No micronutrients data for ${entry.name}`);\n    }\n  });\n\n  const microSums = lastDayEntries.reduce((acc, e) => {\n    if (e.micronutrients) {\n      Object.entries(e.micronutrients).forEach(([k, v]) => {\n        if (!['protein','carbs','fat','calories','name','unit'].includes(k)) {\n          const value = typeof v === 'object' ? (v.value || 0) : v;\n          const numValue = parseFloat(value) || 0;\n          acc[k] = (acc[k] || 0) + numValue;\n          console.log(`Adding ${k}: ${numValue}, running total: ${acc[k]}`);\n        }\n      });\n    }\n    return acc;\n  }, {});\n\n  console.log('Final macroSums:', macroSums);\n  console.log('Final microSums:', microSums);\n  console.log('=== END getChartData DEBUG ===\\n');\n  \n  // Prepare efficiency data (use the entire food log for trend analysis)\n  const efficiencyData = foodLog;\n  \n  return { macroSums, microSums, efficiencyData };\n};\n\n// FIXED: Use timezone-safe date comparison\nconst today = formatDateForComparison(new Date());\nconst analysisDate = foodLog.length > 0 ? foodLog[0].date : today;\nconst todayMeals = foodLog.filter(entry => entry.date === today);\nconst { macroSums, microSums, efficiencyData } = getChartData();\n\nreturn (\n  <div className=\"food-analysis-section\">\n    <div className=\"analysis-header\">\n      <h3>📊 Nutritional Analysis Dashboard</h3>\n      <p className=\"analysis-date\">Analysis for {analysisDate}</p>\n      <div className=\"analysis-summary\">\n        <span className=\"summary-stat\">\n          <strong>{todayMeals.length}</strong> meals logged today ({today})\n        </span>\n      </div>\n    </div>\n\n    <div className=\"charts-container\">\n      \n      <div className=\"chart-wrapper\">\n        <div className=\"chart-header\">\n          <h4>🍎 Macronutrient Balance</h4>\n          <p className=\"chart-description\">Your protein, carbohydrate, and fat intake compared to personalized recommendations</p>\n        </div>\n        <MacronutrientChart userData={userProfile} userIntake={macroSums} />\n      </div>\n      \n      <div className=\"chart-wrapper\">\n        <div className=\"chart-header\">\n          <h4>💊 Micronutrient Status</h4>\n          <p className=\"chart-description\">Essential vitamins and minerals as percentage of recommended daily amounts</p>\n        </div>\n        <MicronutrientChart data={microSums} userData={userProfile} />\n      </div>\n      \n      <div className=\"chart-wrapper one\">\n        <div className=\"chart-header\">\n          <h4>⚡ Metabolic Efficiency</h4>\n          <p className=\"chart-description\">How effectively your body converts food calories into usable energy</p>\n        </div>\n        <EfficiencyChart data={prepareChartData(efficiencyData)} userData={userProfile} />\n      </div>\n\n    </div>\n  </div>\n);\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  collection, \n  query, \n  getDocs, \n  addDoc, \n  deleteDoc,\n  updateDoc,\n  doc,\n  getDoc,\n  Timestamp, \n  orderBy, \n  limit\n} from 'firebase/firestore';\nimport { db } from '../../firebase-config';\nimport \"../Common.css\";\nimport './FoodTrackerPage.css';\nimport { AnalysisTab } from './FoodTrackerAnalysis';\n\n// UPDATED: Expanded snack categories\nconst mealTypes = ['Breakfast', 'Morning Snack', 'Lunch', 'Afternoon Snack', 'Dinner', 'Late Night Snack'];\nconst TABS = ['Add Food', 'Food Journal', 'Analysis'];\nconst ENTRIES_PER_PAGE = 20;\n\nfunction FoodTrackerPage() {\n  const navigate = useNavigate();\n  \n  // State declarations\n  const [allFoodsCache, setAllFoodsCache] = useState([]);\n  \n  // ENABLED: Enhanced AI search functionality with Pyodide\n  const [pyodideStatus, setPyodideStatus] = useState('loading');\n  const [searchIndexBuilt, setSearchIndexBuilt] = useState(false);\n  \n  // User and authentication state\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userProfile, setUserProfile] = useState({\n    age: 30,\n    gender: 'female',\n    weight: 65,\n    height: 165,\n    activityLevel: 'moderate',\n    hasLongCovid: false,\n    longCovidSeverity: 'moderate'\n  });\n  const [authLoading, setAuthLoading] = useState(true);\n\n  // UI state\n  const [tab, setTab] = useState('Add Food');\n  \n  // Add Food state\n  const [search, setSearch] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedMeal, setSelectedMeal] = useState(null);\n  const [fields, setFields] = useState({});\n  const [mealType, setMealType] = useState('Breakfast');\n  const [time, setTime] = useState(() => new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }));\n  const [date, setDate] = useState(() => new Date().toISOString().slice(0, 10));\n  const [longCovidAdjust, setLongCovidAdjust] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  \n  // Food Journal state\n  const [foodLog, setFoodLog] = useState([]);\n  const [logLoading, setLogLoading] = useState(false);\n  const [journalError, setJournalError] = useState('');\n  const [journalPage, setJournalPage] = useState(1);\n  \n  // Edit/Delete state\n  const [editingEntry, setEditingEntry] = useState(null);\n  const [deleteConfirmId, setDeleteConfirmId] = useState(null);\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  \n  // Suggestion cache for performance\n  const [suggestionCache, setSuggestionCache] = useState({});\n\n// Handle logout - Complete logout from both localStorage and Firebase Auth\nconst handleLogout = async () => {\n  console.log('Logout clicked - starting complete logout process');\n  \n  try {\n    // Clear localStorage\n    console.log('Clearing localStorage userData');\n    localStorage.removeItem('userData');\n    \n    // Clear any other potential session data\n    sessionStorage.clear();\n    console.log('Cleared sessionStorage');\n    \n    // Reset component state\n    setCurrentUser(null);\n    setAuthLoading(false);\n    \n    console.log('Complete logout finished, navigating to login...');\n    \n    // Navigate to login with replace to prevent back navigation\n    navigate('/login', { replace: true });\n    \n  } catch (error) {\n    console.error('Error during logout:', error);\n    \n    // Even if logout fails, still clear local data and redirect\n    localStorage.removeItem('userData');\n    sessionStorage.clear();\n    setCurrentUser(null);\n    \n    navigate('/login', { replace: true });\n  }\n};\n  // Delete Confirmation Modal Component\n  const DeleteConfirmModal = ({ entryId, entryName, onConfirm, onCancel }) => (\n    <div className=\"modal-overlay\">\n      <div className=\"delete-confirm-modal\">\n        <h3>🗑️ Delete Food Entry</h3>\n        <p>Are you sure you want to delete this food entry?</p>\n        <div className=\"entry-preview\">\n          <strong>{entryName}</strong>\n        </div>\n        <p className=\"warning-text\">This action cannot be undone.</p>\n        <div className=\"modal-actions\">\n          <button \n            className=\"cancel-button\" \n            onClick={onCancel}\n            disabled={deleteLoading}\n          >\n            Cancel\n          </button>\n          <button \n            className=\"delete-button\" \n            onClick={() => onConfirm(entryId)}\n            disabled={deleteLoading}\n          >\n            {deleteLoading ? 'Deleting...' : 'Delete Entry'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n  // Handle delete entry\n  const handleDeleteEntry = async (entryId) => {\n    if (!currentUser || !entryId) return;\n    \n    setDeleteLoading(true);\n    setJournalError('');\n    \n    try {\n      await deleteDoc(doc(db, 'users', currentUser.id, 'food_journal', entryId));\n      \n      // Update local state\n      setFoodLog(prevLog => prevLog.filter(entry => entry.id !== entryId));\n      \n      setSuccess('Food entry deleted successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n      \n    } catch (err) {\n      console.error('Error deleting entry:', err);\n      setJournalError(`Failed to delete entry: ${err.message}`);\n    } finally {\n      setDeleteLoading(false);\n      setDeleteConfirmId(null);\n    }\n  };\n  // Handle edit entry\n  const handleEditEntry = (entry) => {\n    // Pre-populate the form with entry data\n    setFields({\n      name: entry.name,\n      protein: entry.protein,\n      carbs: entry.carbs,\n      fat: entry.fat,\n      calories: entry.calories,\n      serving: entry.serving || 100,\n      micronutrients: entry.micronutrients || {},\n      longCovidBenefits: entry.longCovidBenefits || [],\n      longCovidCautions: entry.longCovidCautions || [],\n      longCovidRelevance: entry.longCovidRelevance || {},\n    });\n    \n    setMealType(entry.mealType);\n    setTime(entry.time);\n    setDate(entry.date);\n    setLongCovidAdjust(entry.longCovidAdjust || false);\n    setSearch(entry.name);\n    setEditingEntry(entry);\n    \n    // Switch to Add Food tab\n    setTab('Add Food');\n  };\n\n\n\n  \n\n\n// Update the handleLogFood function to handle both add and edit\nconst handleLogFood = async () => {\n  if (!currentUser || !currentUser.id) {\n    setError('Please log in to save your meals');\n    return;\n  }\n\n  setLoading(true);\n  setError('');\n  setSuccess('');\n  \n  try {\n    if (!fields.name) {\n      throw new Error('Food name is required');\n    }\n    \n    const entryData = {\n      name: fields.name,\n      protein: parseFloat(fields.protein) || 0,\n      carbs: parseFloat(fields.carbs) || 0,\n      fat: parseFloat(fields.fat) || 0,\n      calories: parseFloat(fields.calories) || 0,\n      serving: parseFloat(fields.serving) || 100,\n      micronutrients: fields.micronutrients || {},\n      mealType,\n      time,\n      date,\n      longCovidAdjust,\n      longCovidBenefits: fields.longCovidBenefits || [],\n      longCovidCautions: fields.longCovidCautions || [],\n      longCovidRelevance: fields.longCovidRelevance || {},\n      mealId: selectedMeal?.id || null\n    };\n    \n    entryData.metabolicEfficiency = calculateMetabolicEfficiency(entryData);\n    \n    if (editingEntry) {\n      // Update existing entry\n      await updateDoc(\n        doc(db, 'users', currentUser.id, 'food_journal', editingEntry.id), \n        {\n          ...entryData,\n          updatedAt: Timestamp.now()\n        }\n      );\n      \n      // Update local state\n      setFoodLog(prevLog => \n        prevLog.map(entry => \n          entry.id === editingEntry.id \n            ? { ...entry, ...entryData, id: editingEntry.id }\n            : entry\n        )\n      );\n      \n      setSuccess('Food entry updated successfully!');\n      setEditingEntry(null);\n      \n    } else {\n      // Add new entry\n      entryData.createdAt = Timestamp.now();\n      \n      const docRef = await addDoc(\n        collection(db, 'users', currentUser.id, 'food_journal'), \n        entryData\n      );\n      \n      // Update local state for immediate feedback\n      const newEntry = { id: docRef.id, ...entryData };\n      setFoodLog(prevLog => [newEntry, ...prevLog]);\n      \n      setSuccess('Food logged successfully!');\n    }\n    \n    // Reset form\n    setFields({});\n    setSelectedMeal(null);\n    setSearch('');\n    \n  } catch (err) {\n    console.error('Error logging food:', err);\n    setError(`Failed to ${editingEntry ? 'update' : 'log'} food: ${err.message}`);\n  } finally {\n    setLoading(false);\n  }\n};\n\n// Cancel edit mode\nconst handleCancelEdit = () => {\n  setEditingEntry(null);\n  setFields({});\n  setSelectedMeal(null);\n  setSearch('');\n  setSuccess('');\n  setError('');\n};\n\n// Fetch user profile from Firestore\nconst fetchUserProfile = async (uid) => {\n  try {\n    const userDocRef = doc(db, 'users', uid);\n    const userDoc = await getDoc(userDocRef);\n    \n    if (userDoc.exists()) {\n      const userData = userDoc.data();\n      // Use only the data from the database, no defaults\n      setUserProfile(userData);\n    } else {\n      console.log('No user profile found in database');\n      // Set to null or empty object if no profile exists\n      setUserProfile(null);\n    }\n  } catch (err) {\n    console.error(\"Error fetching user profile:\", err);\n    setError('Failed to load user profile');\n    setUserProfile(null);\n  }\n};\n\n// Authentication check function\nconst checkUserAuthentication = useCallback(async () => {\n  try {\n    const storedUserData = localStorage.getItem('userData');\n    \n    if (!storedUserData) {\n      navigate('/login');\n      return;\n    }\n    \n    const parsedUserData = JSON.parse(storedUserData);\n    setCurrentUser(parsedUserData);\n    \n    if (parsedUserData.id) {\n      // Only fetch from database if user has an ID\n      await fetchUserProfile(parsedUserData.id);\n    } else {\n      console.log('No user ID found - user profile not loaded');\n      setUserProfile(null);\n    }\n    \n  } catch (error) {\n    console.error(\"Error checking authentication:\", error);\n    navigate('/login');\n  } finally {\n    setAuthLoading(false);\n  }\n}, [navigate]);\n\n// Authentication effect\nuseEffect(() => {\n  checkUserAuthentication();\n}, [checkUserAuthentication]);\n\n// Initialize food log data - FIXED VERSION\nconst initializeFoodLogData = useCallback(async () => {\n  if (!currentUser || !currentUser.id) return;\n  \n  try {\n    const q = query(\n      collection(db, 'users', currentUser.id, 'food_journal'),\n      orderBy('date', 'desc'),\n      orderBy('createdAt', 'desc'),\n      limit(20)\n    );\n    \n    const snap = await getDocs(q);\n    const entries = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n    \n    // Simply set the entries (empty array if no data exists)\n    setFoodLog(entries);\n    \n    if (entries.length === 0) {\n      console.log('No food log entries found - showing empty state');\n    } else {\n      console.log(`Loaded ${entries.length} food log entries`);\n    }\n    \n  } catch (error) {\n    console.error('Error loading food log data:', error);\n    setError('Failed to load food log data');\n    // Set empty array on error to avoid undefined state\n    setFoodLog([]);\n  }\n}, [currentUser]);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // Initialize food log when user is authenticated\n  useEffect(() => {\n    if (currentUser && currentUser.id && !authLoading) {\n      initializeFoodLogData();\n    }\n  }, [currentUser, authLoading, initializeFoodLogData]);\n\n  // Long COVID Food Information Component\n  const LongCovidFoodInfo = ({ foodName, mealData }) => {\n    if (mealData && (mealData.longCovidRelevance || mealData.longCovidBenefits || mealData.longCovidCautions)) {\n      const covidRelevance = mealData.longCovidRelevance || {};\n      const benefits = mealData.longCovidBenefits || [];\n      const cautions = mealData.longCovidCautions || [];\n      const functionalCompounds = mealData.functionalCompounds || {};\n      \n      let category = 'neutral';\n      if (benefits.length > cautions.length) category = 'beneficial';\n      if (cautions.length > benefits.length) category = 'caution';\n      \n      const antiInflammatoryLevel = covidRelevance.antiInflammatory || 'unknown';\n      \n      return (\n        <div className={`long-covid-food-info ${category}`}>\n          <div className=\"food-info-header\">\n            <span className={`category-icon ${category}`}>\n              {category === 'beneficial' ? '✅' : \n               category === 'caution' ? '⚠️' : 'ℹ️'}\n            </span>\n            <strong>Database Analysis: {foodName}</strong>\n          </div>\n          \n          <div className=\"inflammatory-level\">\n            <h5>🔥 Anti-Inflammatory Level</h5>\n            <div className={`level-indicator level-${antiInflammatoryLevel}`}>\n              <span className=\"level-value\"> {antiInflammatoryLevel.toUpperCase()}</span>\n              <span className=\"level-description\">\n                {antiInflammatoryLevel === 'high' ? 'Excellent for reducing inflammation' :\n                 antiInflammatoryLevel === 'moderate' ? 'Moderately helpful for inflammation' :\n                 antiInflammatoryLevel === 'low' ? 'Limited anti-inflammatory effects' :\n                 antiInflammatoryLevel === 'neutral' ? 'No significant inflammatory impact' : 'Not assessed'}\n              </span>\n            </div>\n          </div>\n\n          {Object.keys(functionalCompounds).length > 0 && (\n            <div className=\"functional-compounds\">\n              <h5>🧬 Functional Compounds</h5>\n              <div className=\"compounds-grid\">\n                {Object.entries(functionalCompounds).map(([compound, level]) => (\n                  <div key={compound} className=\"compound-item\">\n                    <span className=\"compound-name\">{compound.replace(/_/g, ' ')}</span>\n                    <span className={`compound-level level-${level}`}> {level}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {benefits.length > 0 && (\n            <div className=\"benefits-list\">\n              <h5>✨ Benefits for Long COVID Recovery</h5>\n              <ul>\n                {benefits.map((benefit, i) => (\n                  <li key={i}>{benefit}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          {cautions.length > 0 && (\n            <div className=\"cautions-list\">\n              <h5>⚠️ Important Considerations</h5>\n              <ul>\n                {cautions.map((caution, i) => (\n                  <li key={i}>{caution}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"no-food-info\">\n        <div className=\"no-data-icon\">📊</div>\n        <h4>No Long COVID Data Available</h4>\n        <p>This food doesn't have specific Long COVID information in our database yet.</p>\n        <p>Consider general anti-inflammatory principles:</p>\n        <ul className=\"general-tips\">\n          <li>Choose whole, unprocessed versions when possible</li>\n          <li>Pay attention to how it affects your symptoms</li>\n          <li>Consider portion sizes and frequency</li>\n          <li>Pair with known anti-inflammatory foods</li>\n        </ul>\n      </div>\n    );\n  };\n\n  // Long COVID Side Panel Component\n  const LongCovidSidePanel = ({ selectedFood, selectedMeal, foodLog = [], isSearching = false, searchTerm = '' }) => {\n    if (selectedFood && selectedMeal) {\n      return (\n        <div className=\"long-covid-side-panel\">\n          <h3>🦠 Long COVID Nutrition Guide</h3>\n          <div className=\"selected-food-analysis\">\n            <LongCovidFoodInfo foodName={selectedFood} mealData={selectedMeal} />\n            \n            <div className=\"back-to-guide\">\n              <p className=\"guide-hint\">\n                <em>Clear selection to see the full nutrition guide</em>\n              </p>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (isSearching && searchTerm.length >= 2) {\n      return (\n        <div className=\"long-covid-side-panel\">\n          <h3>🦠 Long COVID Nutrition Guide</h3>\n          \n          <div className=\"search-status\">\n            <p className=\"search-hint\">\n              <em>Searching for \"{searchTerm}\"... Select a food above to see its specific analysis.</em>\n            </p>\n          </div>\n          \n          <div className=\"nutrition-categories\">\n            <div className=\"category-section beneficial\">\n              <h4>✅ Quick Anti-Inflammatory Guide</h4>\n              <p>Focus on omega-3 rich fish, berries, leafy greens, and anti-inflammatory spices.</p>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"long-covid-side-panel\">\n        <h3>🦠 Long COVID Nutrition Guide</h3>\n        \n        <div className=\"nutrition-categories\">\n          <div className=\"category-section beneficial\">\n            <h4>✅ Anti-Inflammatory Foods</h4>\n            <ul>\n              <li><strong>Fatty Fish:</strong> Salmon, mackerel, sardines (omega-3s)</li>\n              <li><strong>Berries:</strong> Blueberries, strawberries (antioxidants)</li>\n              <li><strong>Leafy Greens:</strong> Spinach, kale (vitamins, minerals)</li>\n              <li><strong>Nuts:</strong> Walnuts, almonds (healthy fats)</li>\n              <li><strong>Turmeric:</strong> Contains curcumin (anti-inflammatory)</li>\n              <li><strong>Ginger:</strong> Natural anti-inflammatory</li>\n              <li><strong>Green Tea:</strong> Polyphenols reduce inflammation</li>\n            </ul>\n          </div>\n\n          <div className=\"category-section neutral\">\n            <h4>ℹ️ Recommended Foods</h4>\n            <ul>\n              <li><strong>Whole Grains:</strong> Oats, quinoa, brown rice</li>\n              <li><strong>Lean Proteins:</strong> Chicken, turkey, legumes</li>\n              <li><strong>Citrus Fruits:</strong> High in vitamin C</li>\n              <li><strong>Olive Oil:</strong> Monounsaturated fats</li>\n              <li><strong>Garlic & Onions:</strong> Immune support</li>\n            </ul>\n          </div>\n\n          <div className=\"category-section caution\">\n            <h4>⚠️ Foods to Limit</h4>\n            <ul>\n              <li><strong>Processed Foods:</strong> High in inflammation-promoting ingredients</li>\n              <li><strong>Refined Sugars:</strong> Can worsen inflammation</li>\n              <li><strong>Red/Processed Meat:</strong> May increase inflammatory markers</li>\n              <li><strong>Trans Fats:</strong> Found in margarine, processed foods</li>\n              <li><strong>Refined Carbs:</strong> White bread, pastries</li>\n              <li><strong>Fried Foods:</strong> High in inflammatory compounds</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"additional-tips\">\n          <h4>💡 General Tips</h4>\n          <ul>\n            <li>Stay well hydrated (8+ glasses water daily)</li>\n            <li>Consider vitamin D supplementation</li>\n            <li>Eat regular, smaller meals to maintain energy</li>\n            <li>Focus on nutrient-dense, whole foods</li>\n            <li>Limit alcohol and caffeine if they worsen symptoms</li>\n          </ul>\n        </div>\n      </div>\n    );\n  };\n\n  // Helper function for COVID food rating\n  const getCovidFoodRating = (foodName) => {\n    const foodLower = foodName.toLowerCase();\n    \n    const beneficial = [\n      'salmon', 'mackerel', 'sardines', 'tuna', 'trout',\n      'blueberries', 'strawberries', 'raspberries', 'blackberries',\n      'spinach', 'kale', 'broccoli', 'brussels sprouts',\n      'walnuts', 'almonds', 'chia seeds', 'flax seeds',\n      'turmeric', 'ginger', 'garlic', 'onion',\n      'olive oil', 'avocado', 'sweet potato',\n      'green tea', 'dark chocolate'\n    ];\n    \n    const caution = [\n      'processed meat', 'bacon', 'sausage', 'hot dog',\n      'french fries', 'fried chicken', 'fried',\n      'white bread', 'white rice', 'pastry',\n      'candy', 'soda', 'sugar', 'margarine',\n      'ice cream', 'chips'\n    ];\n    \n    if (beneficial.some(food => foodLower.includes(food))) return 'beneficial';\n    if (caution.some(food => foodLower.includes(food))) return 'caution';\n    return 'neutral';\n  };\n\n  // Utility functions\n  const convertTo24Hour = (time12h) => {\n    if (!time12h) return '';\n    \n    const [time, modifier] = time12h.split(' ');\n    if (!time || !modifier) return time12h;\n    \n    let [hours, minutes] = time.split(':');\n    \n    if (hours === '12') {\n      hours = '00';\n    }\n    \n    if (modifier === 'PM') {\n      hours = String(parseInt(hours, 10) + 12);\n    }\n    \n    hours = String(hours);\n    \n    return `${hours.padStart(2, '0')}:${minutes}`;\n  };\n\n  const handleTimeChange = (e) => {\n    const time24 = e.target.value;\n    if (!time24) return;\n    \n    const date = new Date(`2000-01-01T${time24}`);\n    const time12 = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    \n    setTime(time12);\n  };\n\n  // Calculate metabolic efficiency\n  const calculateMetabolicEfficiency = (mealData) => {\n    const timeStr = mealData.time;\n    const hourMatch = timeStr.match(/(\\d+):/);\n    const hour = hourMatch ? parseInt(hourMatch[1], 10) : 12;\n    const isPM = timeStr.toLowerCase().includes('pm');\n    \n    let hour24 = hour;\n    if (isPM && hour !== 12) hour24 += 12;\n    if (!isPM && hour === 12) hour24 = 0;\n    \n    const proteinFactor = (parseFloat(mealData.protein) || 0) * 0.2;\n    const carbFactor = (parseFloat(mealData.carbs) || 0) * 0.1;\n    const fatFactor = (parseFloat(mealData.fat) || 0) * 0.15;\n    \n    let timeFactor = 1.0;\n    if (hour24 < 6 || hour24 > 20) {\n      timeFactor = 0.7;\n    } else if (hour24 >= 7 && hour24 <= 10) {\n      timeFactor = 1.2;\n    } else if (hour24 >= 17 && hour24 <= 19) {\n      timeFactor = 0.9;\n    }\n    \n    // UPDATED: Expanded meal type factors\n    const mealTypeFactors = {\n      'Breakfast': 1.3,\n      'Morning Snack': 0.9,\n      'Lunch': 1.1,\n      'Afternoon Snack': 0.8,\n      'Dinner': 0.9,\n      'Late Night Snack': 0.6,\n      'Snack': 0.8  // Keep for backward compatibility\n    };\n    const mealTypeFactor = mealTypeFactors[mealData.mealType] || 1.0;\n    \n    const macroBalance = Math.min(100, (proteinFactor + carbFactor + fatFactor) * 10);\n    let efficiency = macroBalance * timeFactor * mealTypeFactor;\n    \n    if (mealData.longCovidAdjust && userProfile?.hasLongCovid) {\n      const severityFactors = {\n        'mild': 0.95,\n        'moderate': 0.85,\n        'severe': 0.75,\n        'very severe': 0.65\n      };\n      \n      const severityFactor = severityFactors[userProfile.longCovidSeverity] || 0.85;\n      efficiency *= severityFactor;\n      \n      if (mealData.longCovidBenefits && mealData.longCovidBenefits.length > 0) {\n        efficiency *= 1.1;\n      }\n      \n      if (mealData.longCovidCautions && mealData.longCovidCautions.length > 0) {\n        efficiency *= 0.9;\n      }\n    }\n    \n    return Math.min(100, Math.max(0, efficiency));\n  };\n\n  // Recalculate nutrients when serving size changes\n  const recalculateNutrients = (newServing) => {\n    if (!selectedMeal || !selectedMeal.nutrients?.per100g) return;\n    \n    const ratio = parseFloat(newServing) / 100;\n    if (isNaN(ratio)) return;\n    \n    setFields(prevFields => {\n      const updatedFields = { ...prevFields };\n      const nutrients = selectedMeal.nutrients.per100g;\n      \n      updatedFields.protein = (nutrients.protein?.value * ratio).toFixed(1);\n      updatedFields.carbs = (nutrients.carbs?.value * ratio).toFixed(1);\n      updatedFields.fat = (nutrients.fat?.value * ratio).toFixed(1);\n      updatedFields.calories = (nutrients.calories?.value * ratio).toFixed(0);\n      \n      updatedFields.micronutrients = {};\n      Object.entries(nutrients).forEach(([key, value]) => {\n        if (!['protein', 'carbs', 'fat', 'calories', 'name', 'unit'].includes(key)) {\n          updatedFields.micronutrients[key] = {\n            ...value,\n            value: (value.value * ratio).toFixed(1)\n          };\n        }\n      });\n      \n      return updatedFields;\n    });\n  };\n\n  // Debounce hook for search\n  const useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    \n    useEffect(() => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      \n      return () => clearTimeout(handler);\n    }, [value, delay]);\n    \n    return debouncedValue;\n  };\n\n  const debouncedSearch = useDebounce(search, 300);\n\n  // Enhanced AI-powered search with fallback to JavaScript\n  const fetchSuggestions = useCallback(async () => {\n    const normalizedSearch = search.toLowerCase().trim();\n    \n    if (normalizedSearch.length < 2) {\n      setSuggestions([]);\n      return;\n    }\n    \n    if (suggestionCache[normalizedSearch]) {\n      setSuggestions(suggestionCache[normalizedSearch]);\n      return;\n    }\n    \n    // JavaScript fallback search algorithm\n    const calculateJavaScriptScore = (meal, searchTerm) => {\n      const name = (meal.name || '').toLowerCase();\n      const category = (meal.category || '').toLowerCase();\n      const description = (meal.description || '').toLowerCase();\n      \n      let score = 0;\n      \n      if (name === searchTerm) score += 1.0;\n      else if (name.startsWith(searchTerm)) score += 0.8;\n      else if (name.includes(searchTerm)) score += 0.6;\n      \n      if (category.includes(searchTerm)) score += 0.3;\n      if (description.includes(searchTerm)) score += 0.2;\n      \n      const nameWords = name.split(' ');\n      const searchWords = searchTerm.split(' ');\n      let wordMatches = 0;\n      \n      searchWords.forEach(searchWord => {\n        nameWords.forEach(nameWord => {\n          if (nameWord.startsWith(searchWord)) wordMatches++;\n        });\n      });\n      \n      score += (wordMatches / Math.max(searchWords.length, 1)) * 0.4;\n      \n      return score;\n    };\n\n    const performFallbackSearch = (normalizedSearch, allFoods) => {\n      return allFoods\n        .filter(meal => {\n          if (!meal.name) return false;\n          \n          const mealNameLower = meal.name.toLowerCase();\n          const category = (meal.category || '').toLowerCase();\n          const description = (meal.description || '').toLowerCase();\n          const benefits = (meal.longCovidBenefits || []).join(' ').toLowerCase();\n          \n          return mealNameLower.includes(normalizedSearch) ||\n                 mealNameLower.startsWith(normalizedSearch) ||\n                 category.includes(normalizedSearch) ||\n                 description.includes(normalizedSearch) ||\n                 benefits.includes(normalizedSearch) ||\n                 mealNameLower.split(' ').some(word => word.startsWith(normalizedSearch));\n        })\n        .map(meal => ({\n          ...meal,\n          searchMethod: 'javascript',\n          searchScore: calculateJavaScriptScore(meal, normalizedSearch)\n        }))\n        .sort((a, b) => {\n          const aName = (a.name || '').toLowerCase();\n          const bName = (b.name || '').toLowerCase();\n          \n          if (aName === normalizedSearch && bName !== normalizedSearch) return -1;\n          if (bName === normalizedSearch && aName !== normalizedSearch) return 1;\n          \n          if (aName.startsWith(normalizedSearch) && !bName.startsWith(normalizedSearch)) return -1;\n          if (bName.startsWith(normalizedSearch) && !aName.startsWith(normalizedSearch)) return 1;\n          \n          return (b.searchScore || 0) - (a.searchScore || 0);\n        })\n        .slice(0, 15);\n    };\n    \n    try {\n      console.log(`🔍 Enhanced search for: \"${normalizedSearch}\"`);\n      \n      let allFoods = allFoodsCache;\n      if (allFoods.length === 0) {\n        console.log('📥 Fetching food database...');\n        const q = query(\n          collection(db, 'meals'),\n          limit(1000)\n        );\n        \n        const snap = await getDocs(q);\n        allFoods = snap.docs.map(doc => ({ \n          id: doc.id, \n          ...doc.data()\n        }));\n        \n        setAllFoodsCache(allFoods);\n        console.log(`📊 Loaded ${allFoods.length} foods into cache`);\n        \n        if (window.pyodideReady && !searchIndexBuilt) {\n          try {\n            console.log('🏗️ Building search index...');\n            const result = await window.pyodide.runPython(`\n              result = search_engine.build_index('${JSON.stringify(allFoods).replace(/'/g, \"\\\\'\")}')\n              result\n            `);\n            setSearchIndexBuilt(true);\n            window.searchIndexBuilt = true;\n            console.log('✅ Search index built:', result);\n          } catch (error) {\n            console.error('❌ Error building Python index:', error);\n          }\n        }\n      }\n      \n      let results = [];\n      \n      if (window.pyodideReady && searchIndexBuilt) {\n        try {\n          console.log('🚀 Using AI-powered search');\n          const pythonResults = await window.pyodide.runPython(`\n            results = search_engine.search(\"${normalizedSearch.replace(/\"/g, '\\\\\"')}\", 15)\n            json.dumps(results)\n          `);\n          \n          results = JSON.parse(pythonResults);\n          console.log(`🎯 AI search returned ${results.length} results`);\n          \n          results = results.map(food => ({\n            ...food,\n            searchMethod: 'ai',\n            searchScore: food.search_score || 0\n          }));\n          \n        } catch (error) {\n          console.error('❌ Python search failed, using fallback:', error);\n          results = performFallbackSearch(normalizedSearch, allFoods);\n        }\n      } else {\n        console.log('📝 Using fallback JavaScript search');\n        results = performFallbackSearch(normalizedSearch, allFoods);\n      }\n      \n      setSuggestionCache(prev => ({\n        ...prev,\n        [normalizedSearch]: results\n      }));\n      \n      setSuggestions(results);\n      \n    } catch (err) {\n      console.error('❌ Search error:', err);\n      setSuggestions([]);\n    }\n  }, [search, suggestionCache, allFoodsCache, searchIndexBuilt]);\n\n  // Monitor Pyodide status for AI search capabilities\n  useEffect(() => {\n    const checkPyodideStatus = () => {\n      if (window.pyodideReady) {\n        setPyodideStatus('ready');\n      } else if (window.pyodide) {\n        setPyodideStatus('loading');\n      } else {\n        setPyodideStatus('unavailable');\n      }\n    };\n    \n    checkPyodideStatus();\n    \n    const handlePyodideReady = () => {\n      setPyodideStatus('ready');\n      console.log('🎉 Pyodide ready event received');\n    };\n    \n    const handlePyodideError = () => {\n      setPyodideStatus('unavailable');\n      console.log('⚠️ Pyodide error event received');\n    };\n    \n    window.addEventListener('pyodideReady', handlePyodideReady);\n    window.addEventListener('pyodideError', handlePyodideError);\n    \n    const interval = setInterval(checkPyodideStatus, 2000);\n    \n    return () => {\n      window.removeEventListener('pyodideReady', handlePyodideReady);\n      window.removeEventListener('pyodideError', handlePyodideError);\n      clearInterval(interval);\n    };\n  }, []);\n\n  // Search input component with AI capabilities\n  const renderSearchInput = () => (\n    <div className=\"form-group search-group\">\n      <label>Search Food</label>\n      <div className=\"search-input-container\">\n        <input\n          type=\"text\"\n          value={search}\n          onChange={e => { \n            setSearch(e.target.value); \n            setSelectedMeal(null); \n          }}\n          placeholder={\n            pyodideStatus === 'ready' ? \"🧠 AI-powered search ready...\" :\n            pyodideStatus === 'loading' ? \"🔄 Loading AI search...\" :\n            \"Search foods...\"\n          }\n          autoComplete=\"off\"\n          className=\"search-input enhanced-search\"\n        />\n        \n        <div className={`search-status ${pyodideStatus}`}>\n          {pyodideStatus === 'ready' && searchIndexBuilt && (\n            <span className=\"status-ready\">🚀 AI Search Active</span>\n          )}\n          {pyodideStatus === 'ready' && !searchIndexBuilt && (\n            <span className=\"status-indexing\">⚡ Building AI Index...</span>\n          )}\n          {pyodideStatus === 'loading' && (\n            <span className=\"status-loading\">🔄 Loading AI...</span>\n          )}\n          {pyodideStatus === 'unavailable' && (\n            <span className=\"status-basic\">📝 Basic Search</span>\n          )}\n          {suggestions.length > 0 && (\n            <span className=\"result-count\">({suggestions.length} results)</span>\n          )}\n        </div>\n      </div>\n      \n      {suggestions.length > 0 && (\n        <ul className=\"suggestions-list enhanced\">\n          {suggestions.map((s, index) => (\n            <li key={s.id || index} onClick={() => handleSelectMeal(s)}>\n              <div className=\"suggestion-main\">\n                <div className=\"suggestion-name\">{s.name}</div>\n                {s.category && (\n                  <div className=\"suggestion-category\">{s.category}</div>\n                )}\n                <div className=\"suggestion-meta\">\n                  {s.searchScore && (\n                    <span className=\"search-score\">\n                      {(s.searchScore * 100).toFixed(0)}% match\n                    </span>\n                  )}\n                  {s.searchMethod === 'ai' && (\n                    <span className=\"ai-badge\">🧠 AI</span>\n                  )}\n                  {s.searchMethod === 'javascript' && (\n                    <span className=\"js-badge\">JS</span>\n                  )}\n                  {s.match_type && (\n                    <span className=\"match-type\">{s.match_type}</span>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"suggestion-indicators\">\n                {longCovidAdjust && (\n                  <span className={`covid-indicator ${getCovidFoodRating(s.name)}`}>\n                    {getCovidFoodRating(s.name) === 'beneficial' ? '✅' : \n                     getCovidFoodRating(s.name) === 'caution' ? '⚠️' : 'ℹ️'}\n                  </span>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // Fetch suggestions effect\n  useEffect(() => {\n    if (debouncedSearch.length < 2) {\n      setSuggestions([]);\n      return;\n    }\n    \n    fetchSuggestions();\n  }, [debouncedSearch, fetchSuggestions]);\n\n  // Handle meal selection\n  const handleSelectMeal = (meal) => {\n    setSelectedMeal(meal);\n    setSearch(meal.name);\n    setSuggestions([]);\n    \n    const defaultServing = 100;\n    const nutrients = meal.nutrients?.per100g || {};\n    \n    setFields({\n      name: meal.name,\n      protein: nutrients.protein?.value || '',\n      carbs: nutrients.carbs?.value || '',\n      fat: nutrients.fat?.value || '',\n      calories: nutrients.calories?.value || '',\n      serving: defaultServing,\n      micronutrients: nutrients,\n      longCovidBenefits: meal.longCovidBenefits || [],\n      longCovidCautions: meal.longCovidCautions || [],\n      longCovidRelevance: meal.longCovidRelevance || {},\n    });\n  };\n\n  // Handle field changes\n  const handleFieldChange = (e) => {\n    const { name, value } = e.target;\n    \n    if (name === 'serving') {\n      setFields(prev => ({ ...prev, [name]: value }));\n      recalculateNutrients(value);\n    } else {\n      setFields(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  // Fetch food log function\n  const fetchFoodLog = useCallback(async (page = 1) => {\n    if (!currentUser || !currentUser.id) return;\n    \n    setLogLoading(true);\n    if (page === 1) setFoodLog([]);\n    setJournalError('');\n    \n    try {\n      const q = query(\n        collection(db, 'users', currentUser.id, 'food_journal'),\n        orderBy('date', 'desc'),\n        orderBy('createdAt', 'desc'),\n        limit(ENTRIES_PER_PAGE * page)\n      );\n      \n      const snap = await getDocs(q);\n      const entries = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      \n      setFoodLog(entries);\n      setJournalPage(page);\n      \n    } catch (err) {\n      console.error('Error fetching food log:', err);\n      setJournalError(`Failed to load journal: ${err.message}`);\n    } finally {\n      setLogLoading(false);\n    }\n  }, [currentUser]);\n\n  // Fetch food log when tab changes\n  useEffect(() => {\n    if (tab === 'Food Journal' && currentUser) {\n      fetchFoodLog(1);\n    }\n  }, [tab, currentUser, fetchFoodLog]);\n\n  // Back navigation\n  const handleBack = () => {\n    navigate('/dashboard');\n  };\n\n  // Loading state\n  if (authLoading) {\n    return (\n      <div className=\"food-tracker-container\">\n        <div className=\"loading-indicator\">Loading...</div>\n      </div>\n    );\n  }\n\n  // Authentication required state\n  if (!currentUser) {\n    return (\n      <div className=\"food-tracker-container\">\n        <div className=\"auth-required\">\n          <h2>Authentication Required</h2>\n          <p>Please log in to use the food tracker.</p>\n          <button onClick={handleBack} className=\"back-button\">\n            Back to Dashboard\n          </button>\n        \n        </div>\n      </div>\n    );\n  }\n\n  return (\n\n    <div className=\"food-tracker-container\">\n    {/* Animated background elements */}\n    <div className=\"bg-animation\">\n      <div className=\"card-glow\"></div>\n      <div className=\"floating-shape shape-1\"></div>\n      <div className=\"floating-shape shape-2\"></div>\n      <div className=\"floating-shape shape-3\"></div>\n      <div className=\"floating-shape shape-4\"></div>\n      <div className=\"floating-shape shape-5\"></div>\n      <div className=\"floating-shape shape-6\"></div>\n    </div>\n\n\n\n    {/* EVERYTHING goes inside this unified container */}\n    <div className=\"food-tracker-content\">\n      {/* Delete Confirmation Modal */}\n      {deleteConfirmId && (\n        <DeleteConfirmModal\n          entryId={deleteConfirmId}\n          entryName={foodLog.find(entry => entry.id === deleteConfirmId)?.name || 'Unknown'}\n          onConfirm={handleDeleteEntry}\n          onCancel={() => setDeleteConfirmId(null)}\n        />\n      )}\n\n      {/* Header - MOVED INSIDE the content container */}\n      <div className=\"tracker-header\">\n        <button onClick={handleBack} className=\"back-button\">\n          ← Back to Dashboard\n        </button>\n        <button onClick={handleLogout} className=\"logout-btn\">\n          Logout\n        </button>\n      </div>\n      \n      {/* Title - MOVED INSIDE the content container */}\n      <h2>🧠 AI-Powered Meal Tracker</h2>\n      \n      {/* AI Status Banner */}\n      <div className={`ai-status-banner ${pyodideStatus}`}>\n\n        {pyodideStatus === 'ready' && (\n          <div className=\"ai-ready\">\n            🚀 <strong>AI Search Enabled:</strong> Advanced food matching with intelligent recommendations\n            </div>\n\n         \n\n          \n        )}\n        {pyodideStatus === 'loading' && (\n          <div className=\"ai-loading\">\n            🔄 <strong>Loading AI:</strong> Preparing enhanced search capabilities...\n          </div>\n        )}\n        {pyodideStatus === 'unavailable' && (\n          <div className=\"ai-fallback\">\n            📝 <strong>Basic Search:</strong> AI unavailable, using standard search\n          </div>\n        )}\n      </div>\n      \n      <div className=\"food-tabs\">\n   \n        {TABS.map(t => (\n          <button\n            key={t}\n            className={`food-tab${tab === t ? ' active' : ''}`}\n            onClick={() => setTab(t)}\n          >\n            {t}\n          </button>\n        ))}\n      </div>\n\n     \n      {tab === 'Add Food' && (\n        \n        <div className=\"food-form-section\">\n           \n          <div className=\"food-form-left\">\n\n          <div \n    className=\"tab-glow\"\n    style={{\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      width: '400px',\n      height: '1000px',\n      background: 'radial-gradient(ellipse 60% 60% at center, rgba(102, 126, 234, 0.4) 0%, transparent 70%)',\n      borderRadius: '50%',\n      animation: 'rotatingGlow 10s linear infinite',\n      filter: 'blur(25px)',\n      zIndex: 0,\n      pointerEvents: 'none',\n      transform: 'translate(-50%, -50%)'\n    }}\n  ></div>\n         \n            {/* Edit Mode Indicator */}\n            {editingEntry && (\n              <div className=\"edit-mode-banner\">\n                <div className=\"edit-indicator\">\n                  <span className=\"edit-icon\">✏️</span>\n                  <span className=\"edit-text\">\n                    <strong>Editing:</strong> {editingEntry.name}\n                  </span>\n                </div>\n                <button \n                  className=\"cancel-edit-btn\"\n                  onClick={handleCancelEdit}\n                  type=\"button\"\n                >\n                  Cancel Edit\n                </button>\n              </div>\n            )}\n\n            {/* Long COVID Checkbox */}\n            <div className=\"form-group long-covid-checkbox-group\">\n              <label className=\"long-covid-checkbox-label\">\n                <input \n                  type=\"checkbox\" \n                  checked={longCovidAdjust} \n                  onChange={e => setLongCovidAdjust(e.target.checked)} \n                  className=\"long-covid-checkbox\"\n                /> \n                <span className=\"checkbox-text\">\n                  I have Long COVID - Show food recommendations and adjustments\n                </span>\n              </label>\n              {longCovidAdjust && (\n                <div className=\"long-covid-info-banner\">\n                  <p>🔬 <strong>Long COVID Mode:</strong> Food recommendations will be adjusted to focus on anti-inflammatory options that may help manage symptoms and support recovery.</p>\n                </div>\n              )}\n            </div>\n\n            {renderSearchInput()}\n\n\n\n\n\n\n\n\n          {/* Nutrition fields - UPDATED for floating labels */}\n<div className=\"form-row\">\n  <div className=\"form-group\">\n    <input \n      name=\"protein\" \n      value={fields.protein || ''} \n      onChange={handleFieldChange} \n      type=\"number\"\n      step=\"0.1\"\n      placeholder=\" \"\n    />\n    <label>Protein (g)</label>\n  </div>\n  <div className=\"form-group\">\n    <input \n      name=\"carbs\" \n      value={fields.carbs || ''} \n      onChange={handleFieldChange} \n      type=\"number\"\n      step=\"0.1\"\n      placeholder=\" \"\n    />\n    <label>Carbs (g)</label>\n  </div>\n  <div className=\"form-group\">\n    <input \n      name=\"fat\" \n      value={fields.fat || ''} \n      onChange={handleFieldChange} \n      type=\"number\"\n      step=\"0.1\"\n      placeholder=\" \"\n    />\n    <label>Fat (g)</label>\n  </div>\n  <div className=\"form-group\">\n    <input \n      name=\"serving\" \n      value={fields.serving || ''} \n      onChange={handleFieldChange}\n      type=\"number\"\n      step=\"1\"\n      className=\"serving-input\"\n      placeholder=\" \"\n    />\n    <label>Serving (g)</label>\n  </div>\n</div>\n\n\n\n\n\n\n         \n       \n{/* Meal details - UPDATED for floating labels with proper label positioning */}\n<div className=\"form-row\">\n  <div className=\"form-group\">\n    <label htmlFor=\"meal-type\">Meal Type</label>\n    <select \n      id=\"meal-type\" \n      value={mealType} \n      onChange={e => setMealType(e.target.value)}\n    >\n      {mealTypes.map(type => (\n        <option key={type} value={type}>{type}</option>\n      ))}\n    </select>\n  </div>\n  <div className=\"form-group\">\n    <input \n      type=\"time\" \n      value={convertTo24Hour(time)} \n      onChange={handleTimeChange}\n      placeholder=\" \"\n    />\n    <label>Time</label>\n  </div>\n  <div className=\"form-group\">\n    <input \n      type=\"date\" \n      value={date} \n      onChange={e => setDate(e.target.value)}\n      placeholder=\" \"\n    />\n    <label>Date</label>\n  </div>\n</div>\n\n{/* Calories field - UPDATED for floating labels */}\n<div className=\"form-group\">\n  <input \n    name=\"calories\" \n    value={fields.calories || ''} \n    onChange={handleFieldChange} \n    type=\"number\"\n    step=\"1\"\n    placeholder=\" \"\n  />\n  <label>Calories</label>\n</div>\n\n\n\n\n            <div className=\"form-group\">\n              <button \n                className={`submit-button ${editingEntry ? 'update-mode' : ''}`}\n                onClick={handleLogFood}\n                disabled={loading || !fields.name}\n              >\n                {loading ? \n                  (editingEntry ? 'Updating...' : 'Logging...') : \n                  (editingEntry ? 'Update Food' : 'Log Food')\n                }\n              </button>\n              {success && <div className=\"success-message\">{success}</div>}\n              {error && <div className=\"error-message\">{error}</div>}\n            </div>\n          </div>\n\n          <div className=\"food-form-right\">\n            {longCovidAdjust && (\n              <LongCovidSidePanel \n                selectedFood={fields.name} \n                selectedMeal={selectedMeal}\n                foodLog={foodLog}\n                isSearching={search.length >= 2 && !selectedMeal}\n                searchTerm={search}\n              />\n            )}\n            {!longCovidAdjust && (\n              <div className=\"general-nutrition-info\">\n                <h3>📊 Nutrition Tips</h3>\n                <p>Enable Long COVID mode above to get personalized food recommendations and anti-inflammatory guidance.</p>\n                {pyodideStatus === 'ready' && (\n                  <div className=\"ai-tip\">\n                    <p>💡 <strong>AI Tip:</strong> The search above uses machine learning to find the most relevant foods for your queries!</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {tab === 'Food Journal' && (\n        <div className=\"food-journal-section\">\n          <div className=\"journal-header\">\n            <h3>Your Food Journal</h3>\n            <button \n              className=\"refresh-button\"\n              onClick={() => fetchFoodLog(1)}\n              disabled={logLoading}\n            >\n              {logLoading ? 'Loading...' : 'Refresh'}\n            </button>\n          </div>\n          \n          {journalError && <div className=\"error-message\">{journalError}</div>}\n          {success && <div className=\"success-message\">{success}</div>}\n          \n          {logLoading && foodLog.length === 0 ? (\n            <div className=\"loading-indicator\">Loading your food journal...</div>\n          ) : foodLog.length === 0 ? (\n            <div className=\"empty-state\">\n              <p>No entries found in your food journal.</p>\n              <p>Start by adding a meal in the \"Add Food\" tab!</p>\n            </div>\n          ) : (\n            <>\n              <div className=\"journal-summary\">\n                <p>Showing {foodLog.length} meal entries</p>\n              </div>\n              \n              <div className=\"journal-table-container\">\n                <table className=\"food-log-table compact\">\n                  <thead>\n                    <tr>\n                      <th className=\"date-time-col\">Date/Time</th>\n                      <th className=\"meal-type-col\">Meal</th>\n                      <th className=\"food-col\">Food</th>\n                      <th className=\"serving-col\">Serving</th>\n                      <th className=\"macro-col\">P</th>\n                      <th className=\"macro-col\">C</th>\n                      <th className=\"macro-col\">F</th>\n                      <th className=\"calories-col\">Cal</th>\n                      <th className=\"efficiency-col\">Eff%</th>\n                      <th className=\"actions-col\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {foodLog.map(entry => {\n                      // Format date and time compactly - FIXED timezone issue\n                      const formatDateTime = (date, time) => {\n                        // Parse date string manually to avoid timezone issues\n                        const dateParts = date.split('-');\n                        const month = parseInt(dateParts[1], 10);\n                        const day = parseInt(dateParts[2], 10);\n                        \n                        const shortTime = time.replace(':00', '').replace(' ', '');\n                        return `${month}/${day} ${shortTime}`;\n                      };\n                      \n                      // UPDATED: Handle all snack types for badge display\n                      const getMealBadge = (mealType) => {\n                        switch(mealType) {\n                          case 'Breakfast': return 'B';\n                          case 'Morning Snack': return 'MS';\n                          case 'Lunch': return 'L';\n                          case 'Afternoon Snack': return 'AS';\n                          case 'Dinner': return 'D';\n                          case 'Late Night Snack': return 'LN';\n                          case 'Snack': return 'S'; // Original snack for backward compatibility\n                          default: return mealType.charAt(0);\n                        }\n                      };\n                      \n                      return (\n                        <tr key={entry.id}>\n                          <td className=\"date-time-cell\">\n                            {formatDateTime(entry.date, entry.time)}\n                          </td>\n                          <td className=\"meal-type-cell\">\n                            <span className={`meal-badge ${(entry.mealType || 'unknown').trim().toLowerCase().replace(/\\s+/g, '-')}`}>\n                              {getMealBadge(entry.mealType || 'Unknown')}\n                            </span>\n                          </td>\n                          <td className=\"food-cell\" title={entry.name}>\n                            {entry.name.length > 20 ? `${entry.name.substring(0, 20)}...` : entry.name}\n                          </td>\n                          <td className=\"serving-cell\">{entry.serving || '0'}g</td>\n                          <td className=\"macro-cell\">{typeof entry.protein === 'number' ? entry.protein.toFixed(1) : (entry.protein || '0')}</td>\n                          <td className=\"macro-cell\">{typeof entry.carbs === 'number' ? entry.carbs.toFixed(1) : (entry.carbs || '0')}</td>\n                          <td className=\"macro-cell\">{typeof entry.fat === 'number' ? entry.fat.toFixed(1) : (entry.fat || '0')}</td>\n                          <td className=\"calories-cell\">{entry.calories || '0'}</td>\n                          <td className=\"efficiency-cell\">\n                            <span className={`efficiency-badge ${\n                              typeof entry.metabolicEfficiency === 'number' \n                                ? entry.metabolicEfficiency >= 80 ? 'high' : \n                                  entry.metabolicEfficiency >= 60 ? 'medium' : 'low'\n                                : 'unknown'\n                            }`}>\n                              {typeof entry.metabolicEfficiency === 'number' ? entry.metabolicEfficiency.toFixed(0) : 'N/A'}\n                            </span>\n                          </td>\n                          <td className=\"actions-cell\">\n                            <div className=\"action-buttons compact\">\n                              <button\n                                className=\"edit-btn compact\"\n                                onClick={() => handleEditEntry(entry)}\n                                title=\"Edit entry\"\n                              >\n                                ✏️\n                              </button>\n                              <button\n                                className=\"delete-btn compact\"\n                                onClick={() => setDeleteConfirmId(entry.id)}\n                                title=\"Delete entry\"\n                              >\n                                🗑️\n                              </button>\n                            </div>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n              \n              {foodLog.length >= journalPage * ENTRIES_PER_PAGE && (\n                <div className=\"load-more-container\">\n                  <button \n                    className=\"load-more-button\"\n                    onClick={() => fetchFoodLog(journalPage + 1)}\n                    disabled={logLoading}\n                  >\n                    {logLoading ? 'Loading...' : 'Load More Entries'}\n                  </button>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      {tab === 'Analysis' && (\n        <AnalysisTab \n          foodLog={foodLog} \n          userProfile={userProfile} \n        />\n      )}\n    </div>\n    <style jsx>{`\n        /* Enhanced rotating glow animation for tabs */\n        @keyframes rotatingGlow {\n          0% { \n            transform: translate(-50%, -50%) rotate(0deg);\n            opacity: 0.3;\n          }\n          25% { \n            transform: translate(-50%, -50%) rotate(90deg);\n            opacity: 0.5;\n          }\n          50% { \n            transform: translate(-50%, -50%) rotate(180deg);\n            opacity: 0.7;\n          }\n          75% { \n            transform: translate(-50%, -50%) rotate(270deg);\n            opacity: 0.5;\n          }\n          100% { \n            transform: translate(-50%, -50%) rotate(360deg);\n            opacity: 0.3;\n          }\n        }\n\n        @keyframes tabGlowRotate {\n          0%, 100% { \n            transform: translate(-50%, -50%) rotate(0deg) scale(1);\n            opacity: 0.4;\n          }\n          50% { \n            transform: translate(-50%, -50%) rotate(180deg) scale(1.1);\n            opacity: 0.8;\n          }\n        }\n\n        /* Main container with animated background */\n        .food-tracker-container {\n          min-height: 100vh;\n          background: linear-gradient(135deg, #667eea 0%, #5a6fd8 50%, #5a6fd8 100%);\n          padding: 20px;\n          position: relative;\n          overflow: hidden;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\n        }\n\n        .food-tracker-container::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: \n            radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),\n            radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),\n            radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.05) 0%, transparent 50%);\n          animation: float 8s ease-in-out infinite;\n          z-index: 0;\n        }\n\n        @keyframes float {\n          0%, 100% { transform: translateY(0px) rotate(0deg); }\n          50% { transform: translateY(-10px) rotate(180deg); }\n        }\n\n        @keyframes floatShape {\n          0%, 100% { \n            transform: translateY(0px) rotate(0deg);\n            opacity: 0.6;\n          }\n          50% { \n            transform: translateY(-20px) rotate(180deg);\n            opacity: 0.8;\n          }\n        }\n\n        @keyframes pulse {\n          0%, 100% { transform: scale(1); }\n          50% { transform: scale(1.02); }\n        }\n\n        @keyframes slideUp {\n          from {\n            opacity: 0;\n            transform: translateY(30px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        @keyframes fadeInUp {\n          from {\n            opacity: 0;\n            transform: translateY(20px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        /* Enhanced animated background with floating circles */\n        .bg-animation {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          overflow: hidden;\n          z-index: 0;\n        }\n\n        .card-glow {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          width: 400px;\n          height: 400px;\n          background: radial-gradient(circle, rgba(102, 126, 234, 0.3) 0%, transparent 70%);\n          border-radius: 50%;\n          transform: translate(-50%, -50%);\n          animation: pulse 4s ease-in-out infinite;\n          filter: blur(20px);\n        }\n\n        .floating-shape {\n          position: absolute;\n          background: rgba(255, 255, 255, 0.1);\n          border-radius: 50%;\n          animation: floatShape 6s ease-in-out infinite;\n        }\n\n        .shape-1 {\n          width: 80px;\n          height: 80px;\n          top: 15%;\n          left: 10%;\n          animation-delay: 0s;\n        }\n\n        .shape-2 {\n          width: 120px;\n          height: 120px;\n          top: 65%;\n          right: 15%;\n          animation-delay: 2s;\n        }\n\n        .shape-3 {\n          width: 60px;\n          height: 60px;\n          top: 35%;\n          right: 25%;\n          animation-delay: 4s;\n        }\n\n        .shape-4 {\n          width: 90px;\n          height: 90px;\n          top: 80%;\n          left: 30%;\n          animation-delay: 1s;\n        }\n\n        .shape-5 {\n          width: 70px;\n          height: 70px;\n          top: 25%;\n          left: 60%;\n          animation-delay: 3s;\n        }\n\n        .shape-6 {\n          width: 100px;\n          height: 100px;\n          top: 50%;\n          right: 5%;\n          animation-delay: 5s;\n        }\n\n        /* Main content wrapper */\n        .food-tracker-content {\n          max-width: 1200px;\n          margin: 0 auto;\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(20px);\n          border-radius: 24px;\n          padding: 32px;\n          box-shadow: \n            0 8px 32px rgba(0, 0, 0, 0.1),\n            0 1px 0 rgba(255, 255, 255, 0.8) inset;\n          border: 1px solid rgba(255, 255, 255, 0.2);\n          position: relative;\n          animation: slideUp 0.8s ease-out;\n          z-index: 1;\n        }\n\n        /* Header */\n        .tracker-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 24px;\n          padding: 24px 0;\n          border-bottom: 2px solid rgba(102, 126, 234, 0.2);\n          position: relative;\n          animation: fadeInUp 0.6s ease-out;\n        }\n\n        .tracker-header::after {\n          content: '';\n          position: absolute;\n          bottom: -2px;\n          left: 0;\n          width: 60px;\n          height: 2px;\n          background: linear-gradient(90deg, #667eea, #5a6fd8);\n          border-radius: 1px;\n        }\n\n        .back-button {\n          background: #6c757d;\n          color: white;\n          border: none;\n          padding: 12px 20px;\n          border-radius: 12px;\n          cursor: pointer;\n          font-size: 14px;\n          font-weight: 600;\n          transition: all 0.3s ease;\n          text-decoration: none;\n          display: inline-flex;\n          align-items: center;\n          gap: 8px;\n          box-shadow: 0 4px 16px rgba(108, 117, 125, 0.2);\n        }\n\n        .back-button:hover {\n          background: #5a6268;\n          transform: translateY(-2px);\n          box-shadow: 0 8px 24px rgba(108, 117, 125, 0.3);\n        }\n\n        .logout-btn {\n          background: linear-gradient(135deg, #f44336, #d32f2f);\n          color: white;\n          border: none;\n          padding: 12px 20px;\n          border-radius: 12px;\n          cursor: pointer;\n          font-size: 14px;\n          font-weight: 600;\n          transition: all 0.3s ease;\n          box-shadow: 0 4px 16px rgba(244, 67, 54, 0.3);\n        }\n\n        .logout-btn:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 8px 24px rgba(244, 67, 54, 0.4);\n        }\n\n        h2 {\n          color: #2c3e50;\n          margin: 0 0 30px 0;\n          font-size: 2rem;\n          font-weight: 700;\n          text-align: center;\n          background: linear-gradient(135deg, #667eea, #5a6fd8);\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n          background-clip: text;\n          line-height: 1.2;\n          animation: fadeInUp 0.6s ease-out;\n        }\n\n        /* AI Status Banner */\n        .ai-status-banner {\n          padding: 16px 24px;\n          border-radius: 12px;\n          margin-bottom: 24px;\n          animation: fadeInUp 0.6s ease-out 0.2s both;\n          border: 2px solid rgba(255, 255, 255, 0.2);\n        }\n\n        .ai-status-banner.ready {\n          background: linear-gradient(135deg, rgba(76, 175, 80, 0.1), rgba(69, 160, 73, 0.1));\n          border-color: rgba(76, 175, 80, 0.3);\n        }\n\n        .ai-ready {\n          font-weight: 600;\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          color: #28a745;\n        }\n\n        /* Tab Navigation with Rotating Glow - THIS IS THE KEY PART */\n        .food-tabs {\n          display: flex;\n          justify-content: center;\n          margin-bottom: 24px;\n          border-bottom: 2px solid rgba(255, 255, 255, 0.2);\n          background: rgba(255, 255, 255, 0.1);\n          border-radius: 20px 20px 0 0;\n          backdrop-filter: blur(10px);\n          animation: fadeInUp 0.6s ease-out 0.3s both;\n          padding: 8px;\n          position: relative;\n          overflow: hidden;\n        }\n\n        /* Rotating glow effect for tabs */\n        .food-tabs .tab-glow {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          width: 300px;\n          height: 300px;\n          background: radial-gradient(ellipse 40% 80% at center, rgba(102, 126, 234, 0.5) 0%, transparent 70%);\n          border-radius: 50%;\n          animation: rotatingGlow 8s linear infinite;\n          filter: blur(20px);\n          z-index: 0;\n        }\n\n        .food-tab {\n          background: none;\n          border: none;\n          padding: 15px 30px;\n          cursor: pointer;\n          font-size: 16px;\n          font-weight: 500;\n          color: rgba(4, 136, 238, 0.8);\n          border-bottom: 3px solid transparent;\n          transition: all 0.3s ease;\n          position: relative;\n          border-radius: 12px;\n          margin: 0 4px;\n          z-index: 1;\n        }\n\n        .food-tab:hover {\n          color: white;\n          background: rgba(255, 255, 255, 0.1);\n          transform: translateY(-2px);\n        }\n\n        .food-tab.active {\n          color: #5a6fd8;\n          background: rgba(255, 255, 255, 0.2);\n          font-weight: 600;\n          box-shadow: 0 4px 16px rgba(255, 255, 255, 0.2);\n          border-bottom-color: white;\n        }\n\n        /* Form sections */\n        .food-form-section {\n          display: grid;\n          grid-template-columns: 2fr 1fr;\n          gap: 30px;\n          margin-bottom: 24px;\n          animation: fadeInUp 0.6s ease-out 0.4s both;\n        }\n\n        .food-form-left,\n        .food-form-right {\n          background: rgba(255, 255, 255, 0.8);\n          backdrop-filter: blur(10px);\n          padding: 28px;\n          border-radius: 16px;\n          box-shadow: 0 4px 20px rgba(0,0,0,0.12);\n          border: 2px solid rgba(255, 255, 255, 0.3);\n          transition: all 0.3s ease;\n        }\n\n        .food-form-left:hover,\n        .food-form-right:hover {\n          box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\n          transform: translateY(-4px);\n          border-color: rgba(102, 126, 234, 0.3);\n        }\n\n        .food-form-left h3 {\n          margin-top: 0;\n          color: #2c3e50;\n          font-size: 1.25rem;\n          font-weight: 700;\n        }\n\n        /* Form styling */\n        .form-group {\n          margin-bottom: 20px;\n          position: relative;\n          z-index: 1;\n        }\n\n        .form-group label {\n          display: block;\n          margin-bottom: 8px;\n          font-weight: 600;\n          color: #2c3e50;\n          font-size: 14px;\n        }\n\n        .form-group input,\n        .form-group select {\n          width: 100%;\n          padding: 12px 16px;\n          border: 2px solid #e9ecef;\n          border-radius: 12px;\n          font-size: 14px;\n          transition: all 0.3s ease;\n          box-sizing: border-box;\n          background: rgba(255, 255, 255, 0.9);\n          backdrop-filter: blur(10px);\n        }\n\n        .form-group input:focus,\n        .form-group select:focus {\n          outline: none;\n          border-color: #667eea;\n          box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);\n          background: rgba(255, 255, 255, 1);\n        }\n\n        .form-row {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n          gap: 15px;\n          margin-bottom: 20px;\n        }\n\n        .search-input-container {\n          position: relative;\n          z-index: 1000;\n        }\n\n        .search-status {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 12px 16px;\n          background: rgba(248, 250, 252, 0.8);\n          border: 2px solid #e9ecef;\n          border-radius: 12px;\n          margin-top: 8px;\n          font-size: 0.85rem;\n          color: #6c757d;\n          backdrop-filter: blur(10px);\n        }\n\n        .search-status.ready {\n          background: linear-gradient(135deg, rgba(212, 237, 218, 0.8), rgba(195, 230, 203, 0.8));\n          border-color: rgba(195, 230, 203, 0.8);\n          color: #155724;\n        }\n\n        .status-ready {\n          font-weight: 600;\n          display: flex;\n          align-items: center;\n          gap: 4px;\n          color: #28a745;\n        }\n\n        .result-count {\n          color: #495057;\n          font-size: 0.8rem;\n          font-weight: 500;\n        }\n\n        /* Long COVID checkbox styling */\n        .long-covid-checkbox-label {\n          display: flex;\n          align-items: center;\n          gap: 14px;\n          cursor: pointer;\n          font-weight: 600;\n          line-height: 1.4;\n          color: #2c3e50;\n          padding: 16px 20px;\n          background: linear-gradient(135deg, rgba(248, 250, 252, 0.95), rgba(241, 245, 249, 0.95));\n          border: 2px solid rgba(102, 126, 234, 0.25);\n          border-radius: 16px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n          backdrop-filter: blur(10px);\n          transition: all 0.3s ease;\n        }\n\n        .long-covid-checkbox-label:hover {\n          background: linear-gradient(135deg, rgba(102, 126, 234, 0.12), rgba(118, 75, 162, 0.12));\n          border-color: rgba(102, 126, 234, 0.4);\n          transform: translateY(-1px);\n          box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);\n        }\n\n        .long-covid-checkbox {\n          width: 20px;\n          height: 20px;\n          cursor: pointer;\n          margin: 0;\n          accent-color: #667eea;\n        }\n\n        .checkbox-text {\n          color: #2c3e50;\n          font-size: 15px;\n          line-height: 1.4;\n          font-weight: 600;\n        }\n\n        .long-covid-info-banner {\n          margin-top: 16px;\n          padding: 16px 20px;\n          background: rgba(33, 150, 243, 0.15);\n          border-radius: 12px;\n          font-size: 13px;\n          color: #1565c0;\n          line-height: 1.5;\n          border: 2px solid rgba(33, 150, 243, 0.3);\n          backdrop-filter: blur(10px);\n          font-weight: 500;\n        }\n\n        /* Submit button */\n        .submit-button {\n          background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);\n          color: white;\n          border: none;\n          padding: 12px 30px;\n          border-radius: 12px;\n          font-size: 16px;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          width: 100%;\n          box-shadow: 0 4px 16px rgba(40, 167, 69, 0.3);\n        }\n\n        .submit-button:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 8px 24px rgba(40, 167, 69, 0.4);\n        }\n\n        /* Right panel styling */\n        .long-covid-side-panel {\n          background: linear-gradient(135deg, rgba(33, 150, 243, 0.1), rgba(21, 101, 192, 0.1));\n          backdrop-filter: blur(20px);\n          border-radius: 16px;\n          padding: 28px;\n          border: 2px solid rgba(33, 150, 243, 0.2);\n          box-shadow: 0 4px 20px rgba(0,0,0,0.12);\n          animation: fadeInUp 0.6s ease-out 0.6s both;\n        }\n\n        .long-covid-side-panel h3 {\n          color: #2c3e50;\n          margin: 0 0 20px 0;\n          font-size: 1.25rem;\n          font-weight: 700;\n          display: flex;\n          align-items: center;\n          gap: 12px;\n          background: linear-gradient(135deg, #2196f3, #1976d2);\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n          background-clip: text;\n        }\n\n        .no-food-info {\n          text-align: center;\n          padding: 30px 20px;\n          color: #6c757d;\n          background: rgba(255, 255, 255, 0.8);\n          backdrop-filter: blur(10px);\n          border-radius: 12px;\n          border: 2px dashed rgba(102, 126, 234, 0.3);\n          animation: pulse 2s ease-in-out infinite;\n        }\n\n        .no-data-icon {\n          font-size: 32px;\n          margin-bottom: 10px;\n          color: #dee2e6;\n        }\n\n        .general-tips {\n          text-align: left;\n          margin-top: 10px;\n        }\n\n        .general-tips ul {\n          margin: 8px 0 0 20px;\n          padding: 0;\n        }\n\n        .general-tips li {\n          margin-bottom: 5px;\n          font-size: 13px;\n          color: #495057;\n        }\n\n        /* Food Journal Section */\n        .food-journal-section {\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(20px);\n          padding: 32px;\n          border-radius: 20px;\n          box-shadow: \n            0 8px 32px rgba(0, 0, 0, 0.1),\n            0 1px 0 rgba(255, 255, 255, 0.8) inset;\n          border: 2px solid rgba(255, 255, 255, 0.2);\n          transition: all 0.3s ease;\n          animation: fadeInUp 0.6s ease-out 0.5s both;\n        }\n\n        .journal-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 20px;\n          padding-bottom: 15px;\n          border-bottom: 2px solid rgba(255, 255, 255, 0.3);\n        }\n\n        .journal-header h3 {\n          margin: 0;\n          color: #2c3e50;\n          font-size: 1.5rem;\n          font-weight: 700;\n          display: flex;\n          align-items: center;\n          gap: 12px;\n          background: linear-gradient(135deg, #667eea, #5a6fd8);\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n          background-clip: text;\n        }\n\n        .refresh-button {\n          background: linear-gradient(135deg, #2196f3, #1976d2);\n          color: white;\n          border: none;\n          padding: 8px 16px;\n          border-radius: 12px;\n          cursor: pointer;\n          font-size: 14px;\n          font-weight: 500;\n          transition: all 0.3s ease;\n          box-shadow: 0 4px 16px rgba(33, 150, 243, 0.2);\n        }\n\n        .refresh-button:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 8px 24px rgba(33, 150, 243, 0.3);\n        }\n\n        .journal-summary {\n          margin-bottom: 15px;\n          color: #6c757d;\n          font-size: 14px;\n          font-weight: 500;\n        }\n\n        .empty-state {\n          text-align: center;\n          padding: 60px 20px;\n          color: #6c757d;\n          background: rgba(255, 255, 255, 0.8);\n          backdrop-filter: blur(10px);\n          border-radius: 16px;\n          border: 2px dashed rgba(102, 126, 234, 0.3);\n          box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n          animation: pulse 2s ease-in-out infinite;\n        }\n\n        .empty-state p {\n          margin-bottom: 10px;\n          line-height: 1.5;\n          font-weight: 500;\n        }\n\n        /* Responsive Design */\n        @media (max-width: 768px) {\n          .food-tracker-container {\n            padding: 15px;\n          }\n          \n          .food-tracker-content {\n            padding: 24px;\n            border-radius: 20px;\n          }\n          \n          .food-form-section {\n            grid-template-columns: 1fr;\n            gap: 20px;\n          }\n          \n          .form-row {\n            grid-template-columns: 1fr;\n            gap: 12px;\n          }\n          \n          .food-tabs {\n            flex-wrap: wrap;\n            justify-content: flex-start;\n            padding: 4px;\n          }\n          \n          .food-tab {\n            padding: 10px 16px;\n            font-size: 14px;\n            margin: 2px;\n          }\n          \n          .journal-header {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 10px;\n          }\n        }\n\n        @media (max-width: 480px) {\n          .food-tracker-container {\n            padding: 10px;\n          }\n          \n          .food-tracker-content {\n            padding: 20px;\n            border-radius: 16px;\n          }\n          \n          .food-form-left,\n          .food-form-right {\n            padding: 20px;\n          }\n          \n          .food-tabs {\n            justify-content: center;\n            padding: 4px;\n          }\n          \n          .food-tab {\n            padding: 8px 12px;\n            font-size: 13px;\n          }\n        }\n\n        /* Accessibility */\n        @media (prefers-reduced-motion: reduce) {\n          *, *::before, *::after {\n            animation-duration: 0.01ms !important;\n            animation-iteration-count: 1 !important;\n            transition-duration: 0.01ms !important;\n          }\n          \n          .food-tracker-container::before,\n          .bg-animation,\n          .card-glow,\n          .floating-shape,\n          .tab-glow {\n            animation: none;\n          }\n        }\n\n        /* Focus states for accessibility */\n        .back-button:focus-visible,\n        .logout-btn:focus-visible,\n        .food-tab:focus-visible,\n        .submit-button:focus-visible,\n        .refresh-button:focus-visible {\n          outline: 3px solid #667eea;\n          outline-offset: 2px;\n        }\n      `}</style>\n    </div>\n\n\n\n\n\n  );\n}\n\nexport default FoodTrackerPage;"],"names":["calculateFoodEfficiency","mealData","userProfile","timeStr","time","hourMatch","match","hour","parseInt","isPM","toLowerCase","includes","hour24","proteinFactor","parseFloat","protein","carbFactor","carbs","fatFactor","fat","timeFactor","mealTypeFactor","mealType","efficiency","Math","min","longCovidAdjust","hasLongCovid","severity","longCovidSeverity","longCovidBenefits","length","longCovidCautions","max","parseDate","dateString","parts","split","Date","formatDateForComparison","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","console","log","result","calculateFoodEfficiencyDebug","macroBalance","_userProfile$longCovi","severityFactor","finalEfficiency","name","calories","MacronutrientChart","_ref","userData","userIntake","chartRef","useRef","personalizedRDA","setPersonalizedRDA","useState","calculatePersonalizedRDA","useCallback","calculateBMI","weight","height","pow","totalCalories","age","gender","activity_level","bmr","tdee","covid_condition","bmi","round","calculateTDEE","macroDistribution","calculateMacroDistribution","proteinPct","carbsPct","fatPct","remaining","toFixed","covidNotes","value","covidNote","useEffect","rda","current","d3","selectAll","remove","margin","width","svg","append","attr","macros","data","_objectSpread","colors","x","domain","map","d","range","padding","maxValue","y","call","ticks","text","formattedDate","toLocaleDateString","forEach","y0","stackedData","nutrient","y1","tooltip","style","join","bandwidth","on","event","parentData","this","parentNode","datum","amount","percentage","caloriesPerGram","html","pageX","pageY","legend","i","legendRow","calorieInfo","calculateCalories","_jsx","className","children","ref","minHeight","EfficiencyChart","_ref2","foodDatabase","processedData","setProcessedData","today","oneWeekAgo","setDate","oneWeekAgoString","filteredData","filter","meal","dateString1","dateString2","err","warn","isSameOrAfter","index","metabolicEfficiency","originalEfficiency","actualEnergy","wastedEnergy","fallbackEfficiency","allDatesInRange","push","combinedData","groupedByDate","sortedDates","dateData","get","meals","weightedEfficiency","reduce","acc","mealEfficiency","calorieWeight","totalActualEnergy","totalWastedEnergy","originalMeals","sortedCombinedData","sort","a","b","localeCompare","xOuter","xInner","maxCalories","yEff","tickFormat","mealColors","mealColor","barX","barWidth","item","lineGenerator","defined","curve","enter","legendY","legendData","label","color","opacity","mealTypeData","Object","entries","_ref3","type","floor","_jsxs","convertTo24Hour","time12h","modifier","hours","minutes","toUpperCase","formattedHour","toString","prepareChartData","rawMealData","Array","isArray","formattedData","timeFormatted","ampm","error","BulletChart","_ref4","maxPercent","actualWidth","optimalWidth","barColor","percent","isAdjusted","unit","left","backgroundColor","baseRDAData10","vitamin_a","femaleAdjust","description","vitamin_c","vitamin_d","vitamin_e","vitamin_b6","vitamin_b12","folate","iron","calcium","magnesium","zinc","selenium","copper","vitamin_b1","vitamin_b2","vitamin_b3","MicronutrientChart","_ref5","userInfo","setUserInfo","chartData","setChartData","allChartData","setAllChartData","nutrientIntake","keys","intakeData","baseRDAData","completeIntakeData","nutrientKey","hasOwnProperty","rdaInfo","undefined","intakeValue","ensureCompleteNutrientData","displayMode","setDisplayMode","isLoading","setIsLoading","selectedCategory","setSelectedCategory","getSeverityFactor","standardizeUnitValue","fromUnit","toUnit","convertFromIU","inputUnit","processNutrientData","rdaData","processedNutrients","_baseRDAData10$nutrie","intakeDetails","intakeUnit","standardizedIntakeValue","isNaN","isFinite","percentOfRDA","cappedPercentage","formattedName","replace","c","category","key","cappedValue","rawValue","standardizedValue","rdaUnit","isAdjustedRDA","isExtreme","applyFilters","dataToFilter","baseRDAData_","personalRDA","JSON","parse","stringify","_personalRDA$nutrient","adjustedValue","ageMultiplier","covid_severity","roundedValue","getNutrientStatus","percentValue","getNutrientInfo","nutrientName","nutrientInfoMap","exactMatch","timer","setTimeout","calculatedRDA","processedAllData","clearTimeout","toggleCovidSeverity","_userInfo$covid_sever","_userInfo$longCovidSe","severities","currentSeverity","currentIndex","indexOf","newSeverity","updatedUserInfo","getCurrentCovidSeverity","charAt","slice","changeDisplayMode","mode","changeCategory","deficientCount","onClick","getCovidSeverityClass","getFilterDescription","displayPart","trim","medical_conditions","border","borderRadius","cursor","fontSize","fontWeight","transition","minWidth","onMouseEnter","e","target","transform","onMouseLeave","AnalysisTab","_ref6","foodLog","analysisDate","todayMeals","entry","macroSums","microSums","efficiencyData","getChartData","lastDate","lastDayEntries","micronutrients","_ref7","_ref8","k","v","numValue","mealTypes","TABS","_foodLog$find","navigate","useNavigate","allFoodsCache","setAllFoodsCache","pyodideStatus","setPyodideStatus","searchIndexBuilt","setSearchIndexBuilt","currentUser","setCurrentUser","setUserProfile","activityLevel","authLoading","setAuthLoading","tab","setTab","search","setSearch","suggestions","setSuggestions","selectedMeal","setSelectedMeal","fields","setFields","setMealType","setTime","toLocaleTimeString","minute","toISOString","setLongCovidAdjust","loading","setLoading","success","setSuccess","setError","setFoodLog","logLoading","setLogLoading","journalError","setJournalError","journalPage","setJournalPage","editingEntry","setEditingEntry","deleteConfirmId","setDeleteConfirmId","deleteLoading","setDeleteLoading","suggestionCache","setSuggestionCache","DeleteConfirmModal","entryId","entryName","onConfirm","onCancel","disabled","checkUserAuthentication","async","storedUserData","localStorage","getItem","parsedUserData","id","userDocRef","doc","db","uid","userDoc","getDoc","exists","fetchUserProfile","initializeFoodLogData","q","query","collection","orderBy","limit","getDocs","docs","LongCovidFoodInfo","foodName","longCovidRelevance","covidRelevance","benefits","cautions","functionalCompounds","antiInflammatoryLevel","antiInflammatory","compound","level","benefit","caution","LongCovidSidePanel","selectedFood","isSearching","searchTerm","getCovidFoodRating","foodLower","some","food","calculateMetabolicEfficiency","debouncedSearch","useDebounce","delay","debouncedValue","setDebouncedValue","handler","fetchSuggestions","normalizedSearch","calculateJavaScriptScore","score","startsWith","nameWords","searchWords","wordMatches","searchWord","nameWord","performFallbackSearch","allFoods","mealNameLower","word","searchMethod","searchScore","aName","bName","window","pyodideReady","pyodide","runPython","results","pythonResults","search_score","prev","checkPyodideStatus","handlePyodideReady","handlePyodideError","addEventListener","interval","setInterval","removeEventListener","clearInterval","handleSelectMeal","_meal$nutrients","_nutrients$protein2","_nutrients$carbs2","_nutrients$fat2","_nutrients$calories2","nutrients","per100g","serving","handleFieldChange","newServing","_selectedMeal$nutrien","ratio","prevFields","_nutrients$protein","_nutrients$carbs","_nutrients$fat","_nutrients$calories","updatedFields","recalculateNutrients","fetchFoodLog","page","arguments","message","handleBack","find","deleteDoc","prevLog","removeItem","sessionStorage","clear","t","position","top","background","animation","zIndex","pointerEvents","handleCancelEdit","checked","onChange","placeholder","autoComplete","s","match_type","step","htmlFor","time24","time12","Error","entryData","mealId","updateDoc","updatedAt","Timestamp","now","createdAt","docRef","addDoc","newEntry","_Fragment","formatDateTime","dateParts","shortTime","getMealBadge","title","substring","handleEditEntry","jsx"],"sourceRoot":""}