{"version":3,"file":"static/js/924.61c03e24.chunk.js","mappings":"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","sources":["components/FoodTracker/enhanced-efficiency-functions.js","components/FoodTracker/FoodTrackerAnalysis.js","components/FoodTracker/FoodTrackerPage.js"],"sourcesContent":["// enhanced-efficiency-functions.js - Fixed with proper time sorting and chronological line positioning\nimport React, { useRef, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\n\n// Long COVID Severity Factors\n// FIXED: Long COVID RDA Multipliers (for increased nutritional requirements)\nexport const getSeverityFactor = (severity) => {\n  // These factors represent INCREASED nutritional NEEDS due to COVID severity\n  const severityFactors = {\n    'mild': 1.2,        // 20% increase in RDA requirements\n    'moderate': 1.5,    // 50% increase in RDA requirements  \n    'severe': 1.8,      // 80% increase in RDA requirements\n    'very severe': 2.2  // 120% increase in RDA requirements\n  };\n  return severityFactors[severity?.toLowerCase()] || 1.0;\n};\n\n// NEW: Separate function for metabolic efficiency (where lower values make sense)\nexport const getMetabolicEfficiencyFactor = (severity) => {\n  const severityFactors = {\n    'mild': 0.95,       // Slightly reduced efficiency\n    'moderate': 0.85,   // Moderately reduced efficiency\n    'severe': 0.75,     // Significantly reduced efficiency\n    'very severe': 0.65 // Severely reduced efficiency\n  };\n  return severityFactors[severity?.toLowerCase()] || 0.85;\n};\n\n// UPDATED: Calculate Food Efficiency using the correct factor for efficiency + expanded snack types\nexport const calculateFoodEfficiency = (mealData, userProfile) => {\n  const timeStr = mealData.time;\n  const hourMatch = timeStr.match(/(\\d+):/);\n  const hour = hourMatch ? parseInt(hourMatch[1], 10) : 12;\n  const isPM = timeStr.toLowerCase().includes('pm');\n  \n  let hour24 = hour;\n  if (isPM && hour !== 12) hour24 += 12;\n  if (!isPM && hour === 12) hour24 = 0;\n  \n  // Macronutrient factors\n  const proteinFactor = (parseFloat(mealData.protein) || 0) * 0.2;\n  const carbFactor = (parseFloat(mealData.carbs) || 0) * 0.1;\n  const fatFactor = (parseFloat(mealData.fat) || 0) * 0.15;\n  \n  // Circadian rhythm factors\n  let timeFactor = 1.0;\n  if (hour24 < 6 || hour24 > 20) {\n    timeFactor = 0.7;\n  } else if (hour24 >= 7 && hour24 <= 10) {\n    timeFactor = 1.2;\n  } else if (hour24 >= 17 && hour24 <= 19) {\n    timeFactor = 0.9;\n  }\n  \n  // UPDATED: Expanded meal type factors including all snack types\n  const mealTypeFactors = {\n    'Breakfast': 1.3,\n    'Morning Snack': 0.9,      // Good mid-morning metabolism\n    'Lunch': 1.1,\n    'Afternoon Snack': 0.8,    // Decent afternoon metabolism\n    'Dinner': 0.9,\n    'Late Night Snack': 0.6   // Lower efficiency for late eating\n            // Keep original for backward compatibility\n  };\n  const mealTypeFactor = mealTypeFactors[mealData.mealType] || 1.0;\n  \n  // Base efficiency calculation\n  const macroBalance = Math.min(100, (proteinFactor + carbFactor + fatFactor) * 10);\n  let efficiency = macroBalance * timeFactor * mealTypeFactor;\n  \n  // Long COVID adjustments - FIXED to use metabolic efficiency factor\n  if (mealData.longCovidAdjust && userProfile?.hasLongCovid) {\n    const severityFactor = getMetabolicEfficiencyFactor(userProfile.longCovidSeverity); // CHANGED: Use metabolic efficiency factor\n    efficiency *= severityFactor;\n    \n    // Boost for beneficial foods\n    if (mealData.longCovidBenefits && mealData.longCovidBenefits.length > 0) {\n      efficiency *= 1.1;\n    }\n    \n    // Reduce for problematic foods\n    if (mealData.longCovidCautions && mealData.longCovidCautions.length > 0) {\n      efficiency *= 0.9;\n    }\n  }\n  \n  return Math.min(100, Math.max(0, efficiency));\n};\n\n// Micronutrient enhancement functions\nexport const estimateMicronutrientEnhancement = (micronutrients, severity) => {\n  const severityMultipliers = {\n    'mild': 1.2,\n    'moderate': 1.5,\n    'severe': 1.8,\n    'very severe': 2.0\n  };\n  \n  const multiplier = severityMultipliers[severity?.toLowerCase()] || 1.0;\n  const enhancedMicronutrients = {};\n  \n  // Key nutrients for Long COVID recovery\n  const keyNutrients = [\n    'vitamin_c', 'vitamin_d', 'zinc', 'selenium', 'vitamin_b6', \n    'vitamin_b12', 'folate', 'iron', 'magnesium'\n  ];\n  \n  Object.entries(micronutrients).forEach(([nutrient, data]) => {\n    if (keyNutrients.includes(nutrient)) {\n      enhancedMicronutrients[nutrient] = {\n        ...data,\n        recommendedValue: (data.value || 0) * multiplier,\n        isEnhanced: true,\n        reason: `Increased for Long COVID ${severity} severity`\n      };\n    } else {\n      enhancedMicronutrients[nutrient] = {\n        ...data,\n        recommendedValue: data.value || 0,\n        isEnhanced: false\n      };\n    }\n  });\n  \n  return enhancedMicronutrients;\n};\n\n// Standard micronutrient enhancement (non-Long COVID)\nexport const estimateStandardMicronutrientEnhancement = (micronutrients, userProfile) => {\n  const enhancedMicronutrients = {};\n  \n  Object.entries(micronutrients).forEach(([nutrient, data]) => {\n    let multiplier = 1.0;\n    \n    // Age-based adjustments\n    if (userProfile.age > 65) {\n      if (['vitamin_d', 'vitamin_b12', 'calcium'].includes(nutrient)) {\n        multiplier *= 1.2;\n      }\n    }\n    \n    // Gender-based adjustments\n    if (userProfile.gender === 'female') {\n      if (nutrient === 'iron') {\n        multiplier *= 2.25; // Women need more iron\n      }\n    }\n    \n    // Activity level adjustments\n    if (userProfile.activityLevel === 'high' || userProfile.activityLevel === 'very_high') {\n      if (['magnesium', 'iron', 'vitamin_b1', 'vitamin_b2'].includes(nutrient)) {\n        multiplier *= 1.3;\n      }\n    }\n    \n    enhancedMicronutrients[nutrient] = {\n      ...data,\n      recommendedValue: (data.value || 0) * multiplier,\n      isEnhanced: multiplier > 1.0,\n      reason: multiplier > 1.0 ? 'Adjusted for demographics and activity' : 'Standard recommendation'\n    };\n  });\n  \n  return enhancedMicronutrients;\n};\n\n// Fixed EnhancedEfficiencyChart with proper chronological line ordering\nexport const EnhancedEfficiencyChart = ({ data, userData }) => {\n  const chartRef = useRef(null);\n  const [processedData, setProcessedData] = useState([]);\n  \n  useEffect(() => {\n    if (!data || data.length === 0) return;\n    \n    // Process meals with enhanced efficiency calculations\n    const updatedData = data.map(meal => {\n      const efficiency = calculateFoodEfficiency(meal, userData);\n      return {\n        ...meal,\n        originalEfficiency: meal.efficiency || 80,\n        enhancedEfficiency: efficiency,\n        actualEnergy: meal.calories * (efficiency / 100),\n        wastedEnergy: meal.calories * ((100 - efficiency) / 100)\n      };\n    });\n    \n    setProcessedData(updatedData);\n  }, [data, userData]);\n  \n  useEffect(() => {\n    if (!chartRef.current || !processedData || processedData.length === 0) return;\n    \n    // Helper function to convert 12-hour time to 24-hour for proper sorting\n    const convertTo24Hour = (time12h) => {\n      if (!time12h) return '12:00';\n      \n      // Handle various time formats\n      let timeStr = time12h.toString().trim();\n      \n      // Split by space to separate time and AM/PM\n      const parts = timeStr.split(' ');\n      if (parts.length < 2) {\n        // If no AM/PM, assume it's already 24-hour format or missing modifier\n        console.warn('Time format issue:', timeStr);\n        return timeStr;\n      }\n      \n      const [time, modifier] = parts;\n      const timeParts = time.split(':');\n      \n      if (timeParts.length < 2) {\n        console.warn('Invalid time format:', timeStr);\n        return timeStr;\n      }\n      \n      let [hours, minutes] = timeParts;\n      let hour24 = parseInt(hours, 10);\n      \n      if (isNaN(hour24)) {\n        console.warn('Invalid hour:', hours);\n        return timeStr;\n      }\n      \n      // Convert based on AM/PM\n      const mod = modifier.toUpperCase();\n      if (mod === 'AM') {\n        if (hour24 === 12) hour24 = 0; // 12 AM = 0 hours (midnight)\n      } else if (mod === 'PM') {\n        if (hour24 !== 12) hour24 += 12; // Add 12 for PM, except 12 PM stays 12\n      }\n      \n      // Ensure minutes is valid\n      if (!minutes) minutes = '00';\n      \n      const result = `${hour24.toString().padStart(2, '0')}:${minutes}`;\n      console.log(`Converted ${timeStr} to ${result}`);\n      return result;\n    };\n    \n    // Clear previous chart\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n    \n    // Set dimensions\n    const margin = { top: 60, right: 120, bottom: 140, left: 70 };\n    const width = 800 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n    \n    // Create SVG\n    const svg = d3.select(chartRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n    // Chart title\n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", -30)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"18px\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Enhanced Metabolic Efficiency Chart\");\n      \n    // Chart subtitle\n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", -10)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"14px\")\n      .style(\"font-style\", \"italic\")\n      .text(\"Optimized for Long COVID energy management\");\n    \n    // Filter data to only include the last week\n    const today = new Date();\n    const oneWeekAgo = new Date();\n    oneWeekAgo.setDate(today.getDate() - 7);\n    \n    const lastWeekData = processedData.filter(meal => {\n      try {\n        const mealDate = new Date(meal.date);\n        return mealDate >= oneWeekAgo;\n      } catch (err) {\n        console.warn('Error parsing date:', meal.date);\n        return false;\n      }\n    });\n    \n    // Generate an array of all days in the past week\n    const allDatesInRange = [];\n    for (let i = 6; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(today.getDate() - i);\n      const formattedDate = date.toISOString().split('T')[0];\n      allDatesInRange.push(formattedDate);\n    }\n    \n    // Group data by date and meal type for bars\n    const combinedData = [];\n    const groupedByDate = d3.group(lastWeekData, d => d.date);\n    \n    const uniqueMealTypes = ['Breakfast', 'Morning Snack', 'Lunch', 'Afternoon Snack', 'Dinner', 'Late Night Snack'];\n    \n    allDatesInRange.forEach(date => {\n      const dateData = groupedByDate.get(date) || [];\n      \n      if (dateData.length > 0) {\n        const mealsByType = d3.group(dateData, d => d.mealType);\n      \n        // Process meal types in the correct order\n        uniqueMealTypes.forEach(mealType => {\n          const meals = mealsByType.get(mealType);\n          if (meals && meals.length > 0) {\n            const totalCalories = d3.sum(meals, d => d.calories);\n            const weightedEfficiency = meals.reduce((acc, meal) => {\n              return acc + (meal.enhancedEfficiency * meal.calories / totalCalories);\n            }, 0);\n            \n            const totalActualEnergy = d3.sum(meals, d => d.actualEnergy);\n            const totalWastedEnergy = totalCalories - totalActualEnergy;\n            \n            combinedData.push({\n              date: date,\n              mealType: mealType,\n              time: meals[0].time,\n              name: `${mealType} (${meals.length} items)`,\n              efficiency: Math.round(weightedEfficiency),\n              calories: totalCalories,\n              actualEnergy: totalActualEnergy,\n              wastedEnergy: totalWastedEnergy,\n              originalMeals: meals,\n              mealOrder: uniqueMealTypes.indexOf(mealType) // Add explicit order\n            });\n          }\n        });\n      }\n    });\n    \n    // Calculate scales\n    const xOuter = d3.scaleBand()\n      .domain(allDatesInRange)\n      .range([0, width])\n      .padding(0.2);\n    \n    const xInner = d3.scaleBand()\n      .domain(uniqueMealTypes)\n      .range([0, xOuter.bandwidth()])\n      .padding(0.1);\n    \n    const formatDate = date => {\n      const parts = date.split('-');\n      return `${parts[1]}/${parts[2]}`;\n    };\n    \n    const maxCalories = d3.max(combinedData, d => d.calories) || 1000;\n    const y = d3.scaleLinear()\n      .domain([0, maxCalories])\n      .range([height, 0]);\n\n    const yEff = d3.scaleLinear()\n      .domain([0, 100])\n      .range([height, 0]);\n\n    // Create axes\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(d3.axisBottom(xOuter).tickFormat(formatDate))\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-45)\");\n\n    svg.append(\"g\")\n      .call(d3.axisLeft(y))\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", -50)\n      .attr(\"x\", -height / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#000\")\n      .text(\"Calories\");\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${width}, 0)`)\n      .call(d3.axisRight(yEff))\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 50)\n      .attr(\"x\", -height / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#000\")\n      .text(\"Enhanced Efficiency (%)\");\n\n    // Color scheme for meal types\n    const mealColors = {\n      \"Breakfast\": \"#FF9F1C\",\n      \"Morning Snack\": \"#FFB84D\",\n      \"Lunch\": \"#2EC4B6\",\n      \"Afternoon Snack\": \"#4ECDC4\",\n      \"Dinner\": \"#E71D36\",\n      \"Late Night Snack\": \"#FF6B6B\"\n    };\n\n    // Create tooltip\n    const tooltip = d3.select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"chart-tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"white\")\n      .style(\"border\", \"1px solid #ddd\")\n      .style(\"border-radius\", \"5px\")\n      .style(\"padding\", \"12px\")\n      .style(\"font-size\", \"14px\")\n      .style(\"box-shadow\", \"0 3px 14px rgba(0,0,0,0.25)\")\n      .style(\"z-index\", \"10\")\n      .style(\"max-width\", \"300px\");\n\n    // Add stacked bars\n    combinedData.forEach(meal => {\n      const mealColor = mealColors[meal.mealType] || \"#999999\";\n      const barX = xOuter(meal.date) + xInner(meal.mealType);\n      const barWidth = xInner.bandwidth();\n      \n      // Actual energy bar\n      svg.append(\"rect\")\n        .attr(\"class\", \"actual-energy-bar\")\n        .attr(\"x\", barX)\n        .attr(\"y\", y(meal.actualEnergy))\n        .attr(\"width\", barWidth)\n        .attr(\"height\", height - y(meal.actualEnergy))\n        .attr(\"fill\", mealColor)\n        .attr(\"opacity\", 0.9)\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .on(\"mouseover\", function(event) {\n          d3.select(this).attr(\"opacity\", 0.7);\n          tooltip\n            .style(\"visibility\", \"visible\")\n            .html(`\n              <div style=\"font-weight:bold;margin-bottom:10px;font-size:15px;\">${meal.date} - ${meal.mealType}</div>\n              <div style=\"margin-bottom:6px;\">Total Calories: ${Math.round(meal.calories)}</div>\n              <div style=\"margin-bottom:6px;\"><strong>Enhanced Efficiency: ${meal.efficiency}%</strong></div>\n              <div style=\"margin-bottom:6px;\">Usable Energy: ${Math.round(meal.actualEnergy)} cal</div>\n              <div style=\"margin-bottom:12px;\">Energy Lost: ${Math.round(meal.wastedEnergy)} cal</div>\n              <div style=\"font-weight:bold;margin-bottom:5px;\">Individual Items:</div>\n              <ul style=\"margin-top:0;padding-left:20px;\">\n                ${meal.originalMeals.map(item => `\n                  <li>${item.name} - ${item.calories} cal (${Math.round(item.enhancedEfficiency)}% efficient)</li>\n                `).join('')}\n              </ul>\n            `)\n            .style(\"left\", `${event.pageX + 15}px`)\n            .style(\"top\", `${event.pageY - 10}px`);\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this).attr(\"opacity\", 0.9);\n          tooltip.style(\"visibility\", \"hidden\");\n        });\n      \n      // Potential energy bar (wasted energy)\n      svg.append(\"rect\")\n        .attr(\"class\", \"potential-energy-bar\")\n        .attr(\"x\", barX)\n        .attr(\"y\", y(meal.calories))\n        .attr(\"width\", barWidth)\n        .attr(\"height\", y(meal.actualEnergy) - y(meal.calories))\n        .attr(\"fill\", mealColor)\n        .attr(\"opacity\", 0.3)\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"stroke-dasharray\", \"3,3\");\n    });\n\n    // FIXED: Create properly sorted chronological data for the efficiency line\n    if (combinedData.length > 0) {\n      // Sort meals chronologically: first by date, then by meal order\n      const chronologicalData = [...combinedData].sort((a, b) => {\n        // First sort by date\n        if (a.date !== b.date) return a.date.localeCompare(b.date);\n        \n        // Then sort by meal order (already assigned during data creation)\n        return a.mealOrder - b.mealOrder;\n      });\n      \n      console.log('Final chronological order:', chronologicalData.map(d => ({\n        date: d.date,\n        mealType: d.mealType,\n        mealOrder: d.mealOrder,\n        efficiency: d.efficiency\n      })));\n\n      // Calculate x positions for the line based on the actual bar positions\n      const lineData = chronologicalData.map((meal, index) => {\n        // Calculate the actual bar position (center of the bar)\n        const barX = xOuter(meal.date) + xInner(meal.mealType);\n        const barWidth = xInner.bandwidth();\n        const barCenterX = barX + (barWidth / 2);\n        \n        console.log(`Meal ${index}: ${meal.mealType} on ${meal.date} at x=${barCenterX}, efficiency=${meal.efficiency}`);\n        \n        return {\n          ...meal,\n          xPos: barCenterX,\n          chronologicalIndex: index\n        };\n      });\n\n      // Sort lineData by x position to ensure left-to-right flow\n      const sortedLineData = [...lineData].sort((a, b) => a.xPos - b.xPos);\n      \n      console.log('Line data sorted by x position:', sortedLineData.map(d => ({\n        mealType: d.mealType,\n        xPos: Math.round(d.xPos),\n        efficiency: d.efficiency\n      })));\n\n      // Create the efficiency line\n      const lineGenerator = d3.line()\n        .x(d => d.xPos)\n        .y(d => yEff(d.efficiency))\n        .defined(d => d.efficiency != null && !isNaN(d.efficiency))\n        .curve(d3.curveMonotoneX);\n      \n      svg.append(\"path\")\n        .datum(sortedLineData)  // Use sorted data\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#FF5733\")\n        .attr(\"stroke-width\", 3)\n        .attr(\"d\", lineGenerator);\n      \n      // Add efficiency points\n      svg.selectAll(\".efficiency-point\")\n        .data(sortedLineData)  // Use sorted data\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"efficiency-point\")\n        .attr(\"cx\", d => d.xPos)\n        .attr(\"cy\", d => yEff(d.efficiency))\n        .attr(\"r\", 5)\n        .attr(\"fill\", \"#FF5733\")\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .on(\"mouseover\", function(event, d) {\n          d3.select(this).attr(\"r\", 8);\n          tooltip\n            .style(\"visibility\", \"visible\")\n            .html(`\n              <div style=\"font-weight:bold;font-size:16px;\">${d.mealType} - ${d.time}</div>\n              <div style=\"font-weight:bold;font-size:14px;\">${d.date}</div>\n              <div>Enhanced Efficiency: <strong>${d.efficiency}%</strong></div>\n              <div style=\"margin-top:6px\">X Position: ${Math.round(d.xPos)}</div>\n            `)\n            .style(\"left\", `${event.pageX + 15}px`)\n            .style(\"top\", `${event.pageY - 10}px`);\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this).attr(\"r\", 5);\n          tooltip.style(\"visibility\", \"hidden\");\n        });\n    }\n\n    // Add legend\n    const legendY = height + 80;\n    \n    // Efficiency line legend\n    svg.append(\"line\")\n      .attr(\"x1\", 10)\n      .attr(\"x2\", 40)\n      .attr(\"y1\", legendY)\n      .attr(\"y2\", legendY)\n      .attr(\"stroke\", \"#FF5733\")\n      .attr(\"stroke-width\", 3);\n    \n    svg.append(\"circle\")\n      .attr(\"cx\", 25)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 5)\n      .attr(\"fill\", \"#FF5733\")\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.append(\"text\")\n      .attr(\"x\", 50)\n      .attr(\"y\", legendY + 4)\n      .style(\"font-size\", \"12px\")\n      .text(\"Efficiency (%)\");\n    \n    // Energy bars legend\n    const legendData = [\n      { label: \"Usable Energy\", color: \"#2EC4B6\", opacity: 0.9 },\n      { label: \"Energy Lost\", color: \"#2EC4B6\", opacity: 0.3 }\n    ];\n    \n    svg.selectAll(\".legend-rect\")\n      .data(legendData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", 200)\n      .attr(\"y\", (d, i) => legendY - 10 + i * 20)\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"fill\", d => d.color)\n      .attr(\"opacity\", d => d.opacity)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.selectAll(\".legend-text\")\n      .data(legendData)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", 225)\n      .attr(\"y\", (d, i) => legendY + 2 + i * 20)\n      .style(\"font-size\", \"12px\")\n      .text(d => d.label);\n    \n    // Meal type legend\n    const mealTypeData = Object.entries(mealColors).map(([type, color]) => ({ type, color }));\n    \n    svg.selectAll(\".meal-type-rect\")\n      .data(mealTypeData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => 400 + Math.floor(i/3) * 140)\n      .attr(\"y\", (d, i) => legendY - 10 + (i % 3) * 20)\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"fill\", d => d.color)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.selectAll(\".meal-type-text\")\n      .data(mealTypeData)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", (d, i) => 425 + Math.floor(i/3) * 140)\n      .attr(\"y\", (d, i) => legendY + 2 + (i % 3) * 20)\n      .style(\"font-size\", \"12px\")\n      .text(d => d.type);\n\n    // Cleanup function\n    return () => {\n      d3.select(\".chart-tooltip\").remove();\n    };\n  }, [chartRef, processedData, userData]);\n  \n  if (!processedData || processedData.length === 0) {\n    return (\n      <div className=\"chart-container\">\n        <div ref={chartRef} className=\"efficiency-chart\">\n          <div className=\"placeholder\">\n            <p>No meal data available for enhanced efficiency analysis.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"chart-container\">\n      <div ref={chartRef} className=\"efficiency-chart\" style={{ minHeight: '500px' }}></div>\n      <div className=\"chart-info\" style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f8f9fa', borderRadius: '8px' }}>\n        <h4>Enhanced Metabolic Efficiency - Fixed Chronological Line</h4>\n        <p>\n          This chart now properly connects meals in chronological order. The efficiency line flows smoothly \n          from the earliest meal to the latest meal across all days, regardless of meal type.\n        </p>\n        <div style={{ marginTop: '10px' }}>\n          <strong>Key Fixes:</strong>\n          <ul style={{ marginTop: '5px', paddingLeft: '20px' }}>\n            <li>Meals are sorted chronologically by date and time before connecting</li>\n            <li>Line positions are calculated as smooth progression across chart width</li>\n            <li>No more jumping between different meal types on the same day</li>\n            <li>Hover tooltips show chronological order for verification</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport './MicronutrientChart.css';\nimport './FoodTrackerAnalysis.css';\n// Import enhanced efficiency functions\nimport { \n  calculateFoodEfficiency\n} from './enhanced-efficiency-functions';\n\n// FIXED: Utility functions to handle dates without timezone issues\nconst parseDate = (dateString) => {\n  const parts = dateString.split('-');\n  return new Date(parseInt(parts[0]), parseInt(parts[1]) - 1, parseInt(parts[2]));\n};\n\nconst formatDateForComparison = (date) => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\nconst isSameOrAfter = (dateString1, dateString2) => {\n  const date1 = parseDate(dateString1);\n  const date2 = parseDate(dateString2);\n  return date1 >= date2;\n};\n\n// FIXED: Enhanced ensureCompleteNutrientData function with better unit handling\nfunction ensureCompleteNutrientData(intakeData, baseRDAData) {\n  console.log('=== FIXED ensureCompleteNutrientData ===');\n  console.log('Input intakeData:', intakeData);\n  \n  const completeIntakeData = {};\n\n  // Iterate over all nutrients defined in baseRDAData\n  for (const nutrientKey in baseRDAData) {\n    if (!baseRDAData.hasOwnProperty(nutrientKey)) continue;\n    \n    const rdaInfo = baseRDAData[nutrientKey];\n    \n    if (!rdaInfo || rdaInfo.value === undefined || !rdaInfo.unit) {\n      console.warn(`Invalid RDA data for ${nutrientKey}:`, rdaInfo);\n      continue;\n    }\n\n    // Check if this nutrient exists in the user's intake data\n    if (intakeData && intakeData[nutrientKey] !== undefined) {\n      const intakeValue = intakeData[nutrientKey];\n\n      // Case 1: Already proper object format { value: X, unit: Y }\n      if (typeof intakeValue === 'object' && intakeValue !== null && \n          intakeValue.value !== undefined && intakeValue.unit !== undefined) {\n        \n        let finalValue = parseFloat(intakeValue.value) || 0;\n        let finalUnit = intakeValue.unit;\n        \n        // FIXED: Handle unit conversions more carefully\n       // FIXED: Handle unit conversions more carefully\nif (finalUnit !== rdaInfo.unit) {\n  // Convert common unit mismatches\n  if (finalUnit === 'mcg' && rdaInfo.unit === 'mg') {\n    finalValue = finalValue / 1000;\n    finalUnit = 'mg';\n  } else if (finalUnit === 'mg' && rdaInfo.unit === 'mcg') {\n    finalValue = finalValue * 1000;\n    finalUnit = 'mcg';\n  } else if (finalUnit === 'g' && rdaInfo.unit === 'mg') {\n    finalValue = finalValue * 1000;\n    finalUnit = 'mg';\n  }\n  // ADD THIS: IU to mcg conversion for vitamin A\n  else if (finalUnit === 'IU' && nutrientKey === 'vitamin_a' && rdaInfo.unit === 'mcg') {\n    finalValue = finalValue * 0.3; // 1 IU ≈ 0.3 mcg RAE for vitamin A\n    finalUnit = 'mcg';\n  }\n  // ADD THIS: IU to mcg conversion for vitamin D  \n  else if (finalUnit === 'IU' && nutrientKey === 'vitamin_d' && rdaInfo.unit === 'mcg') {\n    finalValue = finalValue * 0.025; // 1 IU = 0.025 mcg for vitamin D\n    finalUnit = 'mcg';\n  }\n  \n  console.log(`Converted ${nutrientKey}: ${intakeValue.value} ${intakeValue.unit} → ${finalValue} ${finalUnit}`);\n}\n        \n        completeIntakeData[nutrientKey] = {\n          value: finalValue,\n          unit: finalUnit\n        };\n      }\n      // Case 2: Just a number (assume RDA unit)\n      else if (typeof intakeValue === 'number') {\n        completeIntakeData[nutrientKey] = {\n          value: intakeValue,\n          unit: rdaInfo.unit\n        };\n      }\n      // Case 3: String number\n      else if (typeof intakeValue === 'string') {\n        const numValue = parseFloat(intakeValue) || 0;\n        completeIntakeData[nutrientKey] = {\n          value: numValue,\n          unit: rdaInfo.unit\n        };\n      }\n      // Case 4: Unexpected format\n      else {\n        console.warn(`Unexpected intake format for ${nutrientKey}:`, intakeValue);\n        completeIntakeData[nutrientKey] = {\n          value: 0,\n          unit: rdaInfo.unit\n        };\n      }\n    } else {\n      // Nutrient not found in intake data\n      completeIntakeData[nutrientKey] = {\n        value: 0,\n        unit: rdaInfo.unit\n      };\n    }\n  }\n  \n  console.log('Output completeIntakeData:', completeIntakeData);\n  console.log('=== END FIXED ensureCompleteNutrientData ===\\n');\n  \n  return completeIntakeData;\n}\n\nfunction MacronutrientChart({ userData, userIntake = {} }) {\nconst chartRef = useRef(null);\nconst [personalizedRDA, setPersonalizedRDA] = useState(null);\n\nconst calculatePersonalizedRDA = useCallback((userData) => {\n  const calculateBMI = (weight, height) => {\n    if (!weight || !height) return null;\n    return weight / Math.pow(height / 100, 2);\n  };\n  \n  const calculateTDEE = (userData) => {\n    const { age, gender, weight, height, activity_level } = userData;\n    \n    if (!age || !weight || !height) {\n      return 2000;\n    }\n    \n    let bmr;\n    if (gender === 'female') {\n      bmr = (10 * weight) + (6.25 * height) - (5 * age) - 161;\n    } else {\n      bmr = (10 * weight) + (6.25 * height) - (5 * age) + 5;\n    }\n    \n    const activityFactors = {\n      'sedentary': 1.2,\n      'light': 1.375,\n      'moderate': 1.55,\n      'very': 1.725,\n      'extreme': 1.9\n    };\n    \n    const activityMultiplier = activityFactors[activity_level] || 1.375;\n    let tdee = bmr * activityMultiplier;\n    \n    if (userData.covid_condition) {\n      tdee *= 1.07;\n    }\n    \n    const bmi = calculateBMI(weight, height);\n    if (bmi) {\n      if (bmi < 18.5) {\n        tdee *= 1.1;\n      } else if (bmi > 30) {\n        tdee *= 0.9;\n      }\n    }\n    \n    return Math.round(tdee);\n  };\n  \n  const calculateMacroDistribution = (totalCalories, userData) => {\n    if (!totalCalories) return null;\n    \n    let proteinPct = 0.25;\n    let carbsPct = 0.45;\n    let fatPct = 0.3;\n    \n    if (userData.covid_condition) {\n      proteinPct = 0.30;\n      carbsPct = 0.40;\n      fatPct = 0.30;\n    }\n    \n    const bmi = calculateBMI(userData.weight, userData.height);\n    if (bmi && bmi < 18.5) {\n      fatPct = 0.35;\n      carbsPct = 0.45;\n      proteinPct = 0.20;\n    }\n    \n    if (bmi && bmi > 30) {\n      proteinPct = 0.35;\n      carbsPct = 0.35;\n      fatPct = 0.30;\n    }\n    \n    if (userData.age > 65) {\n      proteinPct = Math.min(proteinPct + 0.05, 0.40);\n      const remaining = 1.0 - proteinPct;\n      carbsPct = remaining * (carbsPct / (carbsPct + fatPct));\n      fatPct = remaining * (fatPct / (carbsPct + fatPct));\n    }\n    \n    return {\n      protein: proteinPct,\n      carbs: carbsPct,\n      fat: fatPct\n    };\n  };\n\n  const totalCalories = calculateTDEE(userData);\n  const macroDistribution = calculateMacroDistribution(totalCalories, userData);\n  \n  const protein = (totalCalories * macroDistribution.protein / 4).toFixed(1);\n  const carbs = (totalCalories * macroDistribution.carbs / 4).toFixed(1);\n  const fat = (totalCalories * macroDistribution.fat / 9).toFixed(1);\n  \n  const covidNotes = {\n    protein: 'Increased to support immune function and tissue repair',\n    carbs: 'Focus on complex carbs with anti-inflammatory properties',\n    fat: 'Higher proportion of omega-3s recommended to reduce inflammation'\n  };\n  \n  return {\n    protein: { \n      value: parseFloat(protein),\n      covidNote: userData.covid_condition ? covidNotes.protein : null\n    },\n    carbs: { \n      value: parseFloat(carbs),\n      covidNote: userData.covid_condition ? covidNotes.carbs : null\n    },\n    fat: { \n      value: parseFloat(fat),\n      covidNote: userData.covid_condition ? covidNotes.fat : null\n    },\n    calories: {\n      value: totalCalories\n    }\n  };\n}, []);\n\nuseEffect(() => {\n  if (userData) {\n    const rda = calculatePersonalizedRDA(userData);\n    setPersonalizedRDA(rda);\n  }\n}, [userData, calculatePersonalizedRDA]);\n\nuseEffect(() => {\n  if (!chartRef.current || !personalizedRDA || !userIntake) return;\n  \n  d3.select(chartRef.current).selectAll(\"*\").remove();\n  \n  const margin = { top: 40, right: 180, bottom: 60, left: 70 };\n  const width = 700 - margin.left - margin.right;\n  const height = 350 - margin.top - margin.bottom;\n  \n  const svg = d3.select(chartRef.current)\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n  const macros = ['protein', 'carbs', 'fat'];\n  const data = [\n    { name: \"Current Intake\", ...userIntake },\n    { name: \"Recommended\", \n      protein: personalizedRDA.protein.value,\n      carbs: personalizedRDA.carbs.value,\n      fat: personalizedRDA.fat.value\n    }\n  ];\n  \n  const colors = {\n    protein: \"#22c55e\",\n    carbs: \"#3b82f6\",\n    fat: \"#f59e0b\"\n  };\n  \n  const x = d3.scaleBand()\n    .domain(data.map(d => d.name))\n    .range([0, width])\n    .padding(0.3);\n  \n  const maxValue = d3.max(data, d => {\n    return d.protein + d.carbs + d.fat;\n  });\n  \n  const y = d3.scaleLinear()\n    .domain([0, maxValue * 1.1])\n    .range([height, 0]);\n  \n  svg.append(\"g\")\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(d3.axisBottom(x))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"12px\")\n    .attr(\"font-weight\", d => d === \"Recommended\" ? \"bold\" : \"normal\");\n  \n  svg.append(\"g\")\n    .call(d3.axisLeft(y).ticks(5))\n    .selectAll(\"text\")\n    .attr(\"font-size\", \"12px\");\n  \n  svg.append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", -margin.left + 20)\n    .attr(\"x\", -height / 2)\n    .attr(\"font-size\", \"14px\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"fill\", \"#666\")\n    .text(\"Grams\");\n  \n  const currentDate = new Date();\n  const formattedDate = currentDate.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  });\n  \n  svg.append(\"text\")\n    .attr(\"x\", width / 2)\n    .attr(\"y\", -margin.top / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-size\", \"16px\")\n    .attr(\"font-weight\", \"bold\")\n    .attr(\"fill\", \"#333\")\n    .text(`Long COVID Macronutrient Analysis - ${formattedDate}`);\n  \n  data.forEach(d => {\n    let y0 = 0;\n    d.stackedData = macros.map(nutrient => {\n      return {\n        nutrient,\n        y0,\n        y1: y0 += (d[nutrient] || 0)\n      };\n    });\n  });\n  \n  const tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .attr(\"class\", \"d3-tooltip\")\n    .style(\"position\", \"absolute\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"1px solid #ddd\")\n    .style(\"border-radius\", \"4px\")\n    .style(\"padding\", \"8px\")\n    .style(\"font-size\", \"12px\")\n    .style(\"pointer-events\", \"none\")\n    .style(\"opacity\", 0)\n    .style(\"box-shadow\", \"0 2px 4px rgba(0,0,0,0.1)\")\n    .style(\"z-index\", 100);\n  \n  const groups = svg.selectAll(\".bar-group\")\n    .data(data)\n    .join(\"g\")\n    .attr(\"class\", \"bar-group\")\n    .attr(\"transform\", d => `translate(${x(d.name)},0)`);\n  \n  groups.selectAll(\"rect\")\n    .data(d => d.stackedData)\n    .join(\"rect\")\n    .attr(\"width\", x.bandwidth())\n    .attr(\"y\", d => y(d.y1))\n    .attr(\"height\", d => y(d.y0) - y(d.y1))\n    .attr(\"fill\", d => colors[d.nutrient])\n    .attr(\"stroke\", \"white\")\n    .attr(\"stroke-width\", 1)\n    .on(\"mouseover\", function(event, d) {\n      const parentData = d3.select(this.parentNode).datum();\n      const amount = parentData[d.nutrient].toFixed(1);\n      const percentage = ((parentData[d.nutrient] / (parentData.protein + parentData.carbs + parentData.fat)) * 100).toFixed(1);\n      \n      const caloriesPerGram = d.nutrient === 'fat' ? 9 : 4;\n      const calories = (parentData[d.nutrient] * caloriesPerGram).toFixed(0);\n      \n      const covidNote = parentData.name === \"Recommended\" && \n                      personalizedRDA[d.nutrient].covidNote ? \n                      `<br><span style=\"color:#6366f1;font-style:italic\">${personalizedRDA[d.nutrient].covidNote}</span>` : '';\n      \n      tooltip\n        .style(\"opacity\", 1)\n        .html(`\n          <div style=\"font-weight:bold;text-transform:capitalize;color:${colors[d.nutrient]}\">${d.nutrient}</div>\n          <div style=\"margin:4px 0\">\n            <b>Amount:</b> ${amount}g\n            <br><b>Percentage:</b> ${percentage}%\n            <br><b>Calories:</b> ${calories} kcal\n            ${covidNote}\n          </div>\n        `)\n        .style(\"left\", (event.pageX + 10) + \"px\")\n        .style(\"top\", (event.pageY - 28) + \"px\");\n        \n      d3.select(this)\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 2);\n    })\n    .on(\"mouseout\", function() {\n      tooltip.style(\"opacity\", 0);\n      d3.select(this)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", 1);\n    });\n  \n  const legend = svg.append(\"g\")\n    .attr(\"class\", \"legend\")\n    .attr(\"transform\", `translate(${width + 20}, 0)`);\n  \n  macros.forEach((nutrient, i) => {\n    const legendRow = legend.append(\"g\")\n      .attr(\"transform\", `translate(0, ${i * 25})`);\n      \n    legendRow.append(\"rect\")\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"fill\", colors[nutrient]);\n      \n    legendRow.append(\"text\")\n      .attr(\"x\", 24)\n      .attr(\"y\", 12)\n      .attr(\"text-anchor\", \"start\")\n      .style(\"text-transform\", \"capitalize\")\n      .style(\"font-size\", \"14px\")\n      .text(nutrient);\n  });\n  \n  if (userData?.covid_condition) {\n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", height + 40)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-style\", \"italic\")\n      .attr(\"fill\", \"#6366f1\")\n      .text(\"Note: RDA values adjusted for Long COVID recovery needs\");\n  }\n  \n  const calculateCalories = (data) => {\n    return (data.protein * 4 + data.carbs * 4 + data.fat * 9).toFixed(0);\n  };\n  \n  const calorieInfo = svg.append(\"g\")\n    .attr(\"class\", \"calorie-info\")\n    .attr(\"transform\", `translate(${width + 20}, ${macros.length * 25 + 20})`);\n    \n  calorieInfo.append(\"text\")\n    .attr(\"font-size\", \"14px\")\n    .attr(\"font-weight\", \"bold\")\n    .text(\"Total Calories:\");\n    \n  calorieInfo.append(\"text\")\n    .attr(\"y\", 25)\n    .attr(\"font-size\", \"14px\")\n    .text(`Intake: ${calculateCalories(userIntake)} kcal`);\n    \n  calorieInfo.append(\"text\")\n    .attr(\"y\", 50)\n    .attr(\"font-size\", \"14px\")\n    .text(`Recommended: ${personalizedRDA.calories.value.toFixed(0)} kcal`);\n  \n  return () => {\n    d3.select(\".d3-tooltip\").remove();\n  };\n}, [chartRef, personalizedRDA, userIntake, userData]);\n\nreturn (\n  <div className=\"w-full\">\n    <div \n      ref={chartRef} \n      className=\"macro-chart mx-auto overflow-visible\"\n      style={{ minHeight: \"350px\" }}\n    ></div>\n  </div>\n);\n}\n\n// Updated EfficiencyChart in FoodTrackerAnalysis.js\nfunction EfficiencyChart({ data, userData, foodDatabase }) {\n  const chartRef = useRef(null);\n  const [processedData, setProcessedData] = useState([]);\n\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n    \n    // FIXED: Use proper date comparison without timezone issues\n    const today = new Date();\n    const oneWeekAgo = new Date();\n    oneWeekAgo.setDate(today.getDate() - 7);\n    const oneWeekAgoString = formatDateForComparison(oneWeekAgo);\n    \n    const lastWeekData = data.filter(meal => {\n      try {\n        return isSameOrAfter(meal.date, oneWeekAgoString);\n      } catch (err) {\n        console.warn('Error parsing date:', meal.date);\n        return false;\n      }\n    });\n    \n    const updatedData = lastWeekData.map((meal, index) => {\n      try {\n        // ALWAYS recalculate efficiency using the enhanced function for consistency\n        console.log(`Calculating efficiency for ${meal.name} using enhanced function`);\n        const efficiency = calculateFoodEfficiency(meal, userData);\n        \n        // Fallback to stored efficiency if calculation fails\n        const finalEfficiency = (efficiency && efficiency > 0) ? efficiency : (meal.efficiency || meal.metabolicEfficiency || 80);\n        \n        console.log(`Final efficiency for ${meal.name}: ${finalEfficiency}`);\n        \n        return {\n          ...meal,\n          originalEfficiency: meal.efficiency || meal.metabolicEfficiency || 80,\n          efficiency: finalEfficiency,\n          actualEnergy: Math.round(meal.calories * (finalEfficiency / 100)),\n          wastedEnergy: Math.round(meal.calories * ((100 - finalEfficiency) / 100))\n        };\n      } catch (err) {\n        console.warn(`Error processing meal ${index}:`, err);\n        const fallbackEfficiency = meal.efficiency || meal.metabolicEfficiency || 80;\n        return {\n          ...meal,\n          efficiency: fallbackEfficiency,\n          actualEnergy: Math.round(meal.calories * (fallbackEfficiency / 100)),\n          wastedEnergy: Math.round(meal.calories * ((100 - fallbackEfficiency) / 100))\n        };\n      }\n    });\n    \n    const filteredData = updatedData.filter(meal => \n      meal.mealType !== \"Pre-workout\" && meal.mealType !== \"Post-workout\"\n    );\n    \n    console.log('ProcessedData with consistent efficiency:', filteredData);\n    setProcessedData(filteredData);\n  }, [data, userData, foodDatabase]);\n\n  useEffect(() => {\n    if (!chartRef.current || !processedData || processedData.length === 0) return;\n    \n    d3.select(chartRef.current).selectAll(\"*\").remove();\n    \n    const margin = { top: 60, right: 20, bottom: 50, left: 50 };\n    const width = 900 - margin.left - margin.right;\n    const height = 450 - margin.top - margin.bottom;\n    \n    const svg = d3.select(chartRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", -30)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"18px\")\n      .style(\"font-weight\", \"bold\")\n      .text(\"Enhanced Metabolic Efficiency Chart\");\n      \n    svg.append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", -10)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"14px\")\n      .style(\"font-style\", \"italic\")\n      .text(\"Optimized for Long COVID energy management\");\n    \n    const tooltip = d3.select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"chart-tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background-color\", \"white\")\n      .style(\"border\", \"1px solid #ddd\")\n      .style(\"border-radius\", \"5px\")\n      .style(\"padding\", \"12px\")\n      .style(\"font-size\", \"14px\")\n      .style(\"box-shadow\", \"0 3px 14px rgba(0,0,0,0.25)\")\n      .style(\"z-index\", \"10\")\n      .style(\"max-width\", \"300px\");\n    \n    // Generate date range without timezone issues\n    const allDatesInRange = [];\n    const today = new Date();\n    for (let i = 6; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(today.getDate() - i);\n      const formattedDate = formatDateForComparison(date);\n      allDatesInRange.push(formattedDate);\n    }\n    \n    console.log('=== ENHANCED CHART DEBUG ===');\n    console.log('processedData:', processedData);\n    \n    const combinedData = [];\n    const groupedByDate = d3.group(processedData, d => d.date);\n    \n    // Process meal types in the correct order\n    const uniqueMealTypes = ['Breakfast', 'Morning Snack', 'Lunch', 'Afternoon Snack', 'Dinner', 'Late Night Snack'];\n    \n    allDatesInRange.forEach(date => {\n      const dateData = groupedByDate.get(date) || [];\n      \n      if (dateData.length > 0) {\n        const mealsByType = d3.group(dateData, d => d.mealType);\n      \n        // Process meal types in the defined order\n        uniqueMealTypes.forEach(mealType => {\n          const meals = mealsByType.get(mealType);\n          if (meals && meals.length > 0) {\n            const totalCalories = d3.sum(meals, d => d.calories);\n            \n            // Calculate weighted efficiency using the enhanced efficiency values\n            const weightedEfficiency = meals.reduce((acc, meal) => {\n              const mealEfficiency = meal.efficiency || 0;\n              const calorieWeight = totalCalories > 0 ? meal.calories / totalCalories : 0;\n              console.log(`Enhanced: ${meal.name}, efficiency: ${mealEfficiency}, calories: ${meal.calories}, weight: ${calorieWeight}`);\n              return acc + (mealEfficiency * calorieWeight);\n            }, 0);\n            \n            console.log(`Enhanced combined efficiency for ${mealType} on ${date}: ${weightedEfficiency}`);\n            \n            const totalActualEnergy = d3.sum(meals, d => d.actualEnergy || (d.calories * (d.efficiency / 100)));\n            const totalWastedEnergy = totalCalories - totalActualEnergy;\n            \n            combinedData.push({\n              date: date,\n              mealType: mealType,\n              time: meals[0].time,\n              name: `${mealType} (${meals.length} items)`,\n              efficiency: Math.round(weightedEfficiency),\n              calories: totalCalories,\n              actualEnergy: totalActualEnergy,\n              wastedEnergy: totalWastedEnergy,\n              originalMeals: meals,\n              mealOrder: uniqueMealTypes.indexOf(mealType) // Add explicit order\n            });\n          }\n        });\n      }\n    });\n    \n    console.log('Enhanced Final combinedData:', combinedData);\n    console.log('=== END ENHANCED CHART DEBUG ===');\n    \n    // Sort chronologically: first by date, then by meal order\n    const chronologicalData = [...combinedData].sort((a, b) => {\n      if (a.date !== b.date) return a.date.localeCompare(b.date);\n      return a.mealOrder - b.mealOrder;\n    });\n\n    const xOuter = d3.scaleBand()\n      .domain(allDatesInRange)\n      .range([0, width])\n      .padding(0.2);\n    \n    const xInner = d3.scaleBand()\n      .domain(uniqueMealTypes)\n      .range([0, xOuter.bandwidth()])\n      .padding(0.1);\n    \n    const formatDate = date => {\n      const parts = date.split('-');\n      return `${parseInt(parts[1])}/${parseInt(parts[2])}`;\n    };\n    \n    const maxCalories = d3.max(combinedData, d => d.calories) || 1000;\n    const y = d3.scaleLinear()\n      .domain([0, maxCalories])\n      .range([height, 0]);\n\n    const yEff = d3.scaleLinear()\n      .domain([0, 100])\n      .range([height, 0]);\n\n    // Create axes\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(d3.axisBottom(xOuter).tickFormat(formatDate))\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-45)\");\n\n    svg.append(\"g\")\n      .call(d3.axisLeft(y))\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", -50)\n      .attr(\"x\", -height / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#000\")\n      .text(\"Calories\");\n\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(${width}, 0)`)\n      .call(d3.axisRight(yEff))\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 50)\n      .attr(\"x\", -height / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#000\")\n      .text(\"Enhanced Efficiency (%)\");\n\n    // Color scheme for meal types\n    const mealColors = {\n   \"Breakfast\": \"#DC2626\",        // Red - easily distinguishable\n  \"Morning Snack\": \"#EA580C\",    // Red-Orange - clear variation\n  \"Lunch\": \"#16A34A\",            // Green - strong contrast from red\n  \"Afternoon Snack\": \"#0891B2\",  // Blue - distinct from green\n  \"Dinner\": \"#7C3AED\",           // Purple - clear from blue\n  \"Late Night Snack\": \"#BE185D\"  // Pink - distinct endpoint\n    \n    };\n\n    // Add stacked bars\n    combinedData.forEach(meal => {\n      const mealColor = mealColors[meal.mealType] || \"#999999\";\n      const barX = xOuter(meal.date) + xInner(meal.mealType);\n      const barWidth = xInner.bandwidth();\n      \n      // Actual energy bar\n      svg.append(\"rect\")\n        .attr(\"class\", \"actual-energy-bar\")\n        .attr(\"x\", barX)\n        .attr(\"y\", y(meal.actualEnergy))\n        .attr(\"width\", barWidth)\n        .attr(\"height\", height - y(meal.actualEnergy))\n        .attr(\"fill\", mealColor)\n        .attr(\"opacity\", 0.9)\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .on(\"mouseover\", function(event) {\n          d3.select(this).attr(\"opacity\", 0.7);\n          tooltip\n            .style(\"visibility\", \"visible\")\n            .html(`\n              <div style=\"font-weight:bold;margin-bottom:10px;font-size:15px;\">${meal.date} - ${meal.mealType}</div>\n              <div style=\"margin-bottom:6px;\">Total Calories: ${Math.round(meal.calories)}</div>\n              <div style=\"margin-bottom:6px;\"><strong>Enhanced Efficiency: ${meal.efficiency}%</strong></div>\n              <div style=\"margin-bottom:6px;\">Usable Energy: ${Math.round(meal.actualEnergy)} cal</div>\n              <div style=\"margin-bottom:12px;\">Energy Lost: ${Math.round(meal.wastedEnergy)} cal</div>\n              <div style=\"font-weight:bold;margin-bottom:5px;\">Individual Items:</div>\n              <ul style=\"margin-top:0;padding-left:20px;\">\n                ${meal.originalMeals.map(item => `\n                  <li>${item.name} - ${item.calories} cal (${Math.round(item.efficiency)}% efficient)</li>\n                `).join('')}\n              </ul>\n            `)\n            .style(\"left\", `${event.pageX + 15}px`)\n            .style(\"top\", `${event.pageY - 10}px`);\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this).attr(\"opacity\", 0.9);\n          tooltip.style(\"visibility\", \"hidden\");\n        });\n      \n      // Potential energy bar (wasted energy)\n      svg.append(\"rect\")\n        .attr(\"class\", \"potential-energy-bar\")\n        .attr(\"x\", barX)\n        .attr(\"y\", y(meal.calories))\n        .attr(\"width\", barWidth)\n        .attr(\"height\", y(meal.actualEnergy) - y(meal.calories))\n        .attr(\"fill\", mealColor)\n        .attr(\"opacity\", 0.3)\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"stroke-dasharray\", \"3,3\");\n    });\n\n    if (chronologicalData.length > 0) {\n      // Calculate x positions for the line based on the actual bar positions\n      const lineData = chronologicalData.map((meal, index) => {\n        const barX = xOuter(meal.date) + xInner(meal.mealType);\n        const barWidth = xInner.bandwidth();\n        const barCenterX = barX + (barWidth / 2);\n        \n        return {\n          ...meal,\n          xPos: barCenterX,\n          chronologicalIndex: index\n        };\n      });\n\n      // Sort lineData by x position to ensure left-to-right flow\n      const sortedLineData = [...lineData].sort((a, b) => a.xPos - b.xPos);\n      \n      const lineGenerator = d3.line()\n        .x(d => d.xPos)\n        .y(d => yEff(d.efficiency))\n        .defined(d => d.efficiency != null && !isNaN(d.efficiency))\n        .curve(d3.curveMonotoneX);\n      \n      svg.append(\"path\")\n        .datum(sortedLineData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"grey\")\n        .attr(\"stroke-width\", 3)\n        .attr(\"d\", lineGenerator);\n      \n      // Add efficiency points\n      svg.selectAll(\".efficiency-point\")\n        .data(sortedLineData)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"efficiency-point\")\n        .attr(\"cx\", d => d.xPos)\n        .attr(\"cy\", d => yEff(d.efficiency))\n        .attr(\"r\", 5)\n        .attr(\"fill\", \"grey\")\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 1)\n        .on(\"mouseover\", function(event, d) {\n          d3.select(this).attr(\"r\", 8);\n          tooltip\n            .style(\"visibility\", \"visible\")\n            .html(`\n              <div style=\"font-weight:bold;font-size:16px;\">${d.mealType} - ${d.time}</div>\n              <div style=\"font-weight:bold;font-size:14px;\">${d.date}</div>\n              <div>Enhanced Efficiency: <strong>${d.efficiency}%</strong></div>\n              <div style=\"margin-top:6px\">Calculated using enhanced Long COVID algorithms</div>\n            `)\n            .style(\"left\", `${event.pageX + 15}px`)\n            .style(\"top\", `${event.pageY - 10}px`);\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this).attr(\"r\", 5);\n          tooltip.style(\"visibility\", \"hidden\");\n        });\n    }\n\n    // Add legend\n    const legendY = height + 100;\n    \n    svg.append(\"line\")\n      .attr(\"x1\", 10)\n      .attr(\"x2\", 40)\n      .attr(\"y1\", legendY)\n      .attr(\"y2\", legendY)\n      .attr(\"stroke\", \"grey\")\n      .attr(\"stroke-width\", 3);\n    \n    svg.append(\"circle\")\n      .attr(\"cx\", 25)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 5)\n      .attr(\"fill\", \"grey\")\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.append(\"text\")\n      .attr(\"x\", 50)\n      .attr(\"y\", legendY + 4)\n      .style(\"font-size\", \"12px\")\n      .text(\"Enhanced Efficiency (%)\");\n    \n    const legendData = [\n      { label: \"Usable Energy\", color: \"#DC2626\", opacity: 0.9 },\n      { label: \"Energy Lost\", color: \"#DC2626\", opacity: 0.3 }\n    ];\n    \n    svg.selectAll(\".legend-rect\")\n      .data(legendData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", 200)\n      .attr(\"y\", (d, i) => legendY - 10 + i * 20)\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"fill\", d => d.color)\n      .attr(\"opacity\", d => d.opacity)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.selectAll(\".legend-text\")\n      .data(legendData)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", 225)\n      .attr(\"y\", (d, i) => legendY + 2 + i * 20)\n      .style(\"font-size\", \"12px\")\n      .text(d => d.label);\n    \n    // Meal type legend\n    const mealTypeData = Object.entries(mealColors).map(([type, color]) => ({ type, color }));\n    \n    svg.selectAll(\".meal-type-rect\")\n      .data(mealTypeData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => 400 + Math.floor(i/3) * 140)\n      .attr(\"y\", (d, i) => legendY - 10 + (i % 3) * 20)\n      .attr(\"width\", 15)\n      .attr(\"height\", 15)\n      .attr(\"fill\", d => d.color)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", 1);\n    \n    svg.selectAll(\".meal-type-text\")\n      .data(mealTypeData)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", (d, i) => 425 + Math.floor(i/3) * 140)\n      .attr(\"y\", (d, i) => legendY + 2 + (i % 3) * 20)\n      .style(\"font-size\", \"12px\")\n      .text(d => d.type);\n\n    return () => {\n      d3.select(\".chart-tooltip\").remove();\n    };\n  }, [chartRef, processedData, userData]);\n\n  if (!processedData || processedData.length === 0) {\n    return (\n      <div className=\"chart-container\" style={{ width: '100%', minHeight: '300px' }}>\n        <div ref={chartRef} className=\"efficiency-chart\">\n          <div className=\"placeholder\">\n            <p>No meal data available for enhanced efficiency analysis.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ width: '100%', minHeight: '900px', display: 'flex', flexDirection: 'column' }}>\n      <div ref={chartRef} className=\"efficiency-chart\" style={{ \n        height: '600px', \n        width: '100%', \n        overflow: 'visible',\n        flexShrink: 0\n      }}></div>\n      \n      {/* Description section - now separate and guaranteed to be visible */}\n      <div style={{ \n        marginTop: '40px', \n        padding: '25px', \n        backgroundColor: '#f8f9fa', \n        borderRadius: '8px',\n        width: '100%',\n        boxSizing: 'border-box',\n        flexShrink: 0,\n        border: '1px solid #dee2e6'\n      }}>\n        <h4 style={{ \n          marginTop: '0', \n          marginBottom: '20px', \n          fontSize: '20px', \n          fontWeight: 'bold',\n          color: '#333'\n        }}>\n          Enhanced Metabolic Efficiency\n        </h4>\n        <p style={{ \n          marginBottom: '20px', \n          lineHeight: '1.6',\n          fontSize: '16px',\n          color: '#555'\n        }}>\n          This enhanced chart uses advanced algorithms that take into account Long COVID severity, meal timing, \n          macronutrient balance, and individual factors to provide more accurate efficiency calculations for \n          energy management. The efficiency line follows proper chronological order.\n        </p>\n        <div style={{ marginTop: '20px' }}>\n          <strong style={{ fontSize: '18px', color: '#333' }}>Enhanced Features:</strong>\n          <ul style={{ \n            marginTop: '15px', \n            paddingLeft: '30px', \n            lineHeight: '1.8',\n            fontSize: '15px',\n            color: '#555'\n          }}>\n            <li style={{ marginBottom: '8px' }}>Long COVID severity adjustments (metabolic efficiency factors)</li>\n            <li style={{ marginBottom: '8px' }}>Circadian rhythm timing optimization</li>\n            <li style={{ marginBottom: '8px' }}>Macronutrient balance scoring</li>\n            <li style={{ marginBottom: '8px' }}>Anti-inflammatory food benefits/cautions</li>\n            <li style={{ marginBottom: '8px' }}>Chronologically ordered efficiency tracking</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst baseRDAData10 = {\n  vitamin_a: {\n    value: 900,\n    unit: 'mcg',\n    femaleAdjust: 0.78,\n    description: \"Supports vision, immune function, and cell growth\"\n  },\n  vitamin_c: {\n    value: 90,\n    unit: 'mg',\n    femaleAdjust: 0.83,\n    description: \"Antioxidant that supports immune function and collagen production\"\n  },\n  vitamin_d: {\n    value: 15, // Changed from 600 UI to 15 mcg\n    unit: 'mcg',\n    femaleAdjust: 1.0,\n    description: \"Crucial for calcium absorption and bone health\"\n  },\n  vitamin_e: {\n    value: 15,\n    unit: 'mg',\n    femaleAdjust: 1.0,\n    description: \"Antioxidant that protects cells from damage\"\n  },\n  vitamin_b6: {\n    value: 1.3,\n    unit: 'mg',\n    femaleAdjust: 1.0,\n    description: \"Important for metabolism and brain development\"\n  },\n  vitamin_b12: {\n    value: 2.4,\n    unit: 'mcg',\n    femaleAdjust: 1.0,\n    description: \"Essential for nerve function and blood cell formation\"\n  },\n  folate: {\n    value: 400,\n    unit: 'mcg',\n    femaleAdjust: 1.0,\n    description: \"Critical for cell division and DNA synthesis\"\n  },\n  iron: {\n    value: 8,\n    unit: 'mg',\n    femaleAdjust: 2.25,\n    description: \"Essential for oxygen transport in the blood\"\n  },\n  calcium: {\n    value: 1000,\n    unit: 'mg',\n    femaleAdjust: 1.0,\n    description: \"Critical for bone health and muscle function\"\n  },\n  magnesium: {\n    value: 420,\n    unit: 'mg',\n    femaleAdjust: 0.76,\n    description: \"Involved in over 300 biochemical reactions in the body\"\n  },\n  zinc: {\n    value: 11,\n    unit: 'mg',\n    femaleAdjust: 0.73,\n    description: \"Important for immune function and wound healing\"\n  },\n  selenium: {\n    value: 55,\n    unit: 'mcg',\n    femaleAdjust: 1.0,\n    description: \"Antioxidant that helps protect cells from damage\"\n  },\n  copper: {\n    value: 0.9,\n    unit: 'mg',\n    femaleAdjust: 1.0,\n    description: \"Important for red blood cell formation and nerve function\"\n  },\n  vitamin_b1: {\n    value: 1.2,\n    unit: 'mg',\n    femaleAdjust: 0.92,\n    description: \"Essential for energy metabolism\"\n  },\n  vitamin_b2: {\n    value: 1.3,\n    unit: 'mg',\n    femaleAdjust: 0.85,\n    description: \"Important for energy production and cell function\"\n  },\n  vitamin_b3: {\n    value: 16,\n    unit: 'mg',\n    femaleAdjust: 0.875, // 14mg / 16mg = 0.875 for correct female adjustment\n    description: \"Helps convert food into energy\"\n  }\n};\n\nconst BulletChart = ({ data, maxPercent }) => {\nconst actualWidth = Math.min(100, (data.rawValue / data.rda) * 100);\nconst displayPercentage = Math.round((data.rawValue / data.rda) * 100);\nconst optimalWidth = Math.min(100, 100);\n\n// Debug: Log the actual data being passed to BulletChart\nconsole.log(`BulletChart Debug - ${data.name}:`, {\n  storedValue: data.value,\n  rawValue: data.rawValue,\n  rda: data.rda,\n  calculatedPercentage: (data.rawValue / data.rda) * 100,\n  displayPercentage: displayPercentage,\n  actualWidth: actualWidth,\n  shouldBeOptimal: data.value >= 100 || displayPercentage >= 100\n});\n\nconst getColor = (percent) => {\n  if (percent >= 100) return \"#4CAF50\";\n  if (percent >= 70) return \"#8BC34A\";\n  if (percent >= 50) return \"#FFC107\";\n  if (percent >= 30) return \"#FF9800\";\n  return \"#F44336\";\n};\n\nconst barColor = getColor(actualWidth);\n\nreturn (\n  <div className=\"bullet-chart\">\n    <div className=\"bullet-chart-header\">\n      <div className=\"bullet-chart-title\">\n        <span className=\"nutrient-name\">{data.name}</span>\n        {data.isAdjusted && (\n          <span className=\"adjusted-badge\">\n            Adjusted\n          </span>\n        )}\n      </div>\n      <div className=\"bullet-chart-values\">\n        {data.rawValue.toFixed(2)} / {data.rda} {data.unit}\n        <span className=\"bullet-chart-percentage\" style={{ color: barColor }}>\n          ({displayPercentage}%)\n        </span>\n      </div>\n    </div>\n    \n    <div className=\"bullet-chart-track\">\n      <div \n        className=\"threshold-marker\"\n        style={{ left: '70%' }}\n      ></div>\n      \n      <div \n        className=\"actual-value-bar\"\n        style={{ \n          width: `${actualWidth}%`, \n          backgroundColor: barColor \n        }}\n      ></div>\n      \n      <div \n        className=\"target-line\"\n        style={{ left: `${optimalWidth}%` }}\n      ></div>\n    </div>\n  </div>\n);\n};\n\nfunction MicronutrientChart({ data, userData }) {\n  const [userInfo, setUserInfo] = useState(userData || {});\n  const [chartData, setChartData] = useState([]);\n  const [allChartData, setAllChartData] = useState([]);\n  // FIXED: Use baseRDAData10 from the global scope for ensureCompleteNutrientData\n  const [nutrientIntake] = useState(data && Object.keys(data).length > 0 ? ensureCompleteNutrientData(data, baseRDAData10) : {});\n  const [personalizedRDA, setPersonalizedRDA] = useState({});\n  // eslint-disable-next-line no-unused-vars\n  const [displayMode, setDisplayMode] = useState('all');\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  // Helper function to get severity factor\n  const getSeverityFactor = useCallback((severity) => {\n    switch (severity?.toLowerCase()) {\n      case 'mild': return 1.1;\n      case 'moderate': return 1.3;\n      case 'severe': return 1.5;\n      case 'very severe': return 1.8;\n      default: return 1.0;\n    }\n  }, []);\n\n  // Helper function to standardize units for comparison\n  // eslint-disable-next-line no-unused-vars\n  const standardizeUnitValue = useCallback((value, fromUnit, toUnit) => {\n    if (fromUnit === toUnit) return value;\n\n    if (fromUnit === 'g' && toUnit === 'mg') return value * 1000;\n    if (fromUnit === 'mg' && toUnit === 'mcg') return value * 1000;\n    if (fromUnit === 'mcg' && toUnit === 'mg') return value * 0.001;\n    if (fromUnit === 'mg' && toUnit === 'g') return value * 0.001;\n\n    console.warn(`Unit conversion from ${fromUnit} to ${toUnit} not defined for value ${value}`);\n    return value;\n  }, []);\n\n  // Helper function to convert from IU units\n  // eslint-disable-next-line no-unused-vars\n  const convertFromIU = useCallback((nutrient, value, inputUnit) => {\n    if (inputUnit?.toUpperCase() !== 'IU') return value;\n\n    const conversionFactors = {\n      vitamin_a: 0.3,     // 1 IU = ~0.3 mcg RAE (approximation)\n      vitamin_d: 0.025,   // 1 IU = 0.025 mcg (40 IU = 1 mcg)\n      vitamin_e: 0.67     // 1 IU = 0.67 mg alpha-tocopherol\n    };\n\n    return value * (conversionFactors[nutrient] || 1);\n  }, []);\n\n  // FIXED: Helper function to process nutrient data into chart format\n  const processNutrientData = useCallback((intakeData, rdaData) => {\n    console.log('=== FIXED processNutrientData ===');\n    console.log('Processing', Object.keys(rdaData).length, 'nutrients');\n    \n    const processedNutrients = [];\n\n    for (const nutrientKey in rdaData) {\n      if (!rdaData.hasOwnProperty(nutrientKey)) continue;\n      \n      const rdaInfo = rdaData[nutrientKey];\n      \n      // Validate RDA info\n      if (!rdaInfo || rdaInfo.value === undefined || !rdaInfo.unit) {\n        console.warn(`Skipping ${nutrientKey}: Invalid RDA info`, rdaInfo);\n        continue;\n      }\n\n      const intakeDetails = intakeData[nutrientKey];\n      let intakeValue = 0;\n      \n      if (intakeDetails && typeof intakeDetails === 'object' && intakeDetails.value !== undefined) {\n        intakeValue = parseFloat(intakeDetails.value) || 0;\n      }\n      \n      // Calculate percentage of RDA\n      const percentOfRDA = rdaInfo.value > 0 ? (intakeValue / rdaInfo.value) * 100 : 0;\n      \n      // FIXED: Validate percentage is reasonable\n      if (percentOfRDA > 10000) {\n        console.warn(`⚠️ Extremely high percentage for ${nutrientKey}: ${percentOfRDA}% - possible unit error`);\n      }\n      \n      // Format name and determine category\n      const formattedName = nutrientKey.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n      const category = nutrientKey.includes('vitamin') ? 'vitamins' : 'minerals';\n\n      const processedNutrient = {\n        key: nutrientKey,\n        name: formattedName,\n        value: Math.round(percentOfRDA), // Round to avoid floating point precision issues\n        rawValue: intakeValue,\n        unit: rdaInfo.unit,\n        rda: rdaInfo.value,\n        rdaUnit: rdaInfo.unit,\n        isAdjustedRDA: rdaInfo.isAdjusted || false,\n        percentOfRDA: Math.round(percentOfRDA), // Keep both for compatibility\n        category: category,\n      };\n      \n      console.log(`✅ ${formattedName}: ${intakeValue}${rdaInfo.unit} / ${rdaInfo.value}${rdaInfo.unit} = ${percentOfRDA.toFixed(1)}%`);\n      \n      processedNutrients.push(processedNutrient);\n    }\n\n    // Sort by percentage (low to high for easier identification of deficiencies)\n    const sortedNutrients = processedNutrients.sort((a, b) => a.percentOfRDA - b.percentOfRDA);\n    \n    console.log('=== PROCESSING SUMMARY ===');\n    console.log('Total nutrients processed:', sortedNutrients.length);\n    console.log('Deficient (<70%):', sortedNutrients.filter(n => n.value < 70).length);\n    console.log('Optimal (≥100%):', sortedNutrients.filter(n => n.value >= 100).length);\n    \n    // Debug: Show nutrients that are >= 100%\n    const optimalNutrients = sortedNutrients.filter(n => n.value >= 100);\n    console.log('Optimal nutrients:', optimalNutrients.map(n => `${n.name}: ${n.value}%`));\n    \n    console.log('=== END FIXED processNutrientData ===\\n');\n    \n    return sortedNutrients;\n  }, []);\n\n  const applyFilters = useCallback((dataToFilter) => {\n    let filteredData = [...dataToFilter];\n\n    if (selectedCategory !== 'all') {\n      filteredData = filteredData.filter(item => item.category === selectedCategory);\n    }\n\n    console.log('=== FILTER DEBUG ===');\n    console.log('Before filtering:', filteredData.length, 'items');\n    console.log('Display mode:', displayMode);\n    console.log('Sample data values:', filteredData.slice(0, 3).map(item => `${item.name}: ${item.value}%`));\n    \n    if (displayMode === 'deficient') {\n      filteredData = filteredData.filter(item => item.value < 70);\n      filteredData.sort((a, b) => a.value - b.value);\n      console.log('After deficient filter:', filteredData.length, 'items');\n    } else if (displayMode === 'optimal') {\n      const beforeOptimal = filteredData.length;\n      filteredData = filteredData.filter(item => {\n        console.log(`Checking ${item.name}: ${item.value}% >= 100? ${item.value >= 100}`);\n        return item.value >= 100;\n      });\n      console.log(`Optimal filter: ${beforeOptimal} → ${filteredData.length} items`);\n      console.log('Optimal items:', filteredData.map(n => `${n.name}: ${n.value}%`));\n      filteredData.sort((a, b) => b.value - a.value);\n    } else {\n      filteredData.sort((a, b) => a.value - b.value);\n    }\n\n    console.log('Final filtered data:', filteredData.length, 'items');\n    console.log('=== END FILTER DEBUG ===');\n\n    setChartData(filteredData);\n  }, [displayMode, selectedCategory]);\n\n  const calculatePersonalizedRDA = useCallback((baseRDAData_, userData) => {\n    if (!baseRDAData_ || Object.keys(baseRDAData_).length === 0) {\n      console.error('baseRDAData_ is empty or invalid!');\n      return {};\n    }\n\n    const personalRDA = JSON.parse(JSON.stringify(baseRDAData_));\n\n    Object.keys(personalRDA).forEach(nutrient => {\n      if (!personalRDA[nutrient] || typeof personalRDA[nutrient].value !== 'number') {\n        console.error(`Invalid data structure for ${nutrient} in baseRDAData_ or copy:`, personalRDA[nutrient]);\n        personalRDA[nutrient] = { value: 0, unit: personalRDA[nutrient]?.unit || 'mg', isAdjusted: false };\n        return;\n      }\n\n      let adjustedValue = personalRDA[nutrient].value;\n\n      // Apply gender adjustment\n      if (userData?.gender && userData.gender.toLowerCase() === 'female') {\n        const femaleAdjust = personalRDA[nutrient].femaleAdjust || 1.0;\n        adjustedValue *= femaleAdjust;\n      }\n\n      // Apply age adjustments\n      if (userData?.age) {\n        let ageMultiplier = 1.0;\n        if (userData.age >= 70) {\n          if (nutrient === 'vitamin_d') ageMultiplier = 1.2;\n          if (nutrient === 'vitamin_b12') ageMultiplier = 1.1;\n          if (nutrient === 'calcium') ageMultiplier = 1.15;\n        } else if (userData.age >= 50) {\n          if (nutrient === 'vitamin_d') ageMultiplier = 1.1;\n          if (nutrient === 'vitamin_b12') ageMultiplier = 1.05;\n        } else if (userData.age <= 18) {\n          if (nutrient === 'calcium') ageMultiplier = 1.15;\n          if (nutrient === 'iron') ageMultiplier = 1.1;\n        }\n\n        if (ageMultiplier !== 1.0) {\n          adjustedValue *= ageMultiplier;\n        }\n      }\n\n      // Apply COVID severity adjustments\n      const severity = userData?.covid_severity || userData?.longCovidSeverity;\n      const hasCovidCondition = severity && severity !== 'None' && severity !== null && severity !== undefined;\n\n      if (hasCovidCondition) {\n        const severityFactor = getSeverityFactor(severity);\n\n        if (['vitamin_c', 'vitamin_d', 'zinc', 'selenium'].includes(nutrient)) {\n          const covidMultiplier = Math.min(severityFactor * 1.5, 2.5);\n          adjustedValue *= covidMultiplier;\n        } else if (['vitamin_a', 'vitamin_e', 'vitamin_b6', 'vitamin_b12', 'folate', 'iron'].includes(nutrient)) {\n          const covidMultiplier = Math.min(severityFactor * 1.3, 2.0);\n          adjustedValue *= covidMultiplier;\n        } else if (['magnesium', 'copper', 'vitamin_b1', 'vitamin_b2', 'vitamin_b3'].includes(nutrient)) {\n          const covidMultiplier = Math.min(severityFactor * 1.1, 1.5);\n          adjustedValue *= covidMultiplier;\n        }\n      }\n\n      // Final safety check\n      if (isNaN(adjustedValue) || !isFinite(adjustedValue) || adjustedValue <= 0) {\n        console.error(`Invalid final value for ${nutrient}: ${adjustedValue}, resetting to base`);\n        adjustedValue = personalRDA[nutrient].value;\n      }\n\n      const roundedValue = Math.round(adjustedValue * 10) / 10;\n\n      personalRDA[nutrient] = {\n        ...personalRDA[nutrient],\n        value: roundedValue,\n        isAdjusted: roundedValue !== baseRDAData_[nutrient].value\n      };\n    });\n\n    return personalRDA;\n  }, [getSeverityFactor]);\n\n  // Get nutrient status label and color\n  const getNutrientStatus = (percentValue) => {\n    if (percentValue >= 100) return { label: \"Optimal\", color: \"#4CAF50\" };\n    if (percentValue >= 70) return { label: \"Good\", color: \"#8BC34A\" };\n    if (percentValue >= 50) return { label: \"Moderate\", color: \"#FFC107\" };\n    if (percentValue >= 30) return { label: \"Low\", color: \"#FF9800\" };\n    return { label: \"Very Low\", color: \"#F44336\" };\n  };\n\n  // Helper function to provide nutrient-specific info\n  const getNutrientInfo = (nutrientName) => {\n    const nutrientInfoMap = {};\n    for (const key in baseRDAData10) {\n        nutrientInfoMap[key.replace(/_/g, ' ')] = baseRDAData10[key].description;\n    }\n\n    const exactMatch = nutrientInfoMap[nutrientName.toLowerCase()];\n    if (exactMatch) return exactMatch;\n\n    for (const key in nutrientInfoMap) {\n      if (nutrientName.toLowerCase().includes(key)) {\n        return nutrientInfoMap[key];\n      }\n    }\n    return '';\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const timer = setTimeout(() => {\n      try {\n        const calculatedRDA = calculatePersonalizedRDA(baseRDAData10, userInfo);\n\n        if (!calculatedRDA || Object.keys(calculatedRDA).length === 0) {\n          console.error('Failed to calculate RDA values');\n          setIsLoading(false);\n          return;\n        }\n\n        setPersonalizedRDA(calculatedRDA);\n\n        const processedAllData = processNutrientData(nutrientIntake, calculatedRDA);\n        \n        // Debug: Log the processed data before setting state\n        console.log('=== PROCESSED DATA DEBUG ===');\n        console.log('Total processed nutrients:', processedAllData.length);\n        processedAllData.forEach(nutrient => {\n          console.log(`${nutrient.name}: value=${nutrient.value}%, rawValue=${nutrient.rawValue}, rda=${nutrient.rda}`);\n        });\n        \n        const optimalCount = processedAllData.filter(n => n.value >= 100).length;\n        console.log('Optimal count (≥100%):', optimalCount);\n        console.log('=== END PROCESSED DATA DEBUG ===');\n        \n        setAllChartData(processedAllData);\n\n        applyFilters(processedAllData);\n\n      } catch (error) {\n        console.error('Error in MicronutrientChart useEffect:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [userInfo, nutrientIntake, calculatePersonalizedRDA, processNutrientData, applyFilters]);\n\n  useEffect(() => {\n    if (allChartData.length > 0) {\n      applyFilters(allChartData);\n    }\n  }, [displayMode, selectedCategory, allChartData, applyFilters]);\n\n  const getCovidSeverityClass = (severity) => {\n    switch(severity?.toLowerCase()) {\n      case 'mild': return 'covid-severity-mild';\n      case 'moderate': return 'covid-severity-moderate';\n      case 'severe': return 'covid-severity-severe';\n      case 'very severe': return 'covid-severity-very-severe';\n      default: return 'covid-severity-unknown';\n    }\n  };\n\n  const toggleCovidSeverity = () => {\n    const severities = [null, 'mild', 'moderate', 'severe', 'very severe'];\n    const currentSeverity = userInfo.covid_severity?.toLowerCase() || userInfo.longCovidSeverity?.toLowerCase() || null;\n    const currentIndex = severities.indexOf(currentSeverity);\n    const nextIndex = (currentIndex + 1) % severities.length;\n    const newSeverity = severities[nextIndex];\n\n    const updatedUserInfo = {\n      ...userInfo,\n      covid_severity: newSeverity,\n      longCovidSeverity: newSeverity,\n      hasLongCovid: newSeverity !== null\n    };\n\n    if (newSeverity === null) {\n      delete updatedUserInfo.covid_severity;\n      delete updatedUserInfo.longCovidSeverity;\n      updatedUserInfo.hasLongCovid = false;\n    }\n\n    setUserInfo(updatedUserInfo);\n  };\n\n  const getCurrentCovidSeverity = () => {\n    const severity = userInfo.covid_severity || userInfo.longCovidSeverity;\n    if (!severity || severity === null || severity === 'None') return 'None';\n    return severity.charAt(0).toUpperCase() + severity.slice(1);\n  };\n\n  const changeDisplayMode = (mode) => {\n    setDisplayMode(mode);\n  };\n\n  const changeCategory = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const getFilterDescription = () => {\n    const displayPart = displayMode === 'deficient' ? \"below 70% RDA\" : displayMode === 'optimal' ? \"at 100%+ RDA\" : \"\";\n    const categoryPart = selectedCategory === 'vitamins' ? \"vitamins\" : selectedCategory === 'minerals' ? \"minerals\" : \"nutrients\";\n\n    let description = categoryPart;\n    if (displayPart) {\n        description += ` ${displayPart}`;\n    }\n    return description.trim();\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          <p className=\"loading-text\">Loading personalized micronutrient data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const deficientCount = allChartData.filter(item => item.value < 70).length;\n\n  // Show empty state if no user data AND no meal data\n  if ((!data || Object.keys(data).length === 0) && (!userData || Object.keys(userData).length === 0)) {\n    return (\n      <div className=\"micronutrient-chart-container\">\n        <div className=\"chart-card\">\n          <div className=\"chart-header\">\n            <h2 className=\"chart-title\">Micronutrient Status</h2>\n          </div>\n          <div className=\"empty-state\">\n            <div className=\"empty-state-icon\">📊</div>\n            <h3 className=\"empty-state-title\">No Data Available</h3>\n            <p className=\"empty-state-description\">\n              Please set up your profile and log some meals to see your personalized micronutrient analysis.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show empty state if user data exists but no meal data, or no processed data at all\n  if (!data || Object.keys(data).length === 0 || allChartData.length === 0) {\n    return (\n      <div className=\"micronutrient-chart-container\">\n        <div className=\"chart-card\">\n          <div className=\"chart-header\">\n            <h2 className=\"chart-title\">Micronutrient Status</h2>\n          </div>\n          <div className=\"empty-state\">\n            <div className=\"empty-state-icon\">📊</div>\n            <h3 className=\"empty-state-title\">No Micronutrient Data Available</h3>\n            <p className=\"empty-state-description\">\n              Once you log some meals, we'll analyze your nutrient intake and show your personalized micronutrient status here.\n            </p>\n          </div>\n        </div>\n        <div className=\"profile-card\">\n          <h3 className=\"profile-title\">User Profile</h3>\n          <div className=\"profile-grid\">\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">Age</p>\n              <p className=\"profile-value\">{userInfo?.age || 'Not specified'} years</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">Gender</p>\n              <p className=\"profile-value\">{userInfo?.gender ? userInfo.gender.charAt(0).toUpperCase() + userInfo.gender.slice(1) : 'Not specified'}</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">BMI</p>\n              <p className=\"profile-value\">{userInfo?.weight && userInfo?.height ?\n                (userInfo.weight / Math.pow(userInfo.height/100, 2)).toFixed(1) : 'N/A'}</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">Activity Level</p>\n              <p className=\"profile-value\">{userInfo?.activity_level || 'Not specified'}</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">Medical Conditions</p>\n              <p className=\"profile-value\">{userInfo?.medical_conditions && userInfo.medical_conditions.length > 0 ?\n                userInfo.medical_conditions.map(c => c.charAt(0).toUpperCase() + c.slice(1)).join(', ') : 'None'}</p>\n            </div>\n            <div className=\"profile-item\">\n              <p className=\"profile-label\">COVID Status</p>\n              <button\n                onClick={toggleCovidSeverity}\n                className=\"covid-toggle-button\"\n                style={{\n                  padding: '8px 12px',\n                  backgroundColor: '#e3f2fd',\n                  border: '2px solid #2196f3',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px',\n                  fontWeight: '500',\n                  color: '#1976d2',\n                  transition: 'all 0.2s ease',\n                  minWidth: '120px'\n                }}\n                onMouseEnter={(e) => {\n                  e.target.style.backgroundColor = '#bbdefb';\n                  e.target.style.transform = 'scale(1.02)';\n                }}\n                onMouseLeave={(e) => {\n                  e.target.style.backgroundColor = '#e3f2fd';\n                  e.target.style.transform = 'scale(1)';\n                }}\n              >\n                {getCurrentCovidSeverity()} (Click to change)\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"micronutrient-chart-container\">\n      <div className=\"chart-card\">\n        <div className=\"chart-header\">\n          <h2 className=\"chart-title\">Micronutrient Status</h2>\n\n          <div className=\"display-mode-buttons\">\n            <button\n              onClick={() => changeDisplayMode('all')}\n              className={`mode-button ${displayMode === 'all' ? 'mode-button-active' : ''}`}\n            >\n              All ({allChartData.length})\n            </button>\n            <button\n              onClick={() => changeDisplayMode('deficient')}\n              className={`mode-button ${displayMode === 'deficient' ? 'mode-button-deficient' : ''}`}\n            >\n              Deficient ({deficientCount})\n            </button>\n            <button\n              onClick={() => changeDisplayMode('optimal')}\n              className={`mode-button ${displayMode === 'optimal' ? 'mode-button-optimal' : ''}`}\n            >\n              Optimal ({allChartData.filter(item => item.percentOfRDA >= 100).length})\n            </button>\n          </div>\n        </div>\n\n        <div className=\"category-filter\">\n          <button\n            onClick={() => changeCategory('all')}\n            className={`category-button ${selectedCategory === 'all' ? 'category-button-active' : ''}`}\n          >\n            All Nutrients\n          </button>\n          <button\n            onClick={() => changeCategory('vitamins')}\n            className={`category-button ${selectedCategory === 'vitamins' ? 'category-button-active' : ''}`}\n          >\n            Vitamins\n          </button>\n          <button\n            onClick={() => changeCategory('minerals')}\n            className={`category-button ${selectedCategory === 'minerals' ? 'category-button-active' : ''}`}\n          >\n            Minerals\n          </button>\n        </div>\n\n        {deficientCount > 0 && (\n          <div className=\"deficiency-alert\">\n            <p className=\"deficiency-message\">\n              {deficientCount} {deficientCount === 1 ? 'nutrient is' : 'nutrients are'} below recommended levels.\n            </p>\n          </div>\n        )}\n\n        {userInfo.covid_severity && getCurrentCovidSeverity() !== 'None' && (\n          <div className={`covid-alert ${getCovidSeverityClass(userInfo.covid_severity)}`}>\n            <p className=\"covid-title\">Long COVID Condition - {getCurrentCovidSeverity()} Severity</p>\n            <p className=\"covid-description\">Recommended values have been adjusted for immune system support</p>\n          </div>\n        )}\n\n        <div className=\"chart-content\">\n          {chartData.length === 0 && allChartData.length > 0 ? (\n            <div className=\"no-filter-results\">\n              <div className=\"no-results-icon\">🎯</div>\n              <h3 className=\"no-results-title\">Great news!</h3>\n              <p className=\"no-results-message\">\n                You don't have any {getFilterDescription()} to display.\n                {displayMode === 'deficient' && \" This means your nutrient levels are doing well in this category!\"}\n                {displayMode === 'optimal' && \" Try logging more diverse meals to reach optimal levels.\"}\n              </p>\n              <p className=\"no-results-suggestion\">\n                Try selecting \"All\" to see your complete nutrient profile.\n              </p>\n            </div>\n          ) : (\n            chartData.map((nutrient) => (\n              <BulletChart\n                key={nutrient.key}\n                data={nutrient}\n                maxPercent={150}\n                getNutrientStatus={getNutrientStatus}\n                getNutrientInfo={getNutrientInfo}\n              />\n            ))\n          )}\n        </div>\n\n        <div className=\"chart-legend\">\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-optimal\"></div>\n            <span className=\"legend-text\">≥ 100% (Optimal)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-good\"></div>\n            <span className=\"legend-text\">70-99% (Good)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-moderate\"></div>\n            <span className=\"legend-text\">50-69% (Moderate)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-low\"></div>\n            <span className=\"legend-text\">30-49% (Low)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-color legend-very-low\"></div>\n            <span className=\"legend-text\">0-29% (Very Low)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-target\"></div>\n            <span className=\"legend-text\">Target (100% RDA)</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-threshold\"></div>\n            <span className=\"legend-text\">Deficiency Threshold (70%)</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"profile-card\">\n        <h3 className=\"profile-title\">User Profile</h3>\n        <div className=\"profile-grid\">\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">Age</p>\n            <p className=\"profile-value\">{userInfo?.age || 'Not specified'} years</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">Gender</p>\n            <p className=\"profile-value\">{userInfo?.gender ? userInfo.gender.charAt(0).toUpperCase() + userInfo.gender.slice(1) : 'Not specified'}</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">BMI</p>\n            <p className=\"profile-value\">{userInfo?.weight && userInfo?.height ?\n              (userInfo.weight / Math.pow(userInfo.height/100, 2)).toFixed(1) : 'N/A'}</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">Activity Level</p>\n            <p className=\"profile-value\">{userInfo?.activity_level || 'Not specified'}</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">Medical Conditions</p>\n            <p className=\"profile-value\">{userInfo?.medical_conditions && userInfo.medical_conditions.length > 0 ?\n              userInfo.medical_conditions.map(c => c.charAt(0).toUpperCase() + c.slice(1)).join(', ') : 'None'}</p>\n          </div>\n          <div className=\"profile-item\">\n            <p className=\"profile-label\">COVID Status</p>\n            <button\n              onClick={toggleCovidSeverity}\n              className=\"covid-toggle-button\"\n              style={{\n                padding: '8px 12px',\n                backgroundColor: '#e3f2fd',\n                border: '2px solid #2196f3',\n                borderRadius: '6px',\n                cursor: 'pointer',\n                fontSize: '14px',\n                fontWeight: '500',\n                color: '#1976d2',\n                transition: 'all 0.2s ease',\n                minWidth: '120px'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = '#bbdefb';\n                e.target.style.transform = 'scale(1.02)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = '#e3f2fd';\n                e.target.style.transform = 'scale(1)';\n              }}\n            >\n              {getCurrentCovidSeverity()} (Click to change)\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// FIXED: Enhanced getChartData function with better micronutrient processing\nfunction getChartData(foodLog, userProfile) {\n  if (!foodLog || !Array.isArray(foodLog)) {\n    return { macroSums: {}, microSums: {}, efficiencyData: [] };\n  }\n\n  if (foodLog.length === 0) {\n    return { macroSums: {}, microSums: {}, efficiencyData: [] };\n  }\n\n  //const lastDate = foodLog[0].date;\n  const today = formatDateForComparison(new Date());\n  //const lastDayEntries = foodLog.filter(e => e.date === lastDate);\n  const todayEntries = foodLog.filter(e => e.date === today);\n  \n  console.log('=== FIXED getChartData DEBUG ===');\n  //console.log('Processing', lastDayEntries.length, 'entries for date:', lastDate);\n    // ADD THIS CHECK:\n    if (todayEntries.length === 0) {\n      return { macroSums: {}, microSums: {}, efficiencyData: foodLog };\n    }\n  // Calculate macro sums with validation\n  //const macroSums = lastDayEntries.reduce((acc, e) => {\n\n    const macroSums = todayEntries.reduce((acc, e) => {\n\n    const protein = parseFloat(e.protein) || 0;\n    const carbs = parseFloat(e.carbs) || 0;\n    const fat = parseFloat(e.fat) || 0;\n    const calories = parseFloat(e.calories) || 0;\n    \n    acc.protein = (acc.protein || 0) + protein;\n    acc.carbs = (acc.carbs || 0) + carbs;\n    acc.fat = (acc.fat || 0) + fat;\n    acc.calories = (acc.calories || 0) + calories;\n    \n    console.log(`✅ Entry: ${e.name} - P:${protein}g C:${carbs}g F:${fat}g Cal:${calories}`);\n    return acc;\n  }, {});\n  \n  // FIXED: Better micronutrient accumulation with unit validation\n  const microSums = {};\n  \n  //lastDayEntries.forEach((entry, entryIndex) => {\n    todayEntries.forEach((entry, entryIndex) => {\n    console.log(`\\n--- Processing Entry ${entryIndex}: ${entry.name} ---`);\n    \n    if (!entry.micronutrients) {\n      console.log(`⚠️ No micronutrients data for ${entry.name}`);\n      return;\n    }\n    \n    Object.entries(entry.micronutrients).forEach(([nutrientKey, nutrientValue]) => {\n      // Skip macro nutrients that shouldn't be in micronutrients\n      const macroNutrients = ['protein', 'carbs', 'fat', 'calories', 'name', 'unit'];\n      if (macroNutrients.includes(nutrientKey.toLowerCase())) {\n        return;\n      }\n      \n      let valueToAdd = 0;\n      let unit = 'mg'; // default unit\n      \n      // Handle different value formats\n      if (typeof nutrientValue === 'object' && nutrientValue !== null) {\n        if (nutrientValue.value !== undefined) {\n          valueToAdd = parseFloat(nutrientValue.value) || 0;\n          unit = nutrientValue.unit || 'mg';\n        } else {\n          console.warn(`❌ Object format not recognized for ${nutrientKey}:`, nutrientValue);\n          return;\n        }\n      } else if (typeof nutrientValue === 'number') {\n        valueToAdd = nutrientValue;\n      } else if (typeof nutrientValue === 'string') {\n        valueToAdd = parseFloat(nutrientValue) || 0;\n      } else {\n        console.warn(`❌ Unrecognized value format for ${nutrientKey}:`, nutrientValue);\n        return;\n      }\n      \n      // FIXED: Unit standardization for common problem nutrients\n      if (nutrientKey === 'zinc' || nutrientKey === 'selenium' || nutrientKey === 'copper') {\n        // These are often given in mcg but should be in mg for zinc/copper\n        if (unit === 'mcg' || unit === 'μg') {\n          if (nutrientKey === 'zinc' || nutrientKey === 'copper') {\n            valueToAdd = valueToAdd / 1000; // Convert mcg to mg\n            unit = 'mg';\n            console.log(`🔄 Converted ${nutrientKey} from mcg to mg: ${valueToAdd}`);\n          }\n          // Selenium should stay in mcg, so don't convert\n        }\n      }\n      \n      // FIXED: Validate the value is reasonable\n      const reasonableMaxValues = {\n        'zinc': 50,           // mg\n        'selenium': 400,      // mcg\n        'copper': 10,         // mg\n        'iron': 100,          // mg\n        'vitamin_c': 2000,    // mg\n        'vitamin_d': 100,     // mcg\n        'calcium': 3000,      // mg\n        'magnesium': 1000     // mg\n      };\n      \n      const maxValue = reasonableMaxValues[nutrientKey] || 10000;\n      if (valueToAdd < 0 || valueToAdd > maxValue) {\n        console.warn(`⚠️ Suspicious ${nutrientKey} value: ${valueToAdd} ${unit} (max expected: ${maxValue}) - using cautiously`);\n        // Don't skip entirely, but cap the value\n        valueToAdd = Math.min(valueToAdd, maxValue);\n      }\n      \n      // Initialize or add to sum\n      if (!microSums[nutrientKey]) {\n        microSums[nutrientKey] = { value: 0, unit: unit };\n      }\n      \n      microSums[nutrientKey].value += valueToAdd;\n      \n      console.log(`➕ ${nutrientKey}: +${valueToAdd} ${unit} → Total: ${microSums[nutrientKey].value} ${unit}`);\n    });\n  });\n  \n  console.log('\\n=== FINAL SUMS ===');\n  console.log('Macros:', macroSums);\n  console.log('Micros:', microSums);\n  \n  // FIXED: Validate final micronutrient totals\n  Object.entries(microSums).forEach(([nutrient, data]) => {\n    const warningThresholds = {\n      'zinc': 100,        // mg - warning if > 100mg\n      'selenium': 1000,   // mcg - warning if > 1000mcg  \n      'copper': 50,       // mg - warning if > 50mg\n      'iron': 200,        // mg - warning if > 200mg\n      'vitamin_c': 5000,  // mg - warning if > 5000mg\n    };\n    \n    const threshold = warningThresholds[nutrient] || 1000;\n    if (data.value > threshold) {\n      console.warn(`⚠️ Unusually high ${nutrient}: ${data.value} ${data.unit} (threshold: ${threshold})`);\n    }\n  });\n  \n  console.log('=== END FIXED DEBUG ===\\n');\n  \n  return { \n    macroSums, \n    microSums, \n    efficiencyData: foodLog \n  };\n}\n\nfunction AnalysisTab({ foodLog, userProfile }) {\nif (!foodLog || !Array.isArray(foodLog)) {\n  return (\n    <div className=\"analysis-error\">\n      <h3>Data Error</h3>\n      <p>Unable to load food log data. Please try refreshing the page.</p>\n    </div>\n  );\n}\n\nif (!userProfile) {\n  return (\n    <div className=\"analysis-error\">\n      <h3>Profile Error</h3>\n      <p>User profile data is missing. Please check your account settings.</p>\n    </div>\n  );\n}\n\n// FIXED: Use timezone-safe date comparison\nconst today = formatDateForComparison(new Date());\nconst analysisDate = foodLog.length > 0 ? foodLog[0].date : today;\nconst todayMeals = foodLog.filter(entry => entry.date === today);\nconst { macroSums, microSums, efficiencyData } = getChartData(foodLog, userProfile);\n\nreturn (\n  <div className=\"food-analysis-section\">\n    <div className=\"analysis-header\">\n      <h3>📊 Nutritional Analysis Dashboard</h3>\n      <p className=\"analysis-date\">Analysis for {analysisDate}</p>\n      <div className=\"analysis-summary\">\n        <span className=\"summary-stat\">\n          <strong>{todayMeals.length}</strong> meals logged today ({today})\n        </span>\n      </div>\n    </div>\n\n    <div className=\"charts-container\">\n      \n      <div className=\"chart-wrapper\">\n        <div className=\"chart-header\">\n          <h4>🍎 Macronutrient Balance</h4>\n          <p className=\"chart-description\">Your protein, carbohydrate, and fat intake compared to personalized recommendations</p>\n        </div>\n        <MacronutrientChart userData={userProfile} userIntake={macroSums} />\n      </div>\n      \n      <div className=\"chart-wrapper\">\n        <div className=\"chart-header\">\n          <h4>💊 Micronutrient Status</h4>\n          <p className=\"chart-description\">Essential vitamins and minerals as percentage of recommended daily amounts</p>\n        </div>\n        <MicronutrientChart data={microSums} userData={userProfile} />\n      </div>\n      \n      <div className=\"chart-wrapper\">\n        <div className=\"chart-header\">\n          <h4>⚡ Metabolic Efficiency</h4>\n          <p className=\"chart-description\">How effectively your body converts food calories into usable energy</p>\n        </div>\n        <div style={{ width: '100%', overflow: 'visible' }}>\n          <EfficiencyChart data={efficiencyData} userData={userProfile} />\n        </div>\n      </div>\n\n    </div>\n  </div>\n);\n}\n\nexport { AnalysisTab, MacronutrientChart, MicronutrientChart, EfficiencyChart };","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \ncollection, \nquery, \ngetDocs, \naddDoc, \ndeleteDoc,\nupdateDoc,\ndoc,\ngetDoc,\nTimestamp, \norderBy, \nlimit\n} from 'firebase/firestore';\nimport { db } from '../../firebase-config';\nimport \"../Common.css\";\nimport './FoodTrackerPage.css';\nimport { AnalysisTab } from './FoodTrackerAnalysis';\n\n// TIMEZONE UTILITIES - Centralized timezone handling\nconst getUserTimezone = () => {\nreturn Intl.DateTimeFormat().resolvedOptions().timeZone;\n};\n\nconst getTodayInUserTimezone = () => {\nconst userTimezone = getUserTimezone();\nconst today = new Date();\nreturn today.toLocaleDateString('en-CA', { timeZone: userTimezone });\n};\n\nconst getDaysAgoInUserTimezone = (daysAgo) => {\nconst userTimezone = getUserTimezone();\nconst date = new Date();\ndate.setDate(date.getDate() - daysAgo);\nreturn date.toLocaleDateString('en-CA', { timeZone: userTimezone });\n};\n\nconst parseLocalDate = (dateString) => {\nif (!dateString) return null;\nconst parts = dateString.split('-');\nif (parts.length === 3) {\nconst year = parseInt(parts[0], 10);\nconst month = parseInt(parts[1], 10) - 1; // Month is 0-indexed\nconst day = parseInt(parts[2], 10);\nreturn new Date(year, month, day);\n}\nreturn new Date(dateString);\n};\n\nconst formatDateHeader = (dateString) => {\nif (!dateString) return '';\n\ntry {\nconst date = parseLocalDate(dateString);\nif (!date) return dateString;\n\nconst today = getTodayInUserTimezone();\nconst yesterday = getDaysAgoInUserTimezone(1);\n\nconst options = { \nweekday: 'long', \nyear: 'numeric', \nmonth: 'long', \nday: 'numeric' \n};\nconst formattedDate = date.toLocaleDateString('en-US', options);\n\nif (dateString === today) {\nreturn `Today - ${formattedDate}`;\n} else if (dateString === yesterday) {\nreturn `Yesterday - ${formattedDate}`;\n} else {\nreturn formattedDate;\n}\n} catch (error) {\nconsole.warn('Error formatting date header:', error);\nreturn dateString;\n}\n};\n\nconst debugTimezone = (context = '') => {\nconst userTimezone = getUserTimezone();\nconst now = new Date();\nconst localToday = getTodayInUserTimezone();\nconst utcToday = now.toISOString().split('T')[0];\n\nconsole.log(`🌍 Timezone Debug ${context}:`, {\nuserTimezone,\nlocalToday,\nutcToday,\ntimezoneOffset: now.getTimezoneOffset(),\nlocalTime: now.toLocaleString()\n});\n\nreturn { userTimezone, localToday, utcToday };\n};\n\n// MAIN COMPONENT CONSTANTS\nconst mealTypes = ['Breakfast', 'Morning Snack', 'Lunch', 'Afternoon Snack', 'Dinner', 'Late Night Snack'];\nconst TABS = ['Add Food', 'Food Journal', 'Analysis'];\nconst ENTRIES_PER_PAGE = 20;\n\nfunction FoodTrackerPage() {\nconst navigate = useNavigate();\n\n// State declarations\nconst [allFoodsCache, setAllFoodsCache] = useState([]);\nconst [pyodideStatus, setPyodideStatus] = useState('loading');\nconst [searchIndexBuilt, setSearchIndexBuilt] = useState(false);\nconst [searchFocused, setSearchFocused] = useState(false);\n\n// User and authentication state\nconst [currentUser, setCurrentUser] = useState(null);\nconst [userProfile, setUserProfile] = useState({\nage: 30,\ngender: 'female',\nweight: 65,\nheight: 165,\nactivityLevel: 'moderate',\nhasLongCovid: false,\nlongCovidSeverity: 'moderate'\n});\nconst [authLoading, setAuthLoading] = useState(true);\n\n// UI state\nconst [tab, setTab] = useState('Add Food');\n\n// Add Food state\nconst [search, setSearch] = useState('');\nconst [suggestions, setSuggestions] = useState([]);\nconst [selectedMeal, setSelectedMeal] = useState(null);\nconst [fields, setFields] = useState({});\nconst [mealType, setMealType] = useState('Breakfast');\nconst [time, setTime] = useState(() => new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }));\nconst [date, setDate] = useState(() => getTodayInUserTimezone()); // FIXED: Use consistent timezone function\nconst [longCovidAdjust, setLongCovidAdjust] = useState(true);\nconst [loading, setLoading] = useState(false);\nconst [success, setSuccess] = useState('');\nconst [error, setError] = useState('');\n\n// Food Journal state\nconst [foodLog, setFoodLog] = useState([]);\nconst [logLoading, setLogLoading] = useState(false);\nconst [journalError, setJournalError] = useState('');\nconst [journalPage, setJournalPage] = useState(1);\n\n// Edit/Delete state\nconst [editingEntry, setEditingEntry] = useState(null);\nconst [deleteConfirmId, setDeleteConfirmId] = useState(null);\nconst [deleteLoading, setDeleteLoading] = useState(false);\n\n// Suggestion cache for performance\nconst [suggestionCache, setSuggestionCache] = useState({});\n\n// Handle logout\nconst handleLogout = async () => {\nconsole.log('Logout clicked - starting complete logout process');\n\ntry {\nlocalStorage.removeItem('userData');\nsessionStorage.clear();\nsetCurrentUser(null);\nsetAuthLoading(false);\nnavigate('/login', { replace: true });\n} catch (error) {\nconsole.error('Error during logout:', error);\nlocalStorage.removeItem('userData');\nsessionStorage.clear();\nsetCurrentUser(null);\nnavigate('/login', { replace: true });\n}\n};\n\n// Delete Confirmation Modal Component\nconst DeleteConfirmModal = ({ entryId, entryName, onConfirm, onCancel }) => (\n<div className=\"modal-overlay\">\n<div className=\"delete-confirm-modal\">\n<h3>🗑️ Delete Food Entry</h3>\n<p>Are you sure you want to delete this food entry?</p>\n<div className=\"entry-preview\">\n  <strong>{entryName}</strong>\n</div>\n<p className=\"warning-text\">This action cannot be undone.</p>\n<div className=\"modal-actions\">\n  <button \n    className=\"cancel-button\" \n    onClick={onCancel}\n    disabled={deleteLoading}\n  >\n    Cancel\n  </button>\n  <button \n    className=\"delete-button\" \n    onClick={() => onConfirm(entryId)}\n    disabled={deleteLoading}\n  >\n    {deleteLoading ? 'Deleting...' : 'Delete Entry'}\n  </button>\n</div>\n</div>\n</div>\n);\n\n// Handle delete entry\nconst handleDeleteEntry = async (entryId) => {\nif (!currentUser || !entryId) return;\n\nsetDeleteLoading(true);\nsetJournalError('');\n\ntry {\nawait deleteDoc(doc(db, 'users', currentUser.id, 'food_journal', entryId));\nsetFoodLog(prevLog => prevLog.filter(entry => entry.id !== entryId));\nsetSuccess('Food entry deleted successfully!');\nsetTimeout(() => setSuccess(''), 3000);\n} catch (err) {\nconsole.error('Error deleting entry:', err);\nsetJournalError(`Failed to delete entry: ${err.message}`);\n} finally {\nsetDeleteLoading(false);\nsetDeleteConfirmId(null);\n}\n};\n\n// Handle edit entry\nconst handleEditEntry = (entry) => {\nsetFields({\nname: entry.name,\nprotein: entry.protein,\ncarbs: entry.carbs,\nfat: entry.fat,\ncalories: entry.calories,\nserving: entry.serving || 100,\nmicronutrients: entry.micronutrients || {},\nlongCovidBenefits: entry.longCovidBenefits || [],\nlongCovidCautions: entry.longCovidCautions || [],\nlongCovidRelevance: entry.longCovidRelevance || {},\n});\n\nsetMealType(entry.mealType);\nsetTime(entry.time);\nsetDate(entry.date);\nsetLongCovidAdjust(entry.longCovidAdjust || false);\nsetSearch(entry.name);\nsetEditingEntry(entry);\nsetTab('Add Food');\n};\n\n// Handle log food function\nconst handleLogFood = async () => {\nif (!currentUser || !currentUser.id) {\nsetError('Please log in to save your meals');\nreturn;\n}\n\nsetLoading(true);\nsetError('');\nsetSuccess('');\n\ntry {\nif (!fields.name) {\nthrow new Error('Food name is required');\n}\n\nconst entryData = {\nname: fields.name,\nprotein: parseFloat(fields.protein) || 0,\ncarbs: parseFloat(fields.carbs) || 0,\nfat: parseFloat(fields.fat) || 0,\ncalories: parseFloat(fields.calories) || 0,\nserving: parseFloat(fields.serving) || 100,\nmicronutrients: fields.micronutrients || {},\nmealType,\ntime,\ndate,\nlongCovidAdjust,\nlongCovidBenefits: fields.longCovidBenefits || [],\nlongCovidCautions: fields.longCovidCautions || [],\nlongCovidRelevance: fields.longCovidRelevance || {},\nmealId: selectedMeal?.id || null\n};\n\nentryData.metabolicEfficiency = calculateMetabolicEfficiency(entryData);\n\nif (editingEntry) {\nawait updateDoc(\n  doc(db, 'users', currentUser.id, 'food_journal', editingEntry.id), \n  {\n    ...entryData,\n    updatedAt: Timestamp.now()\n  }\n);\n\nsetFoodLog(prevLog => \n  prevLog.map(entry => \n    entry.id === editingEntry.id \n      ? { ...entry, ...entryData, id: editingEntry.id }\n      : entry\n  )\n);\n\nsetSuccess('Food entry updated successfully!');\nsetEditingEntry(null);\n} else {\nentryData.createdAt = Timestamp.now();\n\nconst docRef = await addDoc(\n  collection(db, 'users', currentUser.id, 'food_journal'), \n  entryData\n);\n\nconst newEntry = { id: docRef.id, ...entryData };\nsetFoodLog(prevLog => [newEntry, ...prevLog]);\nsetSuccess('Food logged successfully!');\n}\n\nsetFields({});\nsetSelectedMeal(null);\nsetSearch('');\n} catch (err) {\nconsole.error('Error logging food:', err);\nsetError(`Failed to ${editingEntry ? 'update' : 'log'} food: ${err.message}`);\n} finally {\nsetLoading(false);\n}\n};\n\n// Cancel edit mode\nconst handleCancelEdit = () => {\nsetEditingEntry(null);\nsetFields({});\nsetSelectedMeal(null);\nsetSearch('');\nsetSuccess('');\nsetError('');\n};\n\n// Fetch user profile from Firestore\nconst fetchUserProfile = async (uid) => {\ntry {\nconst userDocRef = doc(db, 'users', uid);\nconst userDoc = await getDoc(userDocRef);\n\nif (userDoc.exists()) {\nconst userData = userDoc.data();\nsetUserProfile(userData);\n} else {\nconsole.log('No user profile found in database');\nsetUserProfile(null);\n}\n} catch (err) {\nconsole.error(\"Error fetching user profile:\", err);\nsetError('Failed to load user profile');\nsetUserProfile(null);\n}\n};\n\n// Authentication check function\nconst checkUserAuthentication = useCallback(async () => {\ntry {\nconst storedUserData = localStorage.getItem('userData');\n\nif (!storedUserData) {\nnavigate('/login');\nreturn;\n}\n\nconst parsedUserData = JSON.parse(storedUserData);\nsetCurrentUser(parsedUserData);\n\nif (parsedUserData.id) {\nawait fetchUserProfile(parsedUserData.id);\n} else {\nconsole.log('No user ID found - user profile not loaded');\nsetUserProfile(null);\n}\n} catch (error) {\nconsole.error(\"Error checking authentication:\", error);\nnavigate('/login');\n} finally {\nsetAuthLoading(false);\n}\n}, [navigate]);\n\n// Authentication effect\nuseEffect(() => {\ncheckUserAuthentication();\n}, [checkUserAuthentication]);\n\n// Initialize food log data\nconst initializeFoodLogData = useCallback(async () => {\nif (!currentUser || !currentUser.id) return;\n\ntry {\nconst q = query(\ncollection(db, 'users', currentUser.id, 'food_journal'),\norderBy('date', 'desc'),\norderBy('createdAt', 'desc'),\nlimit(20)\n);\n\nconst snap = await getDocs(q);\nconst entries = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n\nsetFoodLog(entries);\n\nif (entries.length === 0) {\nconsole.log('No food log entries found - showing empty state');\n} else {\nconsole.log(`Loaded ${entries.length} food log entries`);\n}\n} catch (error) {\nconsole.error('Error loading food log data:', error);\nsetError('Failed to load food log data');\nsetFoodLog([]);\n}\n}, [currentUser]);\n\n// Initialize food log when user is authenticated\nuseEffect(() => {\nif (currentUser && currentUser.id && !authLoading) {\ninitializeFoodLogData();\n}\n}, [currentUser, authLoading, initializeFoodLogData]);\n\n// Long COVID Food Information Component\nconst LongCovidFoodInfo = ({ foodName, mealData }) => {\nif (mealData && (mealData.longCovidRelevance || mealData.longCovidBenefits || mealData.longCovidCautions)) {\nconst covidRelevance = mealData.longCovidRelevance || {};\nconst benefits = mealData.longCovidBenefits || [];\nconst cautions = mealData.longCovidCautions || [];\nconst functionalCompounds = mealData.functionalCompounds || {};\n\nlet category = 'neutral';\nif (benefits.length > cautions.length) category = 'beneficial';\nif (cautions.length > benefits.length) category = 'caution';\n\nconst antiInflammatoryLevel = covidRelevance.antiInflammatory || 'unknown';\n\nreturn (\n<div className={`long-covid-food-info ${category}`}>\n  <div className=\"food-info-header\">\n    <span className={`category-icon ${category}`}>\n      {category === 'beneficial' ? '✅' : \n       category === 'caution' ? '⚠️' : 'ℹ️'}\n    </span>\n    <strong>Database Analysis: {foodName}</strong>\n  </div>\n  \n  <div className=\"inflammatory-level\">\n    <h5>🔥 Anti-Inflammatory Level</h5>\n    <div className={`level-indicator level-${antiInflammatoryLevel}`}>\n      <span className=\"level-value\"> {antiInflammatoryLevel.toUpperCase()}</span>\n      <span className=\"level-description\">\n        {antiInflammatoryLevel === 'high' ? 'Excellent for reducing inflammation' :\n         antiInflammatoryLevel === 'moderate' ? 'Moderately helpful for inflammation' :\n         antiInflammatoryLevel === 'low' ? 'Limited anti-inflammatory effects' :\n         antiInflammatoryLevel === 'neutral' ? 'No significant inflammatory impact' : 'Not assessed'}\n      </span>\n    </div>\n  </div>\n\n  {Object.keys(functionalCompounds).length > 0 && (\n    <div className=\"functional-compounds\">\n      <h5>🧬 Functional Compounds</h5>\n      <div className=\"compounds-grid\">\n        {Object.entries(functionalCompounds).map(([compound, level]) => (\n          <div key={compound} className=\"compound-item\">\n            <span className=\"compound-name\">{compound.replace(/_/g, ' ')}</span>\n            <span className={`compound-level level-${level}`}> {level}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  )}\n  \n  {benefits.length > 0 && (\n    <div className=\"benefits-list\">\n      <h5>✨ Benefits for Long COVID Recovery</h5>\n      <ul>\n        {benefits.map((benefit, i) => (\n          <li key={i}>{benefit}</li>\n        ))}\n      </ul>\n    </div>\n  )}\n  \n  {cautions.length > 0 && (\n    <div className=\"cautions-list\">\n      <h5>⚠️ Important Considerations</h5>\n      <ul>\n        {cautions.map((caution, i) => (\n          <li key={i}>{caution}</li>\n        ))}\n      </ul>\n    </div>\n  )}\n</div>\n);\n}\n\nreturn (\n<div className=\"no-food-info\">\n<div className=\"no-data-icon\">📊</div>\n<h4>No Long COVID Data Available</h4>\n<p>This food doesn't have specific Long COVID information in our database yet.</p>\n<p>Consider general anti-inflammatory principles:</p>\n<ul className=\"general-tips\">\n  <li>Choose whole, unprocessed versions when possible</li>\n  <li>Pay attention to how it affects your symptoms</li>\n  <li>Consider portion sizes and frequency</li>\n  <li>Pair with known anti-inflammatory foods</li>\n</ul>\n</div>\n);\n};\n\n// Long COVID Side Panel Component\nconst LongCovidSidePanel = ({ selectedFood, selectedMeal, foodLog = [], isSearching = false, searchTerm = '' }) => {\nif (selectedFood && selectedMeal) {\nreturn (\n<div className=\"long-covid-side-panel\">\n  <h3>🦠 Long COVID Nutrition Guide</h3>\n  <div className=\"selected-food-analysis\">\n    <LongCovidFoodInfo foodName={selectedFood} mealData={selectedMeal} />\n    \n    <div className=\"back-to-guide\">\n      <p className=\"guide-hint\">\n        <em>Clear selection to see the full nutrition guide</em>\n      </p>\n    </div>\n  </div>\n</div>\n);\n}\n\nif (isSearching && searchTerm.length >= 2) {\nreturn (\n<div className=\"long-covid-side-panel\">\n  <h3>🦠 Long COVID Nutrition Guide</h3>\n  \n  <div className=\"search-status\">\n    <p className=\"search-hint\">\n      <em>Searching for \"{searchTerm}\"... Select a food above to see its specific analysis.</em>\n    </p>\n  </div>\n  \n  <div className=\"nutrition-categories\">\n    <div className=\"category-section beneficial\">\n      <h4>✅ Quick Anti-Inflammatory Guide</h4>\n      <p>Focus on omega-3 rich fish, berries, leafy greens, and anti-inflammatory spices.</p>\n    </div>\n  </div>\n</div>\n);\n}\n\nreturn (\n<div className=\"long-covid-side-panel\">\n<h3>🦠 Long COVID Nutrition Guide</h3>\n\n<div className=\"nutrition-categories\">\n  <div className=\"category-section beneficial\">\n    <h4>✅ Anti-Inflammatory Foods</h4>\n    <ul>\n      <li><strong>Fatty Fish:</strong> Salmon, mackerel, sardines (omega-3s)</li>\n      <li><strong>Berries:</strong> Blueberries, strawberries (antioxidants)</li>\n      <li><strong>Leafy Greens:</strong> Spinach, kale (vitamins, minerals)</li>\n      <li><strong>Nuts:</strong> Walnuts, almonds (healthy fats)</li>\n      <li><strong>Turmeric:</strong> Contains curcumin (anti-inflammatory)</li>\n      <li><strong>Ginger:</strong> Natural anti-inflammatory</li>\n      <li><strong>Green Tea:</strong> Polyphenols reduce inflammation</li>\n    </ul>\n  </div>\n\n  <div className=\"category-section neutral\">\n    <h4>ℹ️ Recommended Foods</h4>\n    <ul>\n      <li><strong>Whole Grains:</strong> Oats, quinoa, brown rice</li>\n      <li><strong>Lean Proteins:</strong> Chicken, turkey, legumes</li>\n      <li><strong>Citrus Fruits:</strong> High in vitamin C</li>\n      <li><strong>Olive Oil:</strong> Monounsaturated fats</li>\n      <li><strong>Garlic & Onions:</strong> Immune support</li>\n    </ul>\n  </div>\n\n  <div className=\"category-section caution\">\n    <h4>⚠️ Foods to Limit</h4>\n    <ul>\n      <li><strong>Processed Foods:</strong> High in inflammation-promoting ingredients</li>\n      <li><strong>Refined Sugars:</strong> Can worsen inflammation</li>\n      <li><strong>Red/Processed Meat:</strong> May increase inflammatory markers</li>\n      <li><strong>Trans Fats:</strong> Found in margarine, processed foods</li>\n      <li><strong>Refined Carbs:</strong> White bread, pastries</li>\n      <li><strong>Fried Foods:</strong> High in inflammatory compounds</li>\n    </ul>\n  </div>\n</div>\n\n<div className=\"additional-tips\">\n  <h4>💡 General Tips</h4>\n  <ul>\n    <li>Stay well hydrated (8+ glasses water daily)</li>\n    <li>Consider vitamin D supplementation</li>\n    <li>Eat regular, smaller meals to maintain energy</li>\n    <li>Focus on nutrient-dense, whole foods</li>\n    <li>Limit alcohol and caffeine if they worsen symptoms</li>\n  </ul>\n</div>\n</div>\n);\n};\n\n// Helper function for COVID food rating\nconst getCovidFoodRating = (foodName) => {\nconst foodLower = foodName.toLowerCase();\n\nconst beneficial = [\n'salmon', 'mackerel', 'sardines', 'tuna', 'trout',\n'blueberries', 'strawberries', 'raspberries', 'blackberries',\n'spinach', 'kale', 'broccoli', 'brussels sprouts',\n'walnuts', 'almonds', 'chia seeds', 'flax seeds',\n'turmeric', 'ginger', 'garlic', 'onion',\n'olive oil', 'avocado', 'sweet potato',\n'green tea', 'dark chocolate'\n];\n\nconst caution = [\n'processed meat', 'bacon', 'sausage', 'hot dog',\n'french fries', 'fried chicken', 'fried',\n'white bread', 'white rice', 'pastry',\n'candy', 'soda', 'sugar', 'margarine',\n'ice cream', 'chips'\n];\n\nif (beneficial.some(food => foodLower.includes(food))) return 'beneficial';\nif (caution.some(food => foodLower.includes(food))) return 'caution';\nreturn 'neutral';\n};\n\n// Utility functions\nconst convertTo24Hour = (time12h) => {\nif (!time12h) return '';\n\nconst [time, modifier] = time12h.split(' ');\nif (!time || !modifier) return time12h;\n\nlet [hours, minutes] = time.split(':');\n\nif (hours === '12') {\nhours = '00';\n}\n\nif (modifier === 'PM') {\nhours = String(parseInt(hours, 10) + 12);\n}\n\nhours = String(hours);\n\nreturn `${hours.padStart(2, '0')}:${minutes}`;\n};\n\nconst handleTimeChange = (e) => {\nconst time24 = e.target.value;\nif (!time24) return;\n\nconst date = new Date(`2000-01-01T${time24}`);\nconst time12 = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\nsetTime(time12);\n};\n\n// Calculate metabolic efficiency\nconst calculateMetabolicEfficiency = (mealData) => {\nconst timeStr = mealData.time;\nconst hourMatch = timeStr.match(/(\\d+):/);\nconst hour = hourMatch ? parseInt(hourMatch[1], 10) : 12;\nconst isPM = timeStr.toLowerCase().includes('pm');\n\nlet hour24 = hour;\nif (isPM && hour !== 12) hour24 += 12;\nif (!isPM && hour === 12) hour24 = 0;\n\nconst proteinFactor = (parseFloat(mealData.protein) || 0) * 0.2;\nconst carbFactor = (parseFloat(mealData.carbs) || 0) * 0.1;\nconst fatFactor = (parseFloat(mealData.fat) || 0) * 0.15;\n\nlet timeFactor = 1.0;\nif (hour24 < 6 || hour24 > 20) {\ntimeFactor = 0.7;\n} else if (hour24 >= 7 && hour24 <= 10) {\ntimeFactor = 1.2;\n} else if (hour24 >= 17 && hour24 <= 19) {\ntimeFactor = 0.9;\n}\n\nconst mealTypeFactors = {\n'Breakfast': 1.3,\n'Morning Snack': 0.9,\n'Lunch': 1.1,\n'Afternoon Snack': 0.8,\n'Dinner': 0.9,\n'Late Night Snack': 0.6,\n'Snack': 0.8\n};\nconst mealTypeFactor = mealTypeFactors[mealData.mealType] || 1.0;\n\nconst macroBalance = Math.min(100, (proteinFactor + carbFactor + fatFactor) * 10);\nlet efficiency = macroBalance * timeFactor * mealTypeFactor;\n\nif (mealData.longCovidAdjust && userProfile?.hasLongCovid) {\nconst severityFactors = {\n'mild': 0.95,\n'moderate': 0.85,\n'severe': 0.75,\n'very severe': 0.65\n};\n\nconst severityFactor = severityFactors[userProfile.longCovidSeverity] || 0.85;\nefficiency *= severityFactor;\n\nif (mealData.longCovidBenefits && mealData.longCovidBenefits.length > 0) {\nefficiency *= 1.1;\n}\n\nif (mealData.longCovidCautions && mealData.longCovidCautions.length > 0) {\nefficiency *= 0.9;\n}\n}\n\nreturn Math.min(100, Math.max(0, efficiency));\n};\n\n// Recalculate nutrients when serving size changes\nconst recalculateNutrients = (newServing) => {\nif (!selectedMeal || !selectedMeal.nutrients?.per100g) return;\n\nconst ratio = parseFloat(newServing) / 100;\nif (isNaN(ratio)) return;\n\nsetFields(prevFields => {\nconst updatedFields = { ...prevFields };\nconst nutrients = selectedMeal.nutrients.per100g;\n\nupdatedFields.protein = (nutrients.protein?.value * ratio).toFixed(1);\nupdatedFields.carbs = (nutrients.carbs?.value * ratio).toFixed(1);\nupdatedFields.fat = (nutrients.fat?.value * ratio).toFixed(1);\nupdatedFields.calories = (nutrients.calories?.value * ratio).toFixed(0);\n\nupdatedFields.micronutrients = {};\nObject.entries(nutrients).forEach(([key, value]) => {\nif (!['protein', 'carbs', 'fat', 'calories', 'name', 'unit'].includes(key)) {\n  updatedFields.micronutrients[key] = {\n    ...value,\n    value: (value.value * ratio).toFixed(1)\n  };\n}\n});\n\nreturn updatedFields;\n});\n};\n\n// Debounce hook for search\nconst useDebounce = (value, delay) => {\nconst [debouncedValue, setDebouncedValue] = useState(value);\n\nuseEffect(() => {\nconst handler = setTimeout(() => {\nsetDebouncedValue(value);\n}, delay);\n\nreturn () => clearTimeout(handler);\n}, [value, delay]);\n\nreturn debouncedValue;\n};\n\nconst debouncedSearch = useDebounce(search, 300);\n\n// Enhanced AI-powered search with fallback to JavaScript\nconst fetchSuggestions = useCallback(async () => {\nconst normalizedSearch = search.toLowerCase().trim();\n\nif (normalizedSearch.length < 2) {\nsetSuggestions([]);\nreturn;\n}\n\nif (suggestionCache[normalizedSearch]) {\nsetSuggestions(suggestionCache[normalizedSearch]);\nreturn;\n}\n\n// JavaScript fallback search algorithm\nconst calculateJavaScriptScore = (meal, searchTerm) => {\nconst name = (meal.name || '').toLowerCase();\nconst category = (meal.category || '').toLowerCase();\nconst description = (meal.description || '').toLowerCase();\n\nlet score = 0;\n\nif (name === searchTerm) score += 1.0;\nelse if (name.startsWith(searchTerm)) score += 0.8;\nelse if (name.includes(searchTerm)) score += 0.6;\n\nif (category.includes(searchTerm)) score += 0.3;\nif (description.includes(searchTerm)) score += 0.2;\n\nconst nameWords = name.split(' ');\nconst searchWords = searchTerm.split(' ');\nlet wordMatches = 0;\n\nsearchWords.forEach(searchWord => {\nnameWords.forEach(nameWord => {\n  if (nameWord.startsWith(searchWord)) wordMatches++;\n});\n});\n\nscore += (wordMatches / Math.max(searchWords.length, 1)) * 0.4;\n\nreturn score;\n};\n\nconst performFallbackSearch = (normalizedSearch, allFoods) => {\nreturn allFoods\n.filter(meal => {\n  if (!meal.name) return false;\n  \n  const mealNameLower = meal.name.toLowerCase();\n  const category = (meal.category || '').toLowerCase();\n  const description = (meal.description || '').toLowerCase();\n  const benefits = (meal.longCovidBenefits || []).join(' ').toLowerCase();\n  \n  return mealNameLower.includes(normalizedSearch) ||\n         mealNameLower.startsWith(normalizedSearch) ||\n         category.includes(normalizedSearch) ||\n         description.includes(normalizedSearch) ||\n         benefits.includes(normalizedSearch) ||\n         mealNameLower.split(' ').some(word => word.startsWith(normalizedSearch));\n})\n.map(meal => ({\n  ...meal,\n  searchMethod: 'javascript',\n  searchScore: calculateJavaScriptScore(meal, normalizedSearch)\n}))\n.sort((a, b) => {\n  const aName = (a.name || '').toLowerCase();\n  const bName = (b.name || '').toLowerCase();\n  \n  if (aName === normalizedSearch && bName !== normalizedSearch) return -1;\n  if (bName === normalizedSearch && aName !== normalizedSearch) return 1;\n  \n  if (aName.startsWith(normalizedSearch) && !bName.startsWith(normalizedSearch)) return -1;\n  if (bName.startsWith(normalizedSearch) && !aName.startsWith(normalizedSearch)) return 1;\n  \n  return (b.searchScore || 0) - (a.searchScore || 0);\n})\n.slice(0, 15);\n};\n\ntry {\nconsole.log(`🔍 Enhanced search for: \"${normalizedSearch}\"`);\n\nlet allFoods = allFoodsCache;\nif (allFoods.length === 0) {\nconsole.log('📥 Fetching food database...');\nconst q = query(\n  collection(db, 'meals'),\n  limit(1000)\n);\n\nconst snap = await getDocs(q);\nallFoods = snap.docs.map(doc => ({ \n  id: doc.id, \n  ...doc.data()\n}));\n\nsetAllFoodsCache(allFoods);\nconsole.log(`📊 Loaded ${allFoods.length} foods into cache`);\n\nif (window.pyodideReady && !searchIndexBuilt) {\n  try {\n    console.log('🏗️ Building search index...');\n    const result = await window.pyodide.runPython(`\n      result = search_engine.build_index('${JSON.stringify(allFoods).replace(/'/g, \"\\\\'\")}')\n      result\n    `);\n    setSearchIndexBuilt(true);\n    window.searchIndexBuilt = true;\n    console.log('✅ Search index built:', result);\n  } catch (error) {\n    console.error('❌ Error building Python index:', error);\n  }\n}\n}\n\nlet results = [];\n\nif (window.pyodideReady && searchIndexBuilt) {\ntry {\n  console.log('🚀 Using AI-powered search');\n  const pythonResults = await window.pyodide.runPython(`\n    results = search_engine.search(\"${normalizedSearch.replace(/\"/g, '\\\\\"')}\", 15)\n    json.dumps(results)\n  `);\n  \n  results = JSON.parse(pythonResults);\n  console.log(`🎯 AI search returned ${results.length} results`);\n  \n  results = results.map(food => ({\n    ...food,\n    searchMethod: 'ai',\n    searchScore: food.search_score || 0\n  }));\n  \n} catch (error) {\n  console.error('❌ Python search failed, using fallback:', error);\n  results = performFallbackSearch(normalizedSearch, allFoods);\n}\n} else {\nconsole.log('📝 Using fallback JavaScript search');\nresults = performFallbackSearch(normalizedSearch, allFoods);\n}\n\nsetSuggestionCache(prev => ({\n...prev,\n[normalizedSearch]: results\n}));\n\nsetSuggestions(results);\n\n} catch (err) {\nconsole.error('❌ Search error:', err);\nsetSuggestions([]);\n}\n}, [search, suggestionCache, allFoodsCache, searchIndexBuilt]);\n\n// Monitor Pyodide status for AI search capabilities\nuseEffect(() => {\nconst checkPyodideStatus = () => {\nif (window.pyodideReady) {\nsetPyodideStatus('ready');\n} else if (window.pyodide) {\nsetPyodideStatus('loading');\n} else {\nsetPyodideStatus('unavailable');\n}\n};\n\ncheckPyodideStatus();\n\nconst handlePyodideReady = () => {\nsetPyodideStatus('ready');\nconsole.log('🎉 Pyodide ready event received');\n};\n\nconst handlePyodideError = () => {\nsetPyodideStatus('unavailable');\nconsole.log('⚠️ Pyodide error event received');\n};\n\nwindow.addEventListener('pyodideReady', handlePyodideReady);\nwindow.addEventListener('pyodideError', handlePyodideError);\n\nconst interval = setInterval(checkPyodideStatus, 2000);\n\nreturn () => {\nwindow.removeEventListener('pyodideReady', handlePyodideReady);\nwindow.removeEventListener('pyodideError', handlePyodideError);\nclearInterval(interval);\n};\n}, []);\n\n// Search input component with AI capabilities\nconst renderSearchInput = () => (\n<div className=\"form-group search-group\">\n<label>Search Food</label>\n<div className={`search-input-container ${searchFocused ? 'search-focused' : ''}`}>\n<input\n  type=\"text\"\n  value={search}\n  onChange={e => { \n    setSearch(e.target.value); \n    setSelectedMeal(null); \n  }}\n  onFocus={() => setSearchFocused(true)}\n  onBlur={() => {\n    setTimeout(() => {\n      setSearchFocused(false);\n      setSuggestions([]);\n    }, 200);\n  }}\n  placeholder={\n    pyodideStatus === 'ready' ? \"🧠 AI-powered search ready...\" :\n    pyodideStatus === 'loading' ? \"🔄 Loading AI search...\" :\n    \"Search foods...\"\n  }\n  autoComplete=\"off\"\n  className=\"search-input enhanced-search\"\n/>\n\n<div className={`search-status ${pyodideStatus}`}>\n  {pyodideStatus === 'ready' && searchIndexBuilt && (\n    <span className=\"status-ready\">🚀 AI Search Active</span>\n  )}\n  {pyodideStatus === 'ready' && !searchIndexBuilt && (\n    <span className=\"status-indexing\">⚡ Building AI Index...</span>\n  )}\n  {pyodideStatus === 'loading' && (\n    <span className=\"status-loading\">🔄 Loading AI...</span>\n  )}\n  {pyodideStatus === 'unavailable' && (\n    <span className=\"status-basic\">📝 Basic Search</span>\n  )}\n  {suggestions.length > 0 && (\n    <span className=\"result-count\">({suggestions.length} results)</span>\n  )}\n</div>\n</div>\n\n{suggestions.length > 0 && searchFocused && (\n<ul className=\"suggestions-list enhanced\">\n  {suggestions.map((s, index) => (\n    <li key={s.id || index} onClick={() => handleSelectMeal(s)}>\n      <div className=\"suggestion-main\">\n        <div className=\"suggestion-name\">{s.name}</div>\n        {s.category && (\n          <div className=\"suggestion-category\">{s.category}</div>\n        )}\n        <div className=\"suggestion-meta\">\n          {s.searchScore && (\n            <span className=\"search-score\">\n              {(s.searchScore * 100).toFixed(0)}% match\n            </span>\n          )}\n          {s.searchMethod === 'ai' && (\n            <span className=\"ai-badge\">🧠 AI</span>\n          )}\n          {s.searchMethod === 'javascript' && (\n            <span className=\"js-badge\">JS</span>\n          )}\n          {s.match_type && (\n            <span className=\"match-type\">{s.match_type}</span>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"suggestion-indicators\">\n        {longCovidAdjust && (\n          <span className={`covid-indicator ${getCovidFoodRating(s.name)}`}>\n            {getCovidFoodRating(s.name) === 'beneficial' ? '✅' : \n             getCovidFoodRating(s.name) === 'caution' ? '⚠️' : 'ℹ️'}\n          </span>\n        )}\n      </div>\n    </li>\n  ))}\n</ul>\n)}\n</div>\n);\n\n// Fetch suggestions effect\nuseEffect(() => {\nif (debouncedSearch.length < 2) {\nsetSuggestions([]);\nreturn;\n}\n\nfetchSuggestions();\n}, [debouncedSearch, fetchSuggestions]);\n\n// Handle meal selection\nconst handleSelectMeal = (meal) => {\nsetSelectedMeal(meal);\nsetSearch(meal.name);\nsetSuggestions([]);\nsetSearchFocused(false);\n\nconst defaultServing = 100;\nconst nutrients = meal.nutrients?.per100g || {};\n\nsetFields({\nname: meal.name,\nprotein: nutrients.protein?.value || '',\ncarbs: nutrients.carbs?.value || '',\nfat: nutrients.fat?.value || '',\ncalories: nutrients.calories?.value || '',\nserving: defaultServing,\nmicronutrients: nutrients,\nlongCovidBenefits: meal.longCovidBenefits || [],\nlongCovidCautions: meal.longCovidCautions || [],\nlongCovidRelevance: meal.longCovidRelevance || {},\n});\n\nconst searchInput = document.querySelector('.search-input');\nif (searchInput) {\nsearchInput.blur();\n}\n};\n\n// Handle field changes\nconst handleFieldChange = (e) => {\nconst { name, value } = e.target;\n\nif (name === 'serving') {\nsetFields(prev => ({ ...prev, [name]: value }));\nrecalculateNutrients(value);\n} else {\nsetFields(prev => ({ ...prev, [name]: value }));\n}\n};\n\n// Fetch food log function\nconst fetchFoodLog = useCallback(async (page = 1) => {\nif (!currentUser || !currentUser.id) return;\n\nsetLogLoading(true);\nif (page === 1) setFoodLog([]);\nsetJournalError('');\n\ntry {\nconst q = query(\ncollection(db, 'users', currentUser.id, 'food_journal'),\norderBy('date', 'desc'),\norderBy('createdAt', 'desc'),\nlimit(ENTRIES_PER_PAGE * page)\n);\n\nconst snap = await getDocs(q);\nconst entries = snap.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n\nsetFoodLog(entries);\nsetJournalPage(page);\n\n} catch (err) {\nconsole.error('Error fetching food log:', err);\nsetJournalError(`Failed to load journal: ${err.message}`);\n} finally {\nsetLogLoading(false);\n}\n}, [currentUser]);\n\n// Fetch food log when tab changes\nuseEffect(() => {\nif (tab === 'Food Journal' && currentUser) {\nfetchFoodLog(1);\n}\n}, [tab, currentUser, fetchFoodLog]);\n\n// Back navigation\nconst handleBack = () => {\nnavigate('/dashboard');\n};\n\n// Loading state\nif (authLoading) {\nreturn (\n<div className=\"food-tracker-container\">\n<div className=\"loading-indicator\">Loading...</div>\n</div>\n);\n}\n\n// Authentication required state\nif (!currentUser) {\nreturn (\n<div className=\"food-tracker-container\">\n<div className=\"auth-required\">\n  <h2>Authentication Required</h2>\n  <p>Please log in to use the food tracker.</p>\n  <button onClick={handleBack} className=\"back-button\">\n    Back to Dashboard\n  </button>\n</div>\n</div>\n);\n}\n\nreturn (\n<div className=\"food-tracker-container\">\n{/* Animated background elements */}\n<div className=\"bg-animation\">\n<div className=\"card-glow\"></div>\n<div className=\"floating-shape shape-1\"></div>\n<div className=\"floating-shape shape-2\"></div>\n<div className=\"floating-shape shape-3\"></div>\n<div className=\"floating-shape shape-4\"></div>\n<div className=\"floating-shape shape-5\"></div>\n<div className=\"floating-shape shape-6\"></div>\n</div>\n\n<div className=\"food-tracker-content\">\n{/* Delete Confirmation Modal */}\n{deleteConfirmId && (\n  <DeleteConfirmModal\n    entryId={deleteConfirmId}\n    entryName={foodLog.find(entry => entry.id === deleteConfirmId)?.name || 'Unknown'}\n    onConfirm={handleDeleteEntry}\n    onCancel={() => setDeleteConfirmId(null)}\n  />\n)}\n\n{/* Header */}\n<div className=\"tracker-header\">\n  <button onClick={handleBack} className=\"back-button\">\n    ← Back to Dashboard\n  </button>\n  <button onClick={handleLogout} className=\"logout-btn\">\n    Logout\n  </button>\n</div>\n\n{/* Title */}\n<h2>🍽️ Smart Meal Tracker</h2>\n\n{/* AI Status Banner */}\n<div className={`ai-status-banner ${pyodideStatus}`}>\n  {pyodideStatus === 'ready' && (\n    <div className=\"ai-ready\">\n      🚀 <strong>AI Search Enabled:</strong> Advanced food matching with intelligent recommendations\n    </div>\n  )}\n  {pyodideStatus === 'loading' && (\n    <div className=\"ai-loading\">\n      🔄 <strong>Loading AI:</strong> Preparing enhanced search capabilities...\n    </div>\n  )}\n  {pyodideStatus === 'unavailable' && (\n    <div className=\"ai-fallback\">\n      📝 <strong>Basic Search:</strong> AI unavailable, using standard search\n    </div>\n  )}\n</div>\n\n<div className=\"food-tabs\">\n  {TABS.map(t => (\n    <button\n      key={t}\n      className={`food-tab${tab === t ? ' active' : ''}`}\n      onClick={() => setTab(t)}\n    >\n      {t}\n    </button>\n  ))}\n</div>\n\n{tab === 'Add Food' && (\n  <div className=\"food-form-section\">\n    <div className=\"food-form-left\">\n      {/* Edit Mode Indicator */}\n      {editingEntry && (\n        <div className=\"edit-mode-banner\">\n          <div className=\"edit-indicator\">\n            <span className=\"edit-icon\">✏️</span>\n            <span className=\"edit-text\">\n              <strong>Editing:</strong> {editingEntry.name}\n            </span>\n          </div>\n          <button \n            className=\"cancel-edit-btn\"\n            onClick={handleCancelEdit}\n            type=\"button\"\n          >\n            Cancel Edit\n          </button>\n        </div>\n      )}\n\n      {/* Long COVID Checkbox */}\n      <div className=\"form-group long-covid-checkbox-group\">\n        <label className=\"long-covid-checkbox-label\">\n          <input \n            type=\"checkbox\" \n            checked={longCovidAdjust} \n            onChange={e => setLongCovidAdjust(e.target.checked)} \n            className=\"long-covid-checkbox\"\n          /> \n          <span className=\"checkbox-text\">\n            I have Long COVID - Show food recommendations and adjustments\n          </span>\n        </label>\n        {longCovidAdjust && (\n          <div className=\"long-covid-info-banner\">\n            <p>🔬 <strong>Long COVID Mode:</strong> Food recommendations will be adjusted to focus on anti-inflammatory options that may help manage symptoms and support recovery.</p>\n          </div>\n        )}\n      </div>\n\n      {renderSearchInput()}\n\n      {/* Nutrition fields */}\n      <div className=\"form-row\">\n        <div className=\"form-group\">\n          <input \n            name=\"protein\" \n            value={fields.protein || ''} \n            onChange={handleFieldChange} \n            type=\"number\"\n            step=\"0.1\"\n            placeholder=\" \"\n          />\n          <label>Protein (g)</label>\n        </div>\n        <div className=\"form-group\">\n          <input \n            name=\"carbs\" \n            value={fields.carbs || ''} \n            onChange={handleFieldChange} \n            type=\"number\"\n            step=\"0.1\"\n            placeholder=\" \"\n          />\n          <label>Carbs (g)</label>\n        </div>\n        <div className=\"form-group\">\n          <input \n            name=\"fat\" \n            value={fields.fat || ''} \n            onChange={handleFieldChange} \n            type=\"number\"\n            step=\"0.1\"\n            placeholder=\" \"\n          />\n          <label>Fat (g)</label>\n        </div>\n        <div className=\"form-group\">\n          <input \n            name=\"serving\" \n            value={fields.serving || ''} \n            onChange={handleFieldChange}\n            type=\"number\"\n            step=\"1\"\n            className=\"serving-input\"\n            placeholder=\" \"\n          />\n          <label>Serving (g)</label>\n        </div>\n      </div>\n\n      {/* Meal details */}\n      <div className=\"form-row\">\n        <div className=\"form-group\">\n          <label htmlFor=\"meal-type\">Meal Type</label>\n          <select \n            id=\"meal-type\" \n            value={mealType} \n            onChange={e => setMealType(e.target.value)}\n          >\n            {mealTypes.map(type => (\n              <option key={type} value={type}>{type}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input \n            type=\"time\" \n            value={convertTo24Hour(time)} \n            onChange={handleTimeChange}\n            placeholder=\" \"\n          />\n          <label>Time</label>\n        </div>\n        <div className=\"form-group\">\n          <input \n            type=\"date\" \n            value={date} \n            onChange={e => setDate(e.target.value)}\n            placeholder=\" \"\n          />\n          <label>Date</label>\n        </div>\n      </div>\n\n      {/* Calories field */}\n      <div className=\"form-group\">\n        <input \n          name=\"calories\" \n          value={fields.calories || ''} \n          onChange={handleFieldChange} \n          type=\"number\"\n          step=\"1\"\n          placeholder=\" \"\n        />\n        <label>Calories</label>\n      </div>\n\n      <div className=\"form-group\">\n        <button \n          className={`submit-button ${editingEntry ? 'update-mode' : ''}`}\n          onClick={handleLogFood}\n          disabled={loading || !fields.name}\n        >\n          {loading ? \n            (editingEntry ? 'Updating...' : 'Logging...') : \n            (editingEntry ? 'Update Food' : 'Log Food')\n          }\n        </button>\n        {success && <div className=\"success-message\">{success}</div>}\n        {error && <div className=\"error-message\">{error}</div>}\n      </div>\n    </div>\n\n    <div className=\"food-form-right\">\n      {longCovidAdjust && (\n        <LongCovidSidePanel \n          selectedFood={fields.name} \n          selectedMeal={selectedMeal}\n          foodLog={foodLog}\n          isSearching={search.length >= 2 && !selectedMeal}\n          searchTerm={search}\n        />\n      )}\n      {!longCovidAdjust && (\n        <div className=\"general-nutrition-info\">\n          <h3>📊 Nutrition Tips</h3>\n          <p>Enable Long COVID mode above to get personalized food recommendations and anti-inflammatory guidance.</p>\n          {pyodideStatus === 'ready' && (\n            <div className=\"ai-tip\">\n              <p>💡 <strong>AI Tip:</strong> The search above uses machine learning to find the most relevant foods for your queries!</p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  </div>\n)}\n{tab === 'Food Journal' && (\n  <div className=\"food-journal-section\">\n    <div className=\"journal-header\">\n      <h3>Your Food Journal</h3>\n      <button \n        className=\"refresh-button\"\n        onClick={() => fetchFoodLog(1)}\n        disabled={logLoading}\n      >\n        {logLoading ? 'Loading...' : 'Refresh'}\n      </button>\n    </div>\n    \n    {journalError && <div className=\"error-message\">{journalError}</div>}\n    {success && <div className=\"success-message\">{success}</div>}\n    \n    {logLoading && foodLog.length === 0 ? (\n      <div className=\"loading-indicator\">Loading your food journal...</div>\n    ) : foodLog.length === 0 ? (\n      <div className=\"empty-state\">\n        <p>No entries found in your food journal.</p>\n        <p>Start by adding a meal in the \"Add Food\" tab!</p>\n      </div>\n    ) : (\n      <>\n        <div className=\"journal-summary\">\n          <p>Showing {foodLog.length} meal entries</p>\n        </div>\n        \n        <div className=\"journal-table-container\">\n          {(() => {\n            // Helper function to convert 12-hour time to 24-hour for sorting\n            const convertTo24HourForSort = (time12h) => {\n              if (!time12h) return '12:00';\n              \n              const [time, modifier] = time12h.split(' ');\n              if (!time || !modifier) return time12h;\n              \n              let [hours, minutes] = time.split(':');\n              let hour24 = parseInt(hours, 10);\n              \n              if (modifier.toUpperCase() === 'AM') {\n                if (hour24 === 12) hour24 = 0;\n              } else if (modifier.toUpperCase() === 'PM') {\n                if (hour24 !== 12) hour24 += 12;\n              }\n              \n              return `${hour24.toString().padStart(2, '0')}:${minutes}`;\n            };\n            \n            // FIXED: Sort entries using proper date comparison\n            const sortedEntries = [...foodLog].sort((a, b) => {\n              if (a.date !== b.date) {\n                return b.date.localeCompare(a.date); // Works for YYYY-MM-DD format\n              }\n              \n              const timeA = convertTo24HourForSort(a.time);\n              const timeB = convertTo24HourForSort(b.time);\n              return timeA.localeCompare(timeB);\n            });\n            \n            // Group entries by date\n            const groupedEntries = {};\n            sortedEntries.forEach(entry => {\n              if (!groupedEntries[entry.date]) {\n                groupedEntries[entry.date] = [];\n              }\n              groupedEntries[entry.date].push(entry);\n            });\n            \n            // FIXED: Use timezone-aware date formatting\n            const formatDateHeaderFixed = (dateString) => {\n              return formatDateHeader(dateString);\n            };\n            \n            // Calculate daily totals\n            const calculateDayTotals = (entries) => {\n              return entries.reduce((totals, entry) => {\n                totals.calories += (parseFloat(entry.calories) || 0);\n                totals.protein += (parseFloat(entry.protein) || 0);\n                totals.carbs += (parseFloat(entry.carbs) || 0);\n                totals.fat += (parseFloat(entry.fat) || 0);\n                totals.meals += 1;\n                return totals;\n              }, { calories: 0, protein: 0, carbs: 0, fat: 0, meals: 0 });\n            };\n            \n            // Handle all snack types for badge display\n            const getMealBadge = (mealType) => {\n              switch(mealType) {\n                case 'Breakfast': return 'B';\n                case 'Morning Snack': return 'MS';\n                case 'Lunch': return 'L';\n                case 'Afternoon Snack': return 'AS';\n                case 'Dinner': return 'D';\n                case 'Late Night Snack': return 'LN';\n                case 'Snack': return 'S';\n                default: return mealType.charAt(0);\n              }\n            };\n            \n            return (\n              <div className=\"journal-by-day\">\n                {Object.entries(groupedEntries).map(([date, entries]) => {\n                  const dayTotals = calculateDayTotals(entries);\n                  \n                  return (\n                    <div key={date} className=\"day-group\">\n                      {/* Day Header */}\n                      <div className=\"day-header\">\n                        <div className=\"day-header-left\">\n                          <h4 className=\"day-title\">\n                            {formatDateHeaderFixed(date)}\n                          </h4>\n                          <span className=\"day-meal-count\">\n                            {dayTotals.meals} meal{dayTotals.meals !== 1 ? 's' : ''}\n                          </span>\n                        </div>\n                        <div className=\"day-totals\">\n                          <div className=\"day-total-item\">\n                            <span className=\"total-label\">Total:</span>\n                            <span className=\"total-value\">{Math.round(dayTotals.calories)} cal</span>\n                          </div>\n                          <div className=\"day-total-macros\">\n                            <span className=\"macro-total\">P: {dayTotals.protein.toFixed(1)}g</span>\n                            <span className=\"macro-total\">C: {dayTotals.carbs.toFixed(1)}g</span>\n                            <span className=\"macro-total\">F: {dayTotals.fat.toFixed(1)}g</span>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* Day's Meals Table */}\n                      <table className=\"food-log-table day-table\">\n                        <thead>\n                          <tr>\n                            <th className=\"time-col\">Time</th>\n                            <th className=\"meal-type-col\">Meal</th>\n                            <th className=\"food-col\">Food</th>\n                            <th className=\"serving-col\">Serving</th>\n                            <th className=\"macro-col\">P</th>\n                            <th className=\"macro-col\">C</th>\n                            <th className=\"macro-col\">F</th>\n                            <th className=\"calories-col\">Cal</th>\n                            <th className=\"efficiency-col\">Eff%</th>\n                            <th className=\"actions-col\">Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {entries.map((entry, index) => (\n                            <tr key={entry.id} className={`meal-row ${index === 0 ? 'first-meal' : ''}`}>\n                              <td className=\"time-cell\">\n                                <span className=\"meal-time\">\n                                  {entry.time.replace(':00', '').replace(' ', '')}\n                                </span>\n                              </td>\n                              <td className=\"meal-type-cell\">\n                                <span className={`meal-badge ${(entry.mealType || 'unknown').trim().toLowerCase().replace(/\\s+/g, '-')}`}>\n                                  {getMealBadge(entry.mealType || 'Unknown')}\n                                </span>\n                              </td>\n                              <td className=\"food-cell\" title={entry.name}>\n                                <span className=\"food-name\">\n                                  {entry.name.length > 25 ? `${entry.name.substring(0, 25)}...` : entry.name}\n                                </span>\n                              </td>\n                              <td className=\"serving-cell\">{entry.serving || '0'}g</td>\n                              <td className=\"macro-cell\">{typeof entry.protein === 'number' ? entry.protein.toFixed(1) : (entry.protein || '0')}</td>\n                              <td className=\"macro-cell\">{typeof entry.carbs === 'number' ? entry.carbs.toFixed(1) : (entry.carbs || '0')}</td>\n                              <td className=\"macro-cell\">{typeof entry.fat === 'number' ? entry.fat.toFixed(1) : (entry.fat || '0')}</td>\n                              <td className=\"calories-cell\">\n                                <strong>{entry.calories || '0'}</strong>\n                              </td>\n                              <td className=\"efficiency-cell\">\n                                <span className={`efficiency-badge ${\n                                  typeof entry.metabolicEfficiency === 'number' \n                                    ? entry.metabolicEfficiency >= 80 ? 'high' : \n                                      entry.metabolicEfficiency >= 60 ? 'medium' : 'low'\n                                    : 'unknown'\n                                }`}>\n                                  {typeof entry.metabolicEfficiency === 'number' ? entry.metabolicEfficiency.toFixed(0) : 'N/A'}\n                                </span>\n                              </td>\n                              <td className=\"actions-cell\">\n                                <div className=\"action-buttons compact\">\n                                  <button\n                                    className=\"edit-btn compact\"\n                                    onClick={() => handleEditEntry(entry)}\n                                    title=\"Edit entry\"\n                                  >\n                                    ✏️\n                                  </button>\n                                  <button\n                                    className=\"delete-btn compact\"\n                                    onClick={() => setDeleteConfirmId(entry.id)}\n                                    title=\"Delete entry\"\n                                  >\n                                    🗑️\n                                  </button>\n                                </div>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })()}\n        </div>\n        \n        {foodLog.length >= journalPage * ENTRIES_PER_PAGE && (\n          <div className=\"load-more-container\">\n            <button \n              className=\"load-more-button\"\n              onClick={() => fetchFoodLog(journalPage + 1)}\n              disabled={logLoading}\n            >\n              {logLoading ? 'Loading...' : 'Load More Entries'}\n            </button>\n          </div>\n        )}\n      </>\n    )}\n  </div>\n)}\n\n{tab === 'Analysis' && (\n  <AnalysisTab \n    foodLog={foodLog} \n    userProfile={userProfile} \n  />\n)}\n</div>\n</div>\n);\n}\nexport default FoodTrackerPage;"],"names":["calculateFoodEfficiency","mealData","userProfile","timeStr","time","hourMatch","match","hour","parseInt","isPM","toLowerCase","includes","hour24","proteinFactor","parseFloat","protein","carbFactor","carbs","fatFactor","fat","timeFactor","mealTypeFactor","mealType","efficiency","Math","min","longCovidAdjust","hasLongCovid","severity","longCovidSeverity","longCovidBenefits","length","longCovidCautions","max","parseDate","dateString","parts","split","Date","formatDateForComparison","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","MacronutrientChart","_ref","userData","userIntake","chartRef","useRef","personalizedRDA","setPersonalizedRDA","useState","calculatePersonalizedRDA","useCallback","calculateBMI","weight","height","pow","totalCalories","age","gender","activity_level","bmr","tdee","covid_condition","bmi","round","calculateTDEE","macroDistribution","calculateMacroDistribution","proteinPct","carbsPct","fatPct","remaining","toFixed","covidNotes","value","covidNote","calories","useEffect","rda","current","d3","selectAll","remove","margin","width","svg","append","attr","macros","data","_objectSpread","name","colors","x","domain","map","d","range","padding","maxValue","y","call","ticks","text","formattedDate","toLocaleDateString","forEach","y0","stackedData","nutrient","y1","tooltip","style","join","bandwidth","on","event","parentData","this","parentNode","datum","amount","percentage","caloriesPerGram","html","pageX","pageY","legend","i","legendRow","calorieInfo","calculateCalories","_jsx","className","children","ref","minHeight","EfficiencyChart","_ref2","foodDatabase","processedData","setProcessedData","today","oneWeekAgo","setDate","oneWeekAgoString","filteredData","filter","meal","dateString1","dateString2","err","console","warn","isSameOrAfter","index","log","finalEfficiency","metabolicEfficiency","originalEfficiency","actualEnergy","wastedEnergy","fallbackEfficiency","allDatesInRange","push","combinedData","groupedByDate","uniqueMealTypes","dateData","get","mealsByType","meals","weightedEfficiency","reduce","acc","mealEfficiency","calorieWeight","totalActualEnergy","totalWastedEnergy","originalMeals","mealOrder","indexOf","chronologicalData","sort","a","b","localeCompare","xOuter","xInner","maxCalories","yEff","tickFormat","mealColors","mealColor","barX","barWidth","item","sortedLineData","barCenterX","xPos","chronologicalIndex","lineGenerator","defined","isNaN","curve","enter","legendY","legendData","label","color","opacity","mealTypeData","Object","entries","_ref3","type","floor","_jsxs","display","flexDirection","overflow","flexShrink","marginTop","backgroundColor","borderRadius","boxSizing","border","marginBottom","fontSize","fontWeight","lineHeight","paddingLeft","baseRDAData10","vitamin_a","unit","femaleAdjust","description","vitamin_c","vitamin_d","vitamin_e","vitamin_b6","vitamin_b12","folate","iron","calcium","magnesium","zinc","selenium","copper","vitamin_b1","vitamin_b2","vitamin_b3","BulletChart","_ref4","maxPercent","actualWidth","rawValue","displayPercentage","optimalWidth","storedValue","calculatedPercentage","shouldBeOptimal","barColor","percent","isAdjusted","left","MicronutrientChart","_ref5","userInfo","setUserInfo","chartData","setChartData","allChartData","setAllChartData","nutrientIntake","keys","intakeData","baseRDAData","completeIntakeData","nutrientKey","hasOwnProperty","rdaInfo","undefined","intakeValue","finalValue","finalUnit","numValue","ensureCompleteNutrientData","displayMode","setDisplayMode","isLoading","setIsLoading","selectedCategory","setSelectedCategory","getSeverityFactor","processNutrientData","fromUnit","toUnit","inputUnit","toUpperCase","rdaData","processedNutrients","intakeDetails","percentOfRDA","formattedName","replace","c","category","processedNutrient","key","rdaUnit","isAdjustedRDA","sortedNutrients","n","optimalNutrients","applyFilters","dataToFilter","slice","beforeOptimal","baseRDAData_","error","personalRDA","JSON","parse","stringify","_personalRDA$nutrient","adjustedValue","ageMultiplier","covid_severity","severityFactor","isFinite","roundedValue","getNutrientStatus","percentValue","getNutrientInfo","nutrientName","nutrientInfoMap","exactMatch","timer","setTimeout","calculatedRDA","processedAllData","optimalCount","clearTimeout","toggleCovidSeverity","_userInfo$covid_sever","_userInfo$longCovidSe","severities","currentSeverity","currentIndex","newSeverity","updatedUserInfo","getCurrentCovidSeverity","charAt","changeDisplayMode","mode","changeCategory","deficientCount","onClick","getCovidSeverityClass","getFilterDescription","displayPart","trim","medical_conditions","cursor","transition","minWidth","onMouseEnter","e","target","transform","onMouseLeave","AnalysisTab","_ref8","foodLog","Array","isArray","analysisDate","todayMeals","entry","macroSums","microSums","efficiencyData","todayEntries","entryIndex","micronutrients","_ref6","nutrientValue","valueToAdd","_ref7","threshold","getChartData","getUserTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","getTodayInUserTimezone","userTimezone","formatDateHeader","parseLocalDate","yesterday","daysAgo","getDaysAgoInUserTimezone","options","weekday","mealTypes","TABS","_foodLog$find","navigate","useNavigate","allFoodsCache","setAllFoodsCache","pyodideStatus","setPyodideStatus","searchIndexBuilt","setSearchIndexBuilt","searchFocused","setSearchFocused","currentUser","setCurrentUser","setUserProfile","activityLevel","authLoading","setAuthLoading","tab","setTab","search","setSearch","suggestions","setSuggestions","selectedMeal","setSelectedMeal","fields","setFields","setMealType","setTime","toLocaleTimeString","minute","setLongCovidAdjust","loading","setLoading","success","setSuccess","setError","setFoodLog","logLoading","setLogLoading","journalError","setJournalError","journalPage","setJournalPage","editingEntry","setEditingEntry","deleteConfirmId","setDeleteConfirmId","deleteLoading","setDeleteLoading","suggestionCache","setSuggestionCache","DeleteConfirmModal","entryId","entryName","onConfirm","onCancel","disabled","checkUserAuthentication","async","storedUserData","localStorage","getItem","parsedUserData","id","userDocRef","doc","db","uid","userDoc","getDoc","exists","fetchUserProfile","initializeFoodLogData","q","query","collection","orderBy","limit","getDocs","docs","LongCovidFoodInfo","foodName","longCovidRelevance","covidRelevance","benefits","cautions","functionalCompounds","antiInflammatoryLevel","antiInflammatory","compound","level","benefit","caution","LongCovidSidePanel","selectedFood","isSearching","searchTerm","getCovidFoodRating","foodLower","some","food","calculateMetabolicEfficiency","debouncedSearch","useDebounce","delay","debouncedValue","setDebouncedValue","handler","fetchSuggestions","normalizedSearch","calculateJavaScriptScore","score","startsWith","nameWords","searchWords","wordMatches","searchWord","nameWord","performFallbackSearch","allFoods","mealNameLower","word","searchMethod","searchScore","aName","bName","window","pyodideReady","result","pyodide","runPython","results","pythonResults","search_score","prev","checkPyodideStatus","handlePyodideReady","handlePyodideError","addEventListener","interval","setInterval","removeEventListener","clearInterval","handleSelectMeal","_meal$nutrients","_nutrients$protein2","_nutrients$carbs2","_nutrients$fat2","_nutrients$calories2","nutrients","per100g","serving","searchInput","document","querySelector","blur","handleFieldChange","newServing","_selectedMeal$nutrien","ratio","prevFields","_nutrients$protein","_nutrients$carbs","_nutrients$fat","_nutrients$calories","updatedFields","recalculateNutrients","fetchFoodLog","page","arguments","message","handleBack","find","deleteDoc","prevLog","removeItem","sessionStorage","clear","t","handleCancelEdit","checked","onChange","onFocus","onBlur","placeholder","autoComplete","s","match_type","step","htmlFor","time12h","modifier","hours","minutes","convertTo24Hour","time24","time12","Error","entryData","mealId","updateDoc","updatedAt","Timestamp","now","createdAt","docRef","addDoc","newEntry","_Fragment","convertTo24HourForSort","toString","sortedEntries","timeA","timeB","groupedEntries","getMealBadge","dayTotals","totals","calculateDayTotals","title","substring","handleEditEntry"],"sourceRoot":""}